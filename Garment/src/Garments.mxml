<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute" preloader="iamjosh.samples.preloader.CustomPreloader"
	width="100%"
	height="520"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
 	creationComplete="initapps();"
 	backgroundGradientColors="[#ffffff, #ffffff]"
 	verticalAlign="middle"
 	horizontalAlign="center"
 	xmlns:controls="com.adobesamples.controls.*" 
	xmlns:resize="flex.utils.ui.resize.*" 
	xmlns:oh="com.roguedevelopment.objecthandles.*" 
	xmlns:be="com.redrock.be.*" 
	xmlns:canvasPaint="canvasPaint.*"
 	xmlns:flash.filters="flash.filters.*" 
    xmlns:degrafa="com.degrafa.*"
    xmlns:paint="com.degrafa.paint.*"
    xmlns:geometry="com.degrafa.geometry.*"
    xmlns:shapes="com.roguedevelopment.flowchart.shapes.*" 
	xmlns:flowchart="com.roguedevelopment.flowchart.*"
	xmlns:degrafa1="http://www.degrafa.com/2007"
    xmlns:grid="com.degrafa.geometry.repeaters.*"
    xmlns:example="com.roguedevelopment_new.objecthandles_new.example.*"
    xmlns:fileupload="com.flashdev.file.*"
 	xmlns:ns1="compnent.*"
 	xmlns:MyComps="myComponents.*"

 	xmlns:fabulousFlex="fabulousFlex.*"
    applicationComplete="registerGlobalKeyHandler()"
	click="if(event.target == genericTshirt || event.target == genericTshirtBack || event.target == genericTshirtLeft || event.target == genericTshirtRight)
	{
		if(selectedObject !=null)
		{ 
			selectedObject.deselect();
		
		}else{
		
			
		}
	}">
 	 
 	 <mx:Style>
	    .myStyle {
	        swatchWidth:25;
	        swatchHeight:25;
	        textFieldWidth:95;
	    } 
	    @font-face {
		    src: local("Arial");
		    fontFamily: ArialEmbedded;
		    fontWeight: normal;
		}
		
		
		 
		TextPath {
		    font-family: ArialEmbedded;
		    font-size: 20;
		}
		
		
		
		.TextArea {
		    font-size: 100;
		    color:"#ff0000";
		}
		
		/* button
		{
			borderStyle:"none";
			skin: ClassReference(null);
		} */
		
		Application
		{
			 /* background-image: Embed("images/grid.jpg");
			background-repeat: repeat;
			borderSkin: ClassReference("com.degrafa.skins.CSSSkin");  */
		}
		
		.invalid{
		   color:#990000;
		}
		
		
		.myStyle {
            swatchWidth:25;
            swatchHeight:25;
            textFieldWidth:95;
            columnCount:10;
            swatchGridBackgroundColor:#ffffff; 
        }    

		.mystyle1 {
        fontFamily:COOPBL;
        fontSize: 32pt;
       
     }

	</mx:Style>
 	 
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.components.TextView;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.utils.ObjectUtil;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.components.TextView;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.events.SliderEvent;
			import mx.controls.sliderClasses.Slider;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.controls.Alert;
			
			import mx.components.TextView;
			import mx.controls.Alert;
			import mx.utils.ObjectUtil;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.components.TextView;
			import mx.components.TextView;
			import mx.components.TextView;
			import mx.components.TextView;
			import mx.components.TextView;
			import mx.containers.Box;
			import example.local;
			import mx.controls.SWFLoader;
			import mx.controls.SWFLoader;
			import mx.components.TextView;
			import com.roguedevelopment.objecthandles.ObjectHandles;
			import com.roguedevelopment.objecthandles.ObjectHandles;
			import com.roguedevelopment.objecthandles.ObjectHandlesCanvas;
			import com.roguedevelopment.objecthandles.ObjectHandles;
			
			import mx.components.TextView;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.controls.Alert;
			import mx.components.TextView;
			import mx.components.TextView;
			import mx.components.TextView;
			import mx.components.TextView;
			import mx.components.TextView;
			import mx.controls.Alert;
			import mx.states.SetStyle;
			import mx.states.SetStyle;
			import mx.components.TextView;
			import example.text;
			import com.roguedevelopment.flowchart.shapes.line;
			import com.roguedevelopment.flowchart.shapes.ellipticalarcnew;
			import com.degrafa.geometry.Ellipse;
			import com.degrafa.Surface;
			import com.roguedevelopment.objecthandles.Shapes;
			import mx.formatters.NumberBaseRoundType;
			import mx.formatters.DateFormatter;
			import flash.sampler.Sample;
			import com.*;
			
			
			import com.roguedevelopment.objecthandles.ShapesFactory;
			import com.roguedevelopment.objecthandles.ObjectHandlesCanvas;
			import com.roguedevelopment.objecthandles.ObjectHandles;
			import com.roguedevelopment.objecthandles.ObjectHandleEvent;
			import com.roguedevelopment.objecthandles.ObjectHandlesMouseCursors;
			import com.roguedevelopment.objecthandles.SelectionManager;
		    import com.roguedevelopment.objecthandles.SelectionManager;
			
			import com.degrafa.geometry.Circle;
			import com.degrafa.utilities.swf.SWFFontReader;
			import com.degrafa.geometry.Polygon;
			import com.degrafa.Graphic;
			import com.degrafa.GeometryGroup;
			import com.degrafa.geometry.Geometry;
			import com.degrafa.core.IGraphicsStroke;
			import com.degrafa.core.IGraphicsFill;	
			
		
			
			import com.redrock.be.TextPath;
			import com.abdulqabiz.utils.QueryString;
			
      		import com.zavoo.svg.nodes.SVGRoot;
			import com.zavoo.svg.SVGViewer;
			
			import com.zavoo.svg.SvgPaths;
			import com.zavoo.svg.SvgPath;
	
			import mx.graphics.*;
			import mx.graphics.RoundedRectangle;
			import mx.graphics.codec.JPEGEncoder;
			import mx.graphics.BitmapFill;
			import mx.graphics.codec.PNGEncoder;
			import mx.graphics.ImageSnapshot;
			
			import mx.rpc.*;
			import mx.rpc.xml.SimpleXMLDecoder;
			import mx.rpc.remoting.RemoteObject;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.ResultEvent;
            import mx.rpc.events.FaultEvent;
            
            
			import mx.accessibility.AlertAccImpl;
			import mx.preloaders.Preloader;
			
			import mx.utils.*;
			import mx.utils.StringUtil;
			import mx.utils.ArrayUtil;
			import mx.utils.ObjectProxy;
			import mx.utils.ObjectUtil;
			
			import mx.collections.*;
			import mx.collections.ArrayCollection;
			import mx.collections.IViewCursor;
			import mx.collections.ArrayCollection;
			
			import mx.effects.*;
			import mx.effects.Tween;
			import mx.effects.Move;
			
			
			import mx.events.*;
			import mx.events.DropdownEvent;
	     	import mx.events.SliderEvent;
	        import mx.events.SliderEvent;
			import mx.events.CloseEvent;
			import mx.events.ItemClickEvent;
			import mx.events.ValidationResultEvent;
			
			import mx.controls.*;
			import mx.controls.Image;
	     	import mx.controls.Alert;
	     	
	     	
	     	import mx.containers.*;
	     	import mx.containers.TitleWindow;
	     	import mx.containers.HBox;
	     	
			
			import flash.display.*;
 			import flash.net.URLRequest;
 			import flash.net.URLLoader;
			import flash.net.URLRequest;
			import flash.events.Event;
 			import flash.filters.DropShadowFilter;
 			import flash.display.Graphics;
			
			import mx.core.*;
	       	import mx.core.IUIComponent;
	       
	       
	        import mx.messaging.management.ObjectInstance;
	        import mx.managers.PopUpManager;
	        
			import mx.styles.StyleManager;
	        import mx.preloaders.Preloader;
			
			
			import fabulousFlex.PreloadingImage;
			import fabulousFlex.SquaresSpinnerPreloadingWindow;
			import fabulousFlex.ProgressPreloadingWindow;
			import fabulousFlex.SquaresPreloadingWindow;
			import fabulousFlex.WheelPreloadingWindow;
			
			import popups.Loading;
			import popups.Loadingfont;
			import popups.LoadingCart;
			
			
			
			//=========Variables=======// 
			
			//[Bindable] private var myUrlpaht:String = ExternalInterface.call('eval', 'window.location.host');
			//[Bindable] private var myUrl:String="http://"+myUrlpaht+"/signimal/";
			//private var myUrl:String="http://www.octalsoftware.com/signimal/";
			
			[Bindable] private var myUrl:String = new UrlString().myString;
			
			
			[Bindable] private var VARIABLES_URL:String = myUrl+"params.txt";
			[Bindable] private var VARIABLES_URL_TEXT:String = myUrl+"txteditor.txt";
			[Bindable] private var VARIABLES_URL_BANNER:String = myUrl+"banner.txt";
			[Bindable] private var VARIABLES_URL_DIE:String = myUrl+"die.txt";
            [Bindable] private var arrColl:ArrayCollection;
            [Bindable] private var paramColl:ArrayCollection;

            private var urlReq:URLRequest;
            private var urlLdr:URLLoader;
			
			
			private const _strDomain:String = new String(myUrl+"signimal_flex_php/");
			private const _strUploadScript:String = new String(_strDomain + "upload.php");
			
			[Bindable] private var myApiUrl:String=myUrl+"media/catalog/product";
			[Bindable] private var myApiWsdlUrl:String=myUrl+"index.php/api/?wsdl";
			
			
			
		   	[Bindable] private var curSize:int = 10;
			[Bindable] private var curFont:String = "";
			[Bindable] private var selectedObject:ObjectHandles = null;
			[Bindable] private var selectedObjectShp:ObjectHandles = null;
			[Bindable] public var cnvsParent:Canvas = new Canvas();
			
	        [Bindable] private var myColor:String = new String();
	        [Bindable] private var textCurSize:Number=12;
           	[Bindable] private var _data:ArrayCollection;
            [Bindable] private var leftSide:String;
			[Bindable] private var rightSide:String;
			[Bindable] private var topSide:String;
			[Bindable] private var bottomSide:String;
			[Bindable] private var mainPhoto:String;
			
			[Bindable] private var assetsUrl:String;
			[Bindable] private var myxml:String;
			
			[Bindable] private var request:URLRequest;
			[Bindable] private var xmlListColls:XMLListCollection = new XMLListCollection();
			[Bindable] private var arrProductInfo:ArrayCollection;
			[Bindable] private var arrBannerProductInfo:ArrayCollection;
  			[Bindable] private var arrProductDieInfo:ArrayCollection;
  			[Bindable] private var arrProductTexteditorInfo:ArrayCollection;
  			[Bindable] private var arrProductDDInfo:ArrayCollection;
  			[Bindable] private var arrImageInfo:ArrayCollection;
  			[Bindable] private var productId:String;
  			
  			
  			[Bindable] private var arrPriceInfo:ArrayCollection;
  			[Bindable] private var arrPriceLessInfo:ArrayCollection;
			[Bindable] private var dataArrayApi:ArrayCollection;
			[Bindable] private var shapeArrayApi:ArrayCollection;
			[Bindable] private var dataDisplayArray:ArrayCollection;
			[Bindable] private var textareaColor:String =  new String();
			[Bindable] private var selectedObjectBanner:ObjectHandles = null;
			
			[Bindable] public var myName:String;
	        [Bindable] public var myHometown:String;
			[Bindable] public var playlistsDataProvider:Array;
	        [Bindable] public var playlistsComboBoxDataProvider:ArrayCollection;
			[Bindable] public var font_dir:String;
			[Bindable] public var myx:Number = 0;
			[Bindable] public var circelColor:Number;
			[Bindable] public var dieColor:Number;
			[Bindable] public var galleries:ArrayCollection;
			[Bindable] public var randomNum:Number = new Number (Math.floor(Math.random()* (100000 - 1 + 1)) + 1);
			[Bindable] public var randomNum1:Number = new Number (Math.floor(Math.random()* (100000 - 1 + 1)) + 1);
	  		[Bindable] public var dropShacolor:uint;
			[Bindable] public var selectedItem:Object;
			[Bindable] public var myComSide:String;
			
			
			
			
			public var myObjHand:ObjectHandles;
			public var totalHeight:Number;
		   	public var totalWidth:Number;
		   	
			public var mySku:String;
			public var paths:SvgPaths;
			public var canvas:Sprite;
			
			public var assignedProductsDieCat:Number = 45;
			public var assignedProductsTshirtCat:Number = 35;
			public var assignedShapeTshirtCat:Number = 61;
			public var comboCat:Number=56;
			
			public var totalPrice:int=0;
			public var proPrice:int=0;
			
			public var newWidth:Number;
			public var newHeight:Number;
	    	
			public var _SESSIONID:String;
			public var _S_ID:String; 
			
			public var bannerImg:String;
			public var bannerPrice:Number;
			public var bannerP_id:Number;
			
			public var textBasePrice:Number;
			public var textP_id:Number;
			public var DDBasePrice:Number;
			public var DDP_id:Number;
			
			
			private var loading:Loading = new Loading();
			private var loadingFont:Loadingfont = new Loadingfont();
			private var loadingCart:LoadingCart = new LoadingCart();
			private var dX:int = 10;
			private var dY:int = 10;
			
			private var qs:QueryString;
			private var mystyle:String;
			
			private var alert:Alert;
			private var loadRequests:int = 0;
			
			private var cat_ids:Number;
			
			private var index:int = 0;
			private var localX:int = 10;
			private var localY:int = 10;
			
			private var X:int = 10;
			private var Y:int = 10;
			
			
			private var myRectangle:Shape;
			private var myRectSp:Sprite;
			private var beginX:Number; // top left x position
			private var beginY:Number; // top left y position
			private var endX:Number; // bottom right x position
			private var endY:Number; // bottom right y position
			private var btnX:Number; // button position
			private var btnY:Number; // button position
			private var copyBeginX:Number;
			private var copyBeginY:Number;
			private var copyEndX:Number; // bottom right x position
			private var copyEndY:Number; // bottom right y position
			
			private var imgLoader:Loader;
			private var holder:MovieClip;
			private var imageBMP:BitmapData;
			private var bmpWidth:int;
			private var bmpHeight:int;
			private var _name:String;
			private var _priceDie:Number;
			private var _proDie_id:Number;

			private var  newObjectWidth:Number=0;
			private var  newObjectHeight:Number=0;
			private var fontArr:Array;
            
            private var fade:Effect = new Fade();
			private var iris:Effect = new Iris();
			private var blur:Blur = new Blur();
			private var bool:Boolean = true;
			private var titleWindow:TitleWindow;
            
            
            protected var resize_handle:Class;
			protected var rotate_handle:Class;
         
         	[Bindable] public var cards: Array = [ {label:"arial", data:1}, 
	           {label:"arial black", data:2}, {label:"verdana", data:3} ];
			
			[Bindable] private var svgimage:ArrayCollection = 
	     	new ArrayCollection([
	     	 {img:"assets/coloredtoucan.svg"},
	     	 {img:"assets/eleven_below_single.svg"}
			]);
			
			[Embed(source='images/tools/circle.png')]
			private var circle:Class;
			[Embed(source='images/tools/rectangle.png')]
			private var rectangle:Class;
			[Embed(source='images/tools/icon-04.png')]
			private var roundrectcon4:Class;
			[Embed(source='images/tools/line.png')]
			private var line:Class;
			[Embed(source='images/tools/icon-07.png')]
			private var hline:Class;
			[Embed(source='images/tools/icon-08.png')]
			private var vline:Class;
			[Embed(source='images/tools/icon-04.png')]
			private var roundrect:Class;
			[Embed(source='images/tools/icon-05.png')]
			private var roundrectcon:Class;
			[Embed(source='images/tools/icon-010.png')]
			private var polyline:Class;
			[Embed(source='images/tools/wedge.png')]
			private var wedge:Class;
			
			[Embed(source='images/tools/ellipticalarc.png')]
			private var ellipticalarcnew:Class;
			
			[Embed(source='images/tools/ellipticalarc1.png')]
			private var ellipticalarc1:Class;
			
			[Embed(source='images/tools/ellipticalarc2.png')]
			private var ellipticalarc2:Class;
			
			[Embed(source='images/tools/icon-13.png')]
			private var ellipse:Class;
			
			[Embed(source='images/tools/plus.png')]
			private var cross:Class;
			
			
	     	[Bindable]
	     	private var dp:Array = [{icon:circle, label:"circle"}, 
	     	{icon:rectangle, label:"rectangle"},
	     	{icon:roundrectcon4, label:"roundrectcon4"},
	     	{icon:vline, label:"vline"},
	     	{icon:hline, label:"hline"},
	     	{icon:roundrect, label:"roundrect"},
	     	{icon:roundrectcon, label:"roundrectcon"},
	     	{icon:polyline, label:"polyline"},
	     	{icon:wedge, label:"wedge"},
	     	{icon:ellipticalarcnew, label:"ellipticalarcnew"},
	     	{icon:ellipticalarc1, label:"ellipticalarc1"},
	     	{icon:ellipticalarc2, label:"ellipticalarc2"},
	     	{icon:ellipse, label:"ellipse"},
	     	{icon:cross, label:"cross"},
	     	];
     	
	     	
        	[Bindable]
            public var simpleDP:Array = [0x000066, 0x000000, 0xFFFFFF];
        	
        	[Bindable]
            public var ColorDP:Array = ['0x000000', '0xFFFFFF', '0x266ED9', '0x00661F', '0x2B293D', '0x221782', '0x293D2D', '0x99000F', '0x4D1933', '0xFFB200',
			'0x7F7F7F', '0x144552', '0x330A5C', '0xCC3D00', '0x422D24', '0xFAF2D1', '0xFFCC00', '0xF2DB0D', '0x85BCE0', '0x89EB47',
			'0xB87A93', '0xEBADC0', '0x1A8AD2', '0x31AA9D', '0x494C1A', '0x9A3558', '0xCCFF00', '0x1AFF00', '0xFF4D00', '0xFF006E'];
        
        	
        
        	
        
            public function openEvt(event:DropdownEvent):void {
              
            }       

            public function changeEvt(event:ColorPickerEvent):void {
              
            }

        	
	        /*
	        * Strat font chagne styel 
	        */
        	
	        private function onCmbFontChange(event:ListEvent):void
	        {
	          	if(selectedObject != null)
		        {
	        		var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
	        		if(txt != null)
	        		{
        				fontf = "";
        				txt.setStyle("fontFamily", combobox.selectedLabel);
	        		}
		        }
		        
		        /* var arr:Array = cnvsParent.getChildren();
		  		for(var l:int=0; l < arr.length; l++)
		      	{
		      		var child:TextView = arr[l] as TextView;
		      		if(child !=null)
		      		{
		      			//Alert.show(''+combobox.selectedLabel);
		      			child.setStyle("fontFamily", combobox.selectedLabel);					
		      		}
		      	} */
		        
		        
	        }

			private var currentTheme:String = "blue";
			[Bindable] private var fontf:String;
		
			private function onFontChange(event:ListEvent):void
	        {
	          	showLoadingFont();	
	          	fontf = mycombobox.selectedLabel;
	          	var loader:URLLoader = new URLLoader();
	          	loader.load(new URLRequest(myUrl+"signimal_flex_php/compilecss.php?rand="+randomNum));
				loader.addEventListener(Event.COMPLETE,cssLoaded);
	        }
		    
		    private function cssLoaded(e:Event):void
			{
				hideLoadingFont();
				StyleManager.loadStyleDeclarations(myUrl+"signimal_flex_php/uploads/font/"+randomNum+"/style.swf");
				if(selectedObject != null)
			    {
		        	var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
		        	if(txt != null)
		        	{
	        			txt.setStyle("fontFamily", fontf);
	        			
	        		}
			    }
			}
		    
	        private function completeHandler(event:StyleEvent):void
	        {
	            super.initialized = true;
	        }
	        
			/*
	        * End font chagne styel 
	        * Start text align
	        */
	        public function setTextAlign(event:MouseEvent):void 
		    {
		       	var align:String = event.currentTarget.id;
		       	if(selectedObject != null)
	        	{
	        		var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
	        		if(txt != null)
	        		{
	        			txt.setStyle("textAlign",align);
	        		}
	        	}
		    }
		      
	     	/*
	        * End text align 
	        * Statr bold italic under line 
	        */
     	
	     	private function checkbold ():void
			{
				if(boldtext.selected==true)
				{
					if(selectedObject != null)
		        	{
		        		var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
		        		
		        		if(txt != null)
		        		{
		        			txt.setStyle("fontWeight","normal");
		        		}
		        	}
				}
				if(boldtext.selected==false)
				{
					if(selectedObject != null)
		        	{
		        		var txt1:TextArea = selectedObject.getChildAt(0) as TextArea;
		        		if(txt1 != null)
		        		{
		        			txt1.setStyle("fontWeight","bold");
		        		}
		        	}
				}
			}
			
			private function checkitalic ():void
			{
				if(italictext.selected==true)
				{
					if(selectedObject != null)
		        	{
		        		var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
		        		if(txt != null)
		        		{
		        			txt.setStyle("fontStyle","normal");
		        		}
		        	}
				}
				if(italictext.selected==false)
				{
					if(selectedObject != null)
		        	{
		        		var txt1:TextArea = selectedObject.getChildAt(0) as TextArea;
		        		if(txt1 != null)
		        		{
		        			txt1.setStyle("fontStyle","italic");
		        		}
		        	}
				}
			}
			private function checkunderline ():void
			{
				var txt:TextArea;
				if(underlinetext.selected==true)
				{
					if(selectedObject != null)
		        	{
		        		txt = selectedObject.getChildAt(0) as TextArea;
		        		if(txt != null)
		        		{
		        			txt.setStyle("textDecoration","normal");
		        		}
		        	}
				}
				if(underlinetext.selected==false)
				{
					if(selectedObject != null)
		        	{
		        		txt = selectedObject.getChildAt(0) as TextArea;
		        		if(txt != null)
		        		{
		        			txt.setStyle("textDecoration","underline");
		        		}
		        	}
				}
			}
     	
	     	/*
	        * End bold italic under line 
	        * Start Font color Change  
	        */
	     	
	     	private function intToHex(color:int = 0):String {
	            var mask:String = "000000";
	            var str:String = mask + color.toString(16).toUpperCase();
	            //return "#" + str.substr(str.length - 6);
	            return "#" + str.substr(str.length - 6);
	        }
	        private function intToHexs(color:int = 0):String {
	            var mask:String = "000000";
	            var str:String = mask + color.toString(16).toUpperCase();
	            //return "#" + str.substr(str.length - 6);
	            return  str.substr(str.length - 6);
	        }
        	
        	
           private var copyColor:uint;
           
           private function OnColorChange(event:ColorPickerEvent):void
	       {
	        	copyColor = event.color;
	        	if(selectedObject != null)
	        	{
	        		var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
	        		var img:Image = selectedObject.getChildAt(0) as Image;
	        		if(txt != null)
	        		{
	        			txt.setStyle('color', event.color);
	        			
	        		}else if(img !=null){
	        			
	        			
	        			var colorTrans:ColorTransform = new ColorTransform();
						colorTrans.color = event.color;
					    img.transform.colorTransform=colorTrans;
			        }
	        	}
	       }
	       private function OnShadowcolor():void
           { 
	        	if(selectedObject != null)
	        	{
	        		var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
	        		if(txt != null)
	        		{
	        			if(bordercheckBox.selected==false)
	        			{
	        				txt.setStyle("borderStyle", 'none');
	        				
	        			}else{
	        				txt.setStyle("borderStyle", 'Solid');
	        				txt.setStyle("borderColor", borderColorPicker.selectedColor);
	        			}
	        			//dropShaText.distance=shadowSlider.value;
	        			//dropShaText.angle=45;
	        			//dropShaText.blurX=0;
	        			//dropShaText.blurY=0;
	        			//dropShaText.alpha=1;
	        			//dropShaText.color=dropShacolor;
	        		}
	        	}	
           }
            
          	
			/*
	        * End Font color Change 
	        * Start remove object  
	        */
			private function removeObject():void
			{
				//viewPanel.removeChild(oh);
			}
		
			/*
	        * End remove object  
	        * Start create & select Daynamic Object
	        */ 
			
			private function val(ho2id:String):String
			{
				return ho2id;
			}
		
			private function OnObjectHandlesSelected(event:ObjectHandleEvent):void
	   		{
	   			var oh1:ObjectHandles = event.currentTarget as ObjectHandles;
	   			myObjHand=oh1;
	   			if(oh1 != null)
	   			{
					selectedObject = oh1;
					//selectedObject.select();
					addtocart.visible=true;
					tsqty.visible=true;
					Quantity.visible=true;
					pricetagshirt.visible=true;	
				}
	   		}
   			
   			public var newWidths:Number =150;
   			public var newHeights:Number =150;
   			public function getNewWidthHeightArc(e:ObjectHandleEvent):void
			{
				newWidths =  (e.currentTarget as ObjectHandles).width;
			    newHeights =  (e.currentTarget as ObjectHandles).height;
			    drawText();
			}
			
			public function getNewWidthHeight(e:ObjectHandleEvent):void
			{
				newWidths =  (e.currentTarget as ObjectHandles).width;
			    newHeights =  (e.currentTarget as ObjectHandles).height;
			}
			
			
			
   			public var Final:Number = 0;
   			public function getNewWidthHeights(event:SliderEvent):void
			{
				var myw:Number=0;
			    var myh:Number=0;
				var myNumber:Number=0;
				var rad:Number = 62;
				var cur:Number = Final/2 + 62;
				myNumber =radiuss.value - cur;
				Final = myNumber*2;
				myw =  newWidths  + Final;
			  	myh =  newHeights + Final;
			  	newWidths =myw;
				newHeights=myh;
				drawText();
			    
			}
   		
   			public function getWidthHeight():void
   			{
   			
   			}
			
			
   			
   			public function getNewXY(e:ObjectHandleEvent):void{
			    var newX:int =  (e.currentTarget as ObjectHandles).x;
			    var newY:int = (e.currentTarget as ObjectHandles).y;
				//Alert.show(" X "+newX+" Y "+newY)
			}
			
		
	   			   
	   			
		   
		   private function hit(event:MouseEvent):void
		   {
		   		var dd:String = event.currentTarget.id;
				var oh1:ObjectHandles = new ObjectHandles();
				oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
				oh1.allowRotate=false;
				oh1.x=70; 
				oh1.y=94;
				oh1.height=47; 
				oh1.width=168;
				val(oh1.id)
				oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeight);
   				
   				var txt:TextArea = new TextArea();
				txt.text="Click here and type your text."
				
				if(checkBoxShd.selected == true)
				{
					txt.filters=[dropShaText];
					
				}else if(checkBoxShd.selected == false)
				{
					txt.filters=[];
				}
				txt.horizontalScrollPolicy = "off";
				txt.verticalScrollPolicy = "off";
				txt.percentWidth=100;
				txt.percentHeight=100;
				txt.setStyle("backgroundAlpha","0")
				txt.setStyle("fontSize","14"); 
				txt.setStyle("textAlign","center");
				txt.setStyle("length","0");
				txt.setStyle("borderStyle","none");
				txt.condenseWhite=true;
				txt.addEventListener(MouseEvent.CLICK ,	clickDis);
				//txt.height = txt.textHeight - 1;

				if(dd=="test")
				{
					oh1.allowHMove=true;
					oh1.allowHResize=true;
					oh1.allowVMove=true;
					oh1.allowVResize=true;
					oh1.allowRotate=false;
					oh1.mouseChildren=true;
					
					txt.selectable=true;
					txt.editable=true;
					oh1.addChild(txt);
					//var children:Array;
					
					if(myViewStack.selectedChild==Tshirt)
					{
						addtocart.visible=true;
						tsqty.visible=true;
						Quantity.visible=true;
						pricetagshirt.visible=true;
						if(mySubViewStack.selectedChild==genericTshirt)
						{
					    	genericTshirt.addChild(oh1);
					    	
					 	}else if(mySubViewStack.selectedChild==genericTshirtBack)
					 	{
					 		genericTshirtBack.addChild(oh1);
					 		
					 	}else if(mySubViewStack.selectedChild==genericTshirtLeft){
					 	
					 		genericTshirtLeft.addChild(oh1);
					 		
					 	}else if(mySubViewStack.selectedChild==genericTshirtRight){
					 	
					 		genericTshirtRight.addChild(oh1);
					 	}	
					}     
				} 
			}
			
	   		private function clickDis(event:MouseEvent):void
	   		{
	   			if(selectedObject != null)
	        	{
	        		selectedObject.allowHMove=false;
					selectedObject.allowHResize=false;
					selectedObject.allowRotate=false;
					selectedObject.allowVMove=false;
					selectedObject.allowVResize=false;
					selectedObject.mouseChildren=true;
					//selectedObject.visible=true;
				 }
				// dropShadow.visible=true;
	        }
	   		
	   		//removeSelection
	   		private function removeSelection(event:MouseEvent):void
	   		{
	   			var remove:String = event.currentTarget.id;
	   			if(remove=="removeselection")
	   			{
		   			if(selectedObject != null)
		        	{
		        		//selectedObject.deselect();
		        		selectedObject.allowHMove=false;
						selectedObject.allowHResize=false;
						selectedObject.allowRotate=false;
						selectedObject.allowVMove=false;
						selectedObject.allowVResize=false;
						selectedObject.mouseChildren=true;
						var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
	        			if(txt != null)
	        			{
	        			  txt.editable=true;
	        			  txt.setStyle("borderStyle","none");
	        			 	if(checkBoxShd.selected == true)
							{
								txt.filters=[dropShaText];
								
							}else if(checkBoxShd.selected == false)
							{
								txt.filters=[];
							}	
	        			}
			    	}
	   			}
	   		}
	   		
	   		private function hits(event:MouseEvent):void
			{
				var dd:String = event.currentTarget.id;
				
				if(selectedObject != null)
        		{
        			selectedObject.select();
					selectedObject.allowHMove=true;
					selectedObject.allowHResize=true;
					selectedObject.allowRotate=false;
					selectedObject.allowVMove=true;
					selectedObject.allowVResize=true;
					selectedObject.mouseChildren=false;
					selectedObject.buttonMode=false;
					selectedObject._allowKeyboardManipulation=true;
					
					var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
        			if(txt != null)
        			{
        			  txt.editable=false;
        			}
        		
        		}else 
        		{
        			if(selectedObjectShp !=null)
        				selectedObjectShp.select();
        		}
	   		 }
	   		 
	   		 private function ontxtMouseDoubleClick(event:MouseEvent):void
	   		 {
	   			var oh1:ObjectHandles = event.currentTarget as ObjectHandles;
	   		 }
   		
   			/*
	        * End create & select Daynamic Object  
	        * Start zoom in or zoom out
	        */ 
   			 private function changeZoom(event:SliderEvent) : void
			 {
			 	var children:Array;
			 	var nObj:int;
        		 var childObj:ObjectHandles;
 			 	 var j:int;
				if(myViewStack.selectedChild==Tshirt)
				{
					previewImg.scaleY = event.target.values[0]*2/100;
					previewImg.scaleX = event.target.values[0]*2/100;
					
					if(mySubViewStack.selectedChild==genericTshirt)
					{
				    	children = genericTshirt.getChildren();
				    	
				 	}else if(mySubViewStack.selectedChild==genericTshirtBack)
				 	{
				 		children = genericTshirtBack.getChildren();
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				 	
				 		children = genericTshirtLeft.getChildren();
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtRight){
				 	
				 		children = genericTshirtRight.getChildren();
				 	}
				 	
					nObj = children.length;
					for (j = 0; j < nObj; j++)
			 		{
			 		   childObj = children[j] as ObjectHandles;
			 		   if(childObj != null)
					   {
					   	childObj.scaleY = event.target.values[0]*2/100;
						childObj.scaleX = event.target.values[0]*2/100;
					   }
			 		}
				}    
				
			 }
			 
			 private function adjustDefaultZoom() : void
			 {
				if(selectedObject!=null)
				{
					selectedObject.scaleX = slider.values[0]/100*2;
					selectedObject.scaleY = slider.values[0]/100*2;
				} 
			 }
			 
			 private function myDataTipFunc(val:String):String {
			   return  String(val)+ "%";
			 }
			 /*
	        * End zoom in or zoom out  
	        * Start Path Text 
	        */  
			 private function TextOnColorChange(event:ColorPickerEvent):void
	         {
	        	myColor = intToHexs(event.color);
	        	if(myViewStack.selectedChild==Tshirt)
				{
					if(mySubViewStack.selectedChild==genericTshirt)
					{
						var arr:Array = genericTshirt.getChildren();
				  		for(var i:int=0; i < arr.length; i++)
				      	{
				      		var child:ObjectHandles = arr[i] as ObjectHandles;
				      		if(child !=null)
				      		{
				      			var arrobj:Array = child.getChildren();
				      			for(var x:int=0; x < arrobj.length; x++)
						      	{
						      		var childs:TextView = arrobj[x] as TextView;
					      			if(childs !=null)
					      			{
					      				childs.setStyle("color", "#"+myColor);						
					      			}
						      	}
				      		}
				      	}
					
					}else if(mySubViewStack.selectedChild==genericTshirtBack)
					{
						var arrBack:Array = genericTshirtBack.getChildren();
				  		for(var j:int=0; j < arrBack.length; j++)
				      	{
				      		var childBack:ObjectHandles = arrBack[j] as ObjectHandles;
				      		if(childBack !=null)
				      		{
				      			var arrobjBack:Array = childBack.getChildren();
				      			for(var y:int=0; y < arrobjBack.length; y++)
						      	{
						      		var childsBack:TextView = arrobjBack[y] as TextView;
					      			if(childsBack !=null)
					      			{
					      				childsBack.setStyle("color", "#"+myColor);						
					      			}
						      	}
				      		}
				      	}
					
					}else if(mySubViewStack.selectedChild==genericTshirtLeft){
					
						var arrLeft:Array = genericTshirtLeft.getChildren();
				  		for(var k:int=0; k < arrLeft.length; k++)
				      	{
				      		var childLeft:ObjectHandles = arrLeft[k] as ObjectHandles;
				      		if(childLeft !=null)
				      		{
				      			var arrobjLeft:Array = childLeft.getChildren();
				      			for(var z:int=0; z < arrobjLeft.length; z++)
						      	{
						      		var childsLeft:TextView = arrobjLeft[z] as TextView;
					      			if(childsLeft !=null)
					      			{
					      				childsLeft.setStyle("color", "#"+myColor);						
					      			}
						      	}
				      		}
				      	}
					
					}else if(mySubViewStack.selectedChild==genericTshirtRight)
					{
						
						var arrRight:Array = genericTshirtRight.getChildren();
				  		for(var l:int=0; l < arrRight.length; l++)
				      	{
				      		var childRight:ObjectHandles = arrRight[l] as ObjectHandles;
				      		if(childRight !=null)
				      		{
				      			var arrobjRight:Array = childRight.getChildren();
				      			for(var w:int=0; w < arrobjRight.length; w++)
						      	{
						      		var childsRight:TextView = arrobjRight[w] as TextView;
					      			if(childsRight !=null)
					      			{
					      				childsRight.setStyle("color", "#"+myColor);						
					      			}
						      	}
				      		}
				      	}
					}	
				}
	        }
	         
	         private function TextShade(value:Number):void
	         {
	        	if(selectedObject != null)
	        	{
	        		selectedObject.deselect();
	        		selectedObject.allowHMove=false;
					selectedObject.allowHResize=false;
					selectedObject.allowRotate=false;
					selectedObject.allowVMove=false;
					selectedObject.allowVResize=false;
					selectedObject.mouseChildren=true;
					var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
        			if(txt != null)
        			{
        			  txt.editable=true;
        			}
		    	}
	        	colorPickerTextShade.selectedColor=value;
	         }
	         
	           
	         public function textOnSizeChange():void
	         {
	         	textCurSize = fontsize.value;
	         }
	        
	        [Bindable] private var cnvParent:Canvas;
	        [Bindable] private var myRad:Number;
	         private var pathx:Number =120;
	         private var pathy:Number =120;
	         
	         public function drawText():void 
	     	 {
			    if(mySubViewStack.selectedChild==genericTshirt)
				{	
					
					 var children:Array = genericTshirt.getChildren();
					 for (var i:int = 0; i < children.length; i++)
					 {
						var t:ObjectHandles = children[i] as ObjectHandles;
						
						if(t!=null && t.id=="arcEditorObjTop")
						{
							genericTshirt.removeChild(t);
						}
					 }
					
					
				}else if(mySubViewStack.selectedChild==genericTshirtBack)
				{
					 var childrenBack:Array = genericTshirtBack.getChildren();
					 for (var j:int = 0; j < childrenBack.length; j++)
					 {
						var tBack:ObjectHandles = childrenBack[j] as ObjectHandles;
						
						if(tBack!=null && tBack.id=="arcEditorObjBottom")
						{
							genericTshirtBack.removeChild(tBack);
						}
					 }
					
												
				}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				
					 var childrenLeft:Array = genericTshirtLeft.getChildren();
					 for (var k:int = 0; k < childrenLeft.length; k++)
					 {
						var tLeft:ObjectHandles = childrenLeft[k] as ObjectHandles;
						
						if(tLeft!=null && tLeft.id=="arcEditorObjLeft")
						{
							genericTshirtLeft.removeChild(tLeft);
						}
					 }
					
											
				}else if(mySubViewStack.selectedChild==genericTshirtRight)
				{
					 var childrenRight:Array = genericTshirtRight.getChildren();
					 for (var l:int = 0; l < childrenRight.length; l++)
					 {
						var tRight:ObjectHandles = childrenRight[l] as ObjectHandles;
						
						if(tRight!=null && tRight.id=="arcEditorObjRight")
						{
							genericTshirtRight.removeChild(tRight);		
						}
					 }
									
				} 
				 	
			  	var oh1:ObjectHandles = new ObjectHandles();
			  	oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
				oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeightArc);
				
				oh1.x=100;
				oh1.y=60;
				oh1.width=newWidths;
				oh1.height=newHeights;
				oh1.allowHMove=true;
				oh1.allowHResize=true;
				oh1.allowVMove=true;
				oh1.allowVResize=true;
				oh1.allowRotate=false;
				oh1.mouseChildren=true;
				oh1.mouseEnabled=true;
			  	oh1.alwaysMaintainAspectRatio=true;
			  	oh1.select();
			  	var myText:String =String(myActTextRound.text);
			  	var deff:Number=75-oh1.width/2;
			  	var radDiff:Number=62-deff; 
			  	var radius:Number = radDiff;
			  	myRad=radius;
			  	var spacing:Number = space.value;
	          	var center:Point = new Point(oh1.width/2,oh1.height/2);
	          	var angleLeading:Number = angleleading.value;
	          	var angularOffset:Number = angularOffsets.value;
	    		
	    		for (var char:uint=0;char<myText.length;char++) 
	    		{
	               var tempText:TextView = new TextView();
	               tempText.x = radius * Math.cos(degrees2radians(char*spacing+angularOffset)) + center.x;
	               tempText.y = radius * Math.sin(degrees2radians(char*spacing+angularOffset)) + center.y;
	               var dx:Number = center.x-tempText.x;
	               var dy:Number = center.y-tempText.y;
	               var angle:Number = Math.atan2(dy, dx);
	               tempText.setStyle("fontSize",fontsize.value);  
				   tempText.setStyle("color","#"+myColor);
	               tempText.rotation = radians2degrees(angle) -90 + angleLeading;
	               tempText.text = myText.charAt(char);
	               oh1.addChild(tempText);
               		if(myViewStack.selectedChild==Tshirt)
			   		{
						if(mySubViewStack.selectedChild==genericTshirt)
						{	oh1.id="arcEditorObjTop";
							genericTshirt.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;	
						
						}else if(mySubViewStack.selectedChild==genericTshirtBack)
						{
							oh1.id="arcEditorObjBottom";
							genericTshirtBack.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;	
													
						}else if(mySubViewStack.selectedChild==genericTshirtLeft){
						
							oh1.id="arcEditorObjLeft";
							genericTshirtLeft.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;	
													
						}else if(mySubViewStack.selectedChild==genericTshirtRight)
						{
							oh1.id="arcEditorObjRight";
							genericTshirtRight.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;								
						}	
					}  
          		}
			 }
			 
			 public function drawTextCopy():void 
	     	 {
			    var oh1:ObjectHandles = new ObjectHandles();
			  	oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
				oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeightArc);
				oh1.x=100;
				oh1.y=60;
				oh1.width=newWidths;
				oh1.height=newHeights;
				oh1.allowHMove=true;
				oh1.allowHResize=true;
				oh1.allowVMove=true;
				oh1.allowVResize=true;
				oh1.allowRotate=false;
				oh1.mouseChildren=true;
			  	oh1.alwaysMaintainAspectRatio=true;
			  	oh1.select();
			  	var myText:String =String(myActTextRound.text);
			  	var deff:Number=75-oh1.width/2;
			  	var radDiff:Number=62-deff; 
			  	var radius:Number = radDiff;
			  	myRad=radius;
			  	var spacing:Number = space.value;
	          	var center:Point = new Point(oh1.width/2,oh1.height/2);
	          	var angleLeading:Number = angleleading.value;
	          	var angularOffset:Number = angularOffsets.value;
	    		
	    		for (var char:uint=0;char<myText.length;char++) 
	    		{
	               var tempText:TextView = new TextView();
	               tempText.x = radius * Math.cos(degrees2radians(char*spacing+angularOffset)) + center.x;
	               tempText.y = radius * Math.sin(degrees2radians(char*spacing+angularOffset)) + center.y;
	               var dx:Number = center.x-tempText.x;
	               var dy:Number = center.y-tempText.y;
	               var angle:Number = Math.atan2(dy, dx);
	               tempText.setStyle("fontSize",fontsize.value);  
				   tempText.setStyle("color","#"+myColor);
	               tempText.rotation = radians2degrees(angle) -90 + angleLeading;
	               tempText.text = myText.charAt(char);
              	   oh1.addChild(tempText);
               		if(myViewStack.selectedChild==Tshirt)
			   		{
						if(mySubViewStack.selectedChild==genericTshirt)
						{	oh1.id="arcEditorObjTop";
							genericTshirt.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;	
						
						}else if(mySubViewStack.selectedChild==genericTshirtBack)
						{
							oh1.id="arcEditorObjBottom";
							genericTshirtBack.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;	
													
						}else if(mySubViewStack.selectedChild==genericTshirtLeft){
						
							oh1.id="arcEditorObjLeft";
							genericTshirtLeft.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;	
													
						}else if(mySubViewStack.selectedChild==genericTshirtRight)
						{
							oh1.id="arcEditorObjRight";
							genericTshirtRight.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;								
						}	
					}  
          		}
			 }
			 
			 private function drawsChange(event:SliderEvent):void
	       	 {
	       		 if(mySubViewStack.selectedChild==genericTshirt)
				{	
					
					 var children:Array = genericTshirt.getChildren();
					 for (var i:int = 0; i < children.length; i++)
					 {
						var t:ObjectHandles = children[i] as ObjectHandles;
						
						if(t!=null && t.id=="arcEditorObjTop")
						{
							genericTshirt.removeChild(t);
						}
					 }
					
					
				}else if(mySubViewStack.selectedChild==genericTshirtBack)
				{
					 var childrenBack:Array = genericTshirtBack.getChildren();
					 for (var j:int = 0; j < childrenBack.length; j++)
					 {
						var tBack:ObjectHandles = childrenBack[j] as ObjectHandles;
						
						if(tBack!=null && tBack.id=="arcEditorObjBottom")
						{
							genericTshirtBack.removeChild(tBack);
						}
					 }
					
												
				}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				
					 var childrenLeft:Array = genericTshirtLeft.getChildren();
					 for (var k:int = 0; k < childrenLeft.length; k++)
					 {
						var tLeft:ObjectHandles = childrenLeft[k] as ObjectHandles;
						
						if(tLeft!=null && tLeft.id=="arcEditorObjLeft")
						{
							genericTshirtLeft.removeChild(tLeft);
						}
					 }
					
											
				}else if(mySubViewStack.selectedChild==genericTshirtRight)
				{
					 var childrenRight:Array = genericTshirtRight.getChildren();
					 for (var l:int = 0; l < childrenRight.length; l++)
					 {
						var tRight:ObjectHandles = childrenRight[l] as ObjectHandles;
						
						if(tRight!=null && tRight.id=="arcEditorObjRight")
						{
							genericTshirtRight.removeChild(tRight);		
						}
					 }
									
				} 
	       		
	       		var oh1:ObjectHandles = new ObjectHandles();
			  	oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
			  	oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeightArc);
				
				oh1.x=100;
				oh1.y=60;
				oh1.width=newWidths;
				oh1.height=newHeights;
				oh1.allowHMove=true;
				oh1.allowHResize=true;
				oh1.allowVMove=true;
				oh1.allowVResize=true;
				oh1.allowRotate=false;
				oh1.mouseChildren=true;
			  	oh1.alwaysMaintainAspectRatio=true;
			  	
			  	var myText:String =String(myActTextRound.text);
			  	var deff:Number=75-oh1.width/2;
			  	var radDiff:Number=62-deff; 
			  	var radius:Number = radDiff;
			  	myRad=radius;
		        var spacing:Number = space.value;
		        var center:Point = new Point(oh1.width/2,oh1.height/2);
		        
		        var angleLeading:Number = angleleading.value;
		        var angularOffset:Number = angularOffsets.value;
				 
				
				 
			  	for (var char:uint=0;char<myText.length;char++) 
	          	{
	               var tempText:TextView = new TextView();
	               tempText.x = radius * Math.cos(degrees2radians(char*spacing+angularOffset)) + center.x;
	               tempText.y = radius * Math.sin(degrees2radians(char*spacing+angularOffset)) + center.y;
	               var dx:Number = center.x-tempText.x;
	               var dy:Number = center.y-tempText.y;
	               var angle:Number = Math.atan2(dy, dx);
	               tempText.setStyle("color", '#'+myColor);
	               tempText.setStyle("fontSize", fontsize.value);
	               tempText.rotation = radians2degrees(angle) -90 + angleLeading;
	               tempText.text = myText.charAt(char);
	               oh1.addChild(tempText);
	               	if(myViewStack.selectedChild==Tshirt)
				   	{
						if(mySubViewStack.selectedChild==genericTshirt)
						{	oh1.select();
							oh1.id="arcEditorObjTop";
							genericTshirt.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;	
						
						}else if(mySubViewStack.selectedChild==genericTshirtBack)
						{
							oh1.id="arcEditorObjBottom";
							genericTshirtBack.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;	
													
						}else if(mySubViewStack.selectedChild==genericTshirtLeft){
						
							oh1.id="arcEditorObjLeft";
							genericTshirtLeft.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;	
													
						}else if(mySubViewStack.selectedChild==genericTshirtRight)
						{
							oh1.id="arcEditorObjRight";
							genericTshirtRight.addChild(oh1);
							addtocart.visible=true;
							tsqty.visible=true;
							Quantity.visible=true;
							pricetagshirt.visible=true;								
						}	
				  	}  
	         	 }
			}
			 
			 private function degrees2radians(deg:Number):Number {
		          return (2 * Math.PI * deg) / 360; 
		     }
		        
		     private function radians2degrees(rad:Number):Number {            
		          return rad * 180 / Math.PI; 
		     }
	      	 
	      	 private function orientation():void
	         {
	     		 if(mySubViewStack.selectedChild==genericTshirt)
				{	
					
					 var children:Array = genericTshirt.getChildren();
					 for (var i:int = 0; i < children.length; i++)
					 {
						var t:ObjectHandles = children[i] as ObjectHandles;
						
						if(t!=null && t.id=="arcEditorObjTop")
						{
							genericTshirt.removeChild(t);
						}
					 }
					
					
				}else if(mySubViewStack.selectedChild==genericTshirtBack)
				{
					 var childrenBack:Array = genericTshirtBack.getChildren();
					 for (var j:int = 0; j < childrenBack.length; j++)
					 {
						var tBack:ObjectHandles = childrenBack[j] as ObjectHandles;
						
						if(tBack!=null && tBack.id=="arcEditorObjBottom")
						{
							genericTshirtBack.removeChild(tBack);
						}
					 }
					
												
				}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				
					 var childrenLeft:Array = genericTshirtLeft.getChildren();
					 for (var k:int = 0; k < childrenLeft.length; k++)
					 {
						var tLeft:ObjectHandles = childrenLeft[k] as ObjectHandles;
						
						if(tLeft!=null && tLeft.id=="arcEditorObjLeft")
						{
							genericTshirtLeft.removeChild(tLeft);
						}
					 }
					
											
				}else if(mySubViewStack.selectedChild==genericTshirtRight)
				{
					 var childrenRight:Array = genericTshirtRight.getChildren();
					 for (var l:int = 0; l < childrenRight.length; l++)
					 {
						var tRight:ObjectHandles = childrenRight[l] as ObjectHandles;
						
						if(tRight!=null && tRight.id=="arcEditorObjRight")
						{
							genericTshirtRight.removeChild(tRight);		
						}
					 }
									
				} 
				
				
				var oh1:ObjectHandles = new ObjectHandles();
			  	oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
			  	oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeightArc);
				
				oh1.x=100;
				oh1.y=60;
				oh1.width=newWidths;
				oh1.height=newHeights;
				oh1.allowHMove=true;
				oh1.allowHResize=true;
				oh1.allowVMove=true;
				oh1.allowVResize=true;
				oh1.allowRotate=false;
				oh1.mouseChildren=true;
			  	oh1.alwaysMaintainAspectRatio=true;
			  	var myText:String =String(myActTextRound.text);
			  	var deff:Number=75-oh1.width/2;
			  	var radDiff:Number=62-deff; 
			  	var radius:Number = -radDiff;
			  	myRad=radius;
		        var spacing:Number = space.value;
		        var center:Point = new Point(oh1.width/2,oh1.height/2);
		        
		        var angleLeading:Number = angleleading.value;
		        var angularOffset:Number = angularOffsets.value;
				 
				 
				 
				  	for (var char:uint=0;char<myText.length;char++) 
		          	{
		               var tempText:TextView = new TextView();
		               tempText.x = radius * Math.cos(degrees2radians(char*spacing+angularOffset)) + center.x;
		               tempText.y = radius * Math.sin(degrees2radians(char*spacing+angularOffset)) + center.y;
		               var dx:Number = center.x-tempText.x;
		               var dy:Number = center.y-tempText.y;
		               var angle:Number = Math.atan2(dy, dx);
		               tempText.setStyle("color", '#'+myColor);
		               tempText.setStyle("fontSize", fontsize.value);
		               
		               tempText.rotation = radians2degrees(angle) -90 + angleLeading;
		               tempText.text = myText.charAt(char);
		                oh1.addChild(tempText);
		               	if(myViewStack.selectedChild==Tshirt)
					   	{
							if(mySubViewStack.selectedChild==genericTshirt)
							{
								oh1.id="arcEditorObjTop";
								genericTshirt.addChild(oh1);
								addtocart.visible=true;
								tsqty.visible=true;
								Quantity.visible=true;
								pricetagshirt.visible=true;	
							
							}else if(mySubViewStack.selectedChild==genericTshirtBack)
							{
								oh1.id="arcEditorObjBottom";
								genericTshirtBack.addChild(oh1);
								addtocart.visible=true;
								tsqty.visible=true;
								Quantity.visible=true;
								pricetagshirt.visible=true;	
														
							}else if(mySubViewStack.selectedChild==genericTshirtLeft){
							
								oh1.id="arcEditorObjLeft";
								genericTshirtLeft.addChild(oh1);
								addtocart.visible=true;
								tsqty.visible=true;
								Quantity.visible=true;
								pricetagshirt.visible=true;	
														
							}else if(mySubViewStack.selectedChild==genericTshirtRight)
							{
								oh1.id="arcEditorObjRight";
								genericTshirtRight.addChild(oh1);
								addtocart.visible=true;
								tsqty.visible=true;
								Quantity.visible=true;
								pricetagshirt.visible=true;								
							}	
					  	}  
		         	 }
	     		
	     	 }
	         
	         private function orientationNew():void
		     {
	     		 if(mySubViewStack.selectedChild==genericTshirt)
				{	
					
					 var children:Array = genericTshirt.getChildren();
					 for (var i:int = 0; i < children.length; i++)
					 {
						var t:ObjectHandles = children[i] as ObjectHandles;
						
						if(t!=null && t.id=="arcEditorObjTop")
						{
							genericTshirt.removeChild(t);
						}
					 }
					
					
				}else if(mySubViewStack.selectedChild==genericTshirtBack)
				{
					 var childrenBack:Array = genericTshirtBack.getChildren();
					 for (var j:int = 0; j < childrenBack.length; j++)
					 {
						var tBack:ObjectHandles = childrenBack[j] as ObjectHandles;
						
						if(tBack!=null && tBack.id=="arcEditorObjBottom")
						{
							genericTshirtBack.removeChild(tBack);
						}
					 }
					
												
				}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				
					 var childrenLeft:Array = genericTshirtLeft.getChildren();
					 for (var k:int = 0; k < childrenLeft.length; k++)
					 {
						var tLeft:ObjectHandles = childrenLeft[k] as ObjectHandles;
						
						if(tLeft!=null && tLeft.id=="arcEditorObjLert")
						{
							genericTshirtLeft.removeChild(tLeft);
						}
					 }
					
											
				}else if(mySubViewStack.selectedChild==genericTshirtRight)
				{
					 var childrenRight:Array = genericTshirtRight.getChildren();
					 for (var l:int = 0; l < childrenRight.length; l++)
					 {
						var tRight:ObjectHandles = childrenRight[l] as ObjectHandles;
						
						if(tRight!=null && tRight.id=="arcEditorObjRight")
						{
							genericTshirtRight.removeChild(tRight);		
						}
					 }
									
				} 
				
				 
				var oh1:ObjectHandles = new ObjectHandles();
			  	oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
			  	oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeightArc);
				
				oh1.x=100;
				oh1.y=60;
				
				oh1.width=newWidths;
				oh1.height=newHeights;
				oh1.allowHMove=true;
				oh1.allowHResize=true;
				oh1.allowVMove=true;
				oh1.allowVResize=true;
				oh1.allowRotate=false;
				oh1.mouseChildren=true;
			  	oh1.alwaysMaintainAspectRatio=true;
			  	var myText:String =String(myActTextRound.text);
			  	var deff:Number=75-oh1.width/2;
			  	var radDiff:Number=62-deff; 
			  	var radius:Number = radDiff;
			  	myRad=radius;
		        var spacing:Number = space.value;
		        var center:Point = new Point(oh1.width/2,oh1.height/2);
		        
		        var angleLeading:Number = angleleading.value;
		        var angularOffset:Number = angularOffsets.value;
				 
				  	for (var char:uint=0;char<myText.length;char++) 
		          	{
		               var tempText:TextView = new TextView();
		               tempText.x = radius * Math.cos(degrees2radians(char*spacing+angularOffset)) + center.x;
		               tempText.y = radius * Math.sin(degrees2radians(char*spacing+angularOffset)) + center.y;
		               var dx:Number = center.x-tempText.x;
		               var dy:Number = center.y-tempText.y;
		               var angle:Number = Math.atan2(dy, dx);
		               tempText.setStyle("color", '#'+myColor);
		               tempText.setStyle("fontSize", fontsize.value);
		               tempText.rotation = radians2degrees(angle) -90 + angleLeading;
		               tempText.text = myText.charAt(char);
		               oh1.addChild(tempText);
		               	if(myViewStack.selectedChild==Tshirt)
					   	{
							if(mySubViewStack.selectedChild==genericTshirt)
							{
								oh1.id="arcEditorObjTop";
								genericTshirt.addChild(oh1);
								addtocart.visible=true;
								tsqty.visible=true;
								Quantity.visible=true;
								pricetagshirt.visible=true;	
							
							}else if(mySubViewStack.selectedChild==genericTshirtBack)
							{
								oh1.id="arcEditorObjBottom";
								genericTshirtBack.addChild(oh1);
								addtocart.visible=true;
								tsqty.visible=true;
								Quantity.visible=true;
								pricetagshirt.visible=true;	
														
							}else if(mySubViewStack.selectedChild==genericTshirtLeft){
							
								oh1.id="arcEditorObjLeft";
								genericTshirtLeft.addChild(oh1);
								addtocart.visible=true;
								tsqty.visible=true;
								Quantity.visible=true;
								pricetagshirt.visible=true;	
														
							}else if(mySubViewStack.selectedChild==genericTshirtRight)
							{
								oh1.id="arcEditorObjRight";
								genericTshirtRight.addChild(oh1);
								addtocart.visible=true;
								tsqty.visible=true;
								Quantity.visible=true;
								pricetagshirt.visible=true;								
							}	
					  	}  
		         	 }
	     	 }
		   	 
	      	 private function moveRight():void
			 {
			 	var myText:String = String(myActTextRound.text);
			 	if(myViewStack.selectedChild==Tshirt)
				{
					if(mySubViewStack.selectedChild==genericTshirt)
					{
						var children:Array = genericTshirt.getChildren();
						 for (var i:int = 0; i < children.length; i++)
						 {
							var t:ObjectHandles = children[i] as ObjectHandles;
							
							if(t!=null && t.id=="arcEditorObjTop")
							{
								t.x-=5;
							}
						}
						
						
					}else if(mySubViewStack.selectedChild==genericTshirtBack)
					{
						var arrBack:Array = genericTshirtBack.getChildren();
			      		for(var j:int=0; j < arrBack.length; j++)
				      	{
				      		var tBack:ObjectHandles = children[i] as ObjectHandles;
							if(tBack!=null && tBack.id=="arcEditorObjBottom")
							{
								tBack.x-=5;
							}
				      	}
				      	
				      	 
				      							
					}else if(mySubViewStack.selectedChild==genericTshirtLeft){
					
						var arrLeft:Array = genericTshirtLeft.getChildren();
			      		for(var k:int=0; k < arrLeft.length; k++)
				      	{
				      		var tLeft:ObjectHandles = children[i] as ObjectHandles;
							if(tLeft!=null && tLeft.id=="arcEditorObjLeft")
							{
								tLeft.x-=5;
							}
				      	}
				      
					}else if(mySubViewStack.selectedChild==genericTshirtRight)
					{
						var arrRight:Array = genericTshirtRight.getChildren();
			      		for(var l:int=0; l < arrRight.length; l++)
				      	{
				      		var tRight:ObjectHandles = children[i] as ObjectHandles;
							if(tRight!=null && tRight.id=="arcEditorObjRight")
							{
								tRight.x-=5;
							}
				      	}
				    }		
				} 
			 }
			 
		     private function moveLeft():void
		     {
	     	    if(myViewStack.selectedChild==Tshirt)
				{
					
					
					if(mySubViewStack.selectedChild==genericTshirt)
					{
						var children:Array = genericTshirt.getChildren();
						 for (var i:int = 0; i < children.length; i++)
						 {
							var t:ObjectHandles = children[i] as ObjectHandles;
							
							if(t!=null && t.id=="arcEditorObjTop")
							{
								t.x+=5;
							}
						}
						
						
					}else if(mySubViewStack.selectedChild==genericTshirtBack)
					{
						var arrBack:Array = genericTshirtBack.getChildren();
			      		for(var j:int=0; j < arrBack.length; j++)
				      	{
				      		var tBack:ObjectHandles = children[i] as ObjectHandles;
							if(tBack!=null && tBack.id=="arcEditorObjBottom")
							{
								tBack.x+=5;
							}
				      	}
				      	
				      	 
				      							
					}else if(mySubViewStack.selectedChild==genericTshirtLeft){
					
						var arrLeft:Array = genericTshirtLeft.getChildren();
			      		for(var k:int=0; k < arrLeft.length; k++)
				      	{
				      		var tLeft:ObjectHandles = children[i] as ObjectHandles;
							if(tLeft!=null && tLeft.id=="arcEditorObjLeft")
							{
								tLeft.x+=5;
							}
				      	}
				      
					}else if(mySubViewStack.selectedChild==genericTshirtRight)
					{
						var arrRight:Array = genericTshirtRight.getChildren();
			      		for(var l:int=0; l < arrRight.length; l++)
				      	{
				      		var tRight:ObjectHandles = children[i] as ObjectHandles;
							if(tRight!=null && tRight.id=="arcEditorObjRight")
							{
								tRight.x+=5;
							}
				      	}
				    }	
				} 
	     	     
		     }
		     
	     	 private function moveUp():void
	     	 {
	     		
	        	var myText:String = String(myActTextRound.text);
	     		if(myViewStack.selectedChild==Tshirt)
				{
					if(mySubViewStack.selectedChild==genericTshirt)
					{
						var children:Array = genericTshirt.getChildren();
						 for (var i:int = 0; i < children.length; i++)
						 {
							var t:ObjectHandles = children[i] as ObjectHandles;
							
							if(t!=null && t.id=="arcEditorObjTop")
							{
								t.y-=5;
							}
						}
						
						
					}else if(mySubViewStack.selectedChild==genericTshirtBack)
					{
						var arrBack:Array = genericTshirtBack.getChildren();
			      		for(var j:int=0; j < arrBack.length; j++)
				      	{
				      		var tBack:ObjectHandles = children[i] as ObjectHandles;
							if(tBack!=null && tBack.id=="arcEditorObjBottom")
							{
								tBack.y-=5;
							}
				      	}
				      	
				      	 
				      							
					}else if(mySubViewStack.selectedChild==genericTshirtLeft){
					
						var arrLeft:Array = genericTshirtLeft.getChildren();
			      		for(var k:int=0; k < arrLeft.length; k++)
				      	{
				      		var tLeft:ObjectHandles = children[i] as ObjectHandles;
							if(tLeft!=null && tLeft.id=="arcEditorObjLeft")
							{
								tLeft.y-=5;
							}
				      	}
				      
					}else if(mySubViewStack.selectedChild==genericTshirtRight)
					{
						var arrRight:Array = genericTshirtRight.getChildren();
			      		for(var l:int=0; l < arrRight.length; l++)
				      	{
				      		var tRight:ObjectHandles = children[i] as ObjectHandles;
							if(tRight!=null && tRight.id=="arcEditorObjRight")
							{
								tRight.y-=5;
							}
				      	}
				    }		
				} 
	         }
	          
	    	 private function moveDown():void
	    	 {
	    		
	            var myText:String = String(myActTextRound.text);
	     		if(myViewStack.selectedChild==Tshirt)
				{
					if(mySubViewStack.selectedChild==genericTshirt)
					{
						var children:Array = genericTshirt.getChildren();
						 for (var i:int = 0; i < children.length; i++)
						 {
							var t:ObjectHandles = children[i] as ObjectHandles;
							
							if(t!=null && t.id=="arcEditorObjTop")
							{
								t.y+=5;
							}
						}
						
						
					}else if(mySubViewStack.selectedChild==genericTshirtBack)
					{
						var arrBack:Array = genericTshirtBack.getChildren();
			      		for(var j:int=0; j < arrBack.length; j++)
				      	{
				      		var tBack:ObjectHandles = children[i] as ObjectHandles;
							if(tBack!=null && tBack.id=="arcEditorObjBottom")
							{
								tBack.y+=5;
							}
				      	}
				      	
				      	 
				      							
					}else if(mySubViewStack.selectedChild==genericTshirtLeft){
					
						var arrLeft:Array = genericTshirtLeft.getChildren();
			      		for(var k:int=0; k < arrLeft.length; k++)
				      	{
				      		var tLeft:ObjectHandles = children[i] as ObjectHandles;
							if(tLeft!=null && tLeft.id=="arcEditorObjLeft")
							{
								tLeft.y+=5;
							}
				      	}
				      
					}else if(mySubViewStack.selectedChild==genericTshirtRight)
					{
						var arrRight:Array = genericTshirtRight.getChildren();
			      		for(var l:int=0; l < arrRight.length; l++)
				      	{
				      		var tRight:ObjectHandles = children[i] as ObjectHandles;
							if(tRight!=null && tRight.id=="arcEditorObjRight")
							{
								tRight.y+=5;
							}
				      	}
				    }		
				} 
	         }
	       	//===Strat Image Upload====//
           	
            private var ticker:Timer;
			[Bindable] private var time:String;

 		    public function showTime():void
            {
                var currentTime:Date = new Date();
                var timeFormat:DateFormatter = new DateFormatter;
				time = timeFormat.formatString = "HH:NN:SS"
                ///time = timtimeFormat.format(currentTime);
                ticker = new Timer(1,1);
                ticker.addEventListener(TimerEvent.TIMER_COMPLETE, onTimerComplete);
                ticker.start();
            }

            public function onTimerComplete(event:TimerEvent):void{
                  showTime();
                  
             } 
           	import flash.utils.Timer;
        	import flash.events.TimerEvent;
			[Bindable]
			public var formatString:String = "KK:NN:SS";
			[Bindable]
			public var curTime:String;
			private var format:DateFormatter;
        
        	[Bindable] private var sessionid:String;
        	[Bindable] private var pid:String;
        	[Bindable] private var skus:String;    
        
	       	public function initapps():void
	    	{
	    		
	    		Security.allowDomain(_strDomain);
	    		qs = new QueryString();
	    		pid = qs.parameters.pid;
	    		skus = qs.parameters.sku;
	    		
	    		sessionid = parameters.p;
	    		//sessionid = qs.parameters.p;
	    		//Alert.show(sessionid);
	    		
	    		if(qs.parameters.myName == "Garments")
	    		{
	    			myViewStack.selectedChild=Tshirt
	    			myLogin("shirtEditor");
	    		}
				
				if(myViewStack.selectedChild==Tshirt){
				
					myRemote.getTshirtData(sessionid);
					
					draws.width=26;
					draws.visible = true;
				}
				
				
				var fonts:Array = Font.enumerateFonts(true).sortOn("fontName");
				var fonts_array:Array = new Array();
			
				for (var i:int = 0; i < fonts.length; i++) {
					fonts_array.push(new String(fonts[i].fontName));
				}
				combobox.dataProvider = fonts_array;
				
				
			}
			
      		public function myLogins(tage:String):void
			{
				if(tage == 'dieCutter')
				{
					ExternalInterface.call( "window.open", myUrl+"die-cut-stickers.html?myName=die-cut-stickers", "_parent" );
					
				}else if(tage == 'shirtEditor')
				{
					ExternalInterface.call( "window.open", myUrl+"garments.html?myName=Garments", "_parent" );
					
				}else if(tage == 'BannerEditor')
				{
					ExternalInterface.call( "window.open", myUrl+"banners.html?myName=Banners", "_parent" );
				}else{
				
					ExternalInterface.call( "window.open", myUrl+"design-services.html?myName=Design-Services", "_parent" );
				}
			}
      		
      		private function OnObjectHandlesSelectedShp(event:ObjectHandleEvent):void
	   		{
	   			var obj:ObjectHandles = event.currentTarget as ObjectHandles;
	   			if(obj != null)
	   			{
	   				selectedObjectShp = obj;
	   				addtocart.visible=true;
					tsqty.visible=true;
					Quantity.visible=true;
					pricetagshirt.visible=true;	
	   				//selectedObject=null;
	   			}
	   		} 
			
			public function shape(id:String, sku:String):void
		    {
		    	var shape:String=id;
		    	
				var oh1:ObjectHandles = new ObjectHandles();
				oh1.width=50;
				oh1.height=50;
				oh1.x=150;
				oh1.y=150;
				oh1.id=sku;
				oh1.allowRotate=true;
				oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
				oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeight);
				var image:Image = new Image();
				
				if(myViewStack.selectedChild==Tshirt)
				{
					
					addtocart.visible=true;
				    tsqty.visible=true;
					Quantity.visible=true;
					pricetagshirt.visible=true;
					image.source = myApiUrl+'/'+id;
					image.id=sku;
					image.percentHeight=100;
					image.percentWidth=100;
					image.maintainAspectRatio = false;
					oh1.addChild(image);
					
				 	if(mySubViewStack.selectedChild==genericTshirt)
					{
				    	genericTshirt.addChild(oh1);
				    	
				    	
				   	}else if(mySubViewStack.selectedChild==genericTshirtBack)
				 	{
				 		genericTshirtBack.addChild(oh1);
				 		
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				 	
				 		genericTshirtLeft.addChild(oh1);
				 		
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtRight){
				 	
				 		genericTshirtRight.addChild(oh1);
				 		
				 	}
					
				}
		    }
			
			 /*
	        * End draw shap 
	        * Start 
	        */	
	        private function objectHandlesrezise(event:ResizeEvent):void
	        {
	        	var objhandles:ObjectHandles = event.currentTarget as ObjectHandles;
	        	if(objhandles != null)
	        	{
	        		var img:UIComponent = objhandles.getChildAt(0) as UIComponent;
	        		img.height = objhandles.height;
	        		img.width = objhandles.width;
	        	}
	        }
	        /*
	        * 
	        * Start  font size
	        */	
		
	        private function initApp():void 
			{
		 		var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
	        	if(selectedObject != null)
	        	{
	        		var txt1:TextArea = selectedObject.getChildAt(0) as TextArea;
	        		if(txt1 != null)
	        		{
	        			txt1.setStyle('fontSize', curSize);
	        		}
	        	}
 	 	 	}
	  	    public function showStyles():void {
		    
		        //mx.controls.Alert.show("Font size is " + box1.getStyle("fontSize") + ".");
		    }
			
			public function setNewStyles():void 
		    {
	        	curSize = Number (ip2.value);
	        	var txt:TextArea = selectedObject.getChildAt(0) as TextArea;
	        	if(selectedObject != null)
	        	{
	        		var txt1:TextArea = selectedObject.getChildAt(0) as TextArea;
	        		if(txt1 != null)
	        		{
	        			txt1.setStyle('fontSize', curSize);
	        		}
	        	 }
	        }
	        /*
	        * 
	        * End  font size
	        */
	        
	         public function timeHandle(event:TimerEvent):void { 
	            curTime=format.format(new Date()).toString();
	         }
	         
	         
	        public var sendFileName:String;
	      	private function takeSnapshot(mySide:String, pro_id:String):void 
			{
				
		   		addtocart.visible=false;
				tsqty.visible=false;
				Quantity.visible=false;
				pricetagshirt.visible=false;
		   		procolor.visible=false;
		   		productcolorPicker.visible=false;
		   		procolor.visible  = false;
		   		
		   		var bitmapData:BitmapData;
		   		
		   		if(myViewStack.selectedChild==Tshirt)
				{
					bitmapData = new BitmapData(Tshirteditor.width, Tshirteditor.height);
					bitmapData.draw(Tshirteditor);
				   
				}
					
			   	var png:PNGEncoder = new PNGEncoder();
			  	var byteArray:ByteArray = png.encode(bitmapData);
			  	var urlRequest:URLRequest = new URLRequest();
				var myTimer:Timer;
				
				if(myViewStack.selectedChild==Tshirt)
				{
					format = new DateFormatter();
		    		format.formatString="KKNNSS";
		    		curTime=format.format(new Date()).toString();
		            myTimer = new Timer(1000, 0);
		            myTimer.addEventListener("timer", timeHandle);
		            myTimer.start();
		            
		            sendFileName = pro_id+"-"+curTime+"-"+mySide;
					urlRequest.url = myUrl + "signimal_flex_php/filesave.php?dirName="+randomNum+"&fileName="+pro_id+"-"+curTime+"-"+mySide;
				}
				
				urlRequest.data = byteArray;
				urlRequest.method = URLRequestMethod.POST;
				urlRequest.contentType = 'image/png';
				var urlLoader:URLLoader = new URLLoader();
				urlLoader.load(urlRequest);
			
			}
			
			private function arc(event:MouseEvent):void
	        {
	        	var pUp:String = event.currentTarget.id;
	        	if(pUp=="email")
	        	{
        	    	emails.visible=true;
        	    	takeSnapshot("top", String(productId));
        	    	PopUpManager.addPopUp(emails, this, true);
        	    	
	        	
	        	}else if(pUp=="arcTextm"){
	        		
	        		window.visible=true;
	        		PopUpManager.addPopUp(window, this, true);

	        	
	        	}else if(pUp=="uploadVectorImgs"){
	        	
	        		//upload.visible=true;
	        		upload.visible=true;
	        		PopUpManager.addPopUp(upload, this, true);
	        	
	        	}else if(pUp=="uploadFont"){
	        	
	        		uploadfont.visible=true;
	        		PopUpManager.addPopUp(uploadfont, this, true);
	        	
	        	} else if (pUp=="draws"){
	        	
	        		drawsp.visible=true;
	        		LoginShapeAPIs.call.send(_SESSIONID, 'category.assignedProducts', assignedShapeTshirtCat);
	        		PopUpManager.addPopUp(drawsp, this, true);
	        	
	        	}else if(pUp=="testareaShadow")
	        	{
	        		dropShadow.visible=true;
	        		PopUpManager.addPopUp(dropShadow, this, true);
	        	}
	        	else if(pUp=="uploadvector")
	        	{
	        		vectorImageUpload.visible=true;
	        		PopUpManager.addPopUp(vectorImageUpload, this, true);
	        		
	        	}else if(pUp=="uploadvectorbanner")
	        	{
	        		vectorImageUpload.visible=true;
	        		PopUpManager.addPopUp(vectorImageUpload, this, true);
	        	}
	        	else if(pUp=="uploadDiecutterImgs")
	        	{
	        		upload.visible=true;
	        		PopUpManager.addPopUp(upload, this, true);
	        		
	        	}else if(pUp=="uploadFontDiecutter")
	        	{
	        		uploadfont.visible=true;
	        		PopUpManager.addPopUp(uploadfont, this, true);
	        		
	        	}else if(pUp=="uploadvectorDiecutter")
	        	{
	        		vectorImageUpload.visible=true;
	        		PopUpManager.addPopUp(vectorImageUpload, this, true);
	        		
	        	}else if(pUp=="uploadBannerImgs"){
	        	
	        		upload.visible=true;
	        		PopUpManager.addPopUp(upload, this, true);
	        	
	        	}else if(pUp=="uploadFontBanner"){
	        	
	        		uploadfont.visible=true;
	        		PopUpManager.addPopUp(uploadfont, this, true);
	        	
	        	}else if(pUp=="uploadvectorbanner"){
	        	
	        		vectorImageUpload.visible=true;
	        		PopUpManager.addPopUp(vectorImageUpload, this, true);
	        		
	        	}else if(pUp=="DecalDesignuploadImgs"){
	        	
	        		upload.visible=true;
	        		PopUpManager.addPopUp(upload, this, true);
	        	
	        	}else if(pUp=="DecalDesignuploadFont"){
	        	
	        		uploadfont.visible=true;
	        		PopUpManager.addPopUp(uploadfont, this, true);
	        	
	        	}else if(pUp=="DecalDesignuploadvector"){
	        	
	        		vectorImageUpload.visible=true;
	        		PopUpManager.addPopUp(vectorImageUpload, this, true);
	        	}
	        }
	        
	        public function registerGlobalKeyHandler() :void
			{
				stage.addEventListener(KeyboardEvent.KEY_DOWN, handleKeyDown);
			}
			public function handleKeyDown(event:KeyboardEvent) :void
			{
				if(event.keyCode==46)
				{
					var theSelected:ObjectHandles = SelectionManager.instance.currentlySelected as ObjectHandles; 
		 			var parentContainer:DisplayObjectContainer;
		 			
		        	if(selectedObject != null)
			        {
			        	
			        	var txt1:TextArea = selectedObject.getChildAt(0) as TextArea;
					    var img:Image = selectedObject.getChildAt(0) as Image;
					    var txtView:TextView = selectedObject.getChildAt(0) as TextView;
					    var svgView:SVGViewer = selectedObject.getChildAt(0) as SVGViewer;
					    
					   
		        		if(txt1 != null)
		        		{
		        			myRemote.deleteFrontData(sessionid,txt1.id);
		        				
		        		}else if(img!=null)
		        		{
		        			myRemote.deleteFrontData(sessionid,img.id);
		        		}
		        		else if(txtView!=null)
		        		{
		        			myRemote.deleteFrontData(sessionid, selectedObject.id);
		        			
		        		}else if(svgView !=null)
	        			{
	        				 myRemote.deleteFrontData(sessionid, svgView.id);
	        			}
			        	CallAPIPriceLess.call.send(_SESSIONID, 'product_media.list', selectedObject.id);
			 			if( theSelected != null && theSelected.parent != null ) {
	      				
	      					SelectionManager.instance.selectNone();        // Cosmetical stuff, just deselect.
	      					parentContainer = theSelected.parent;            // Get the parent container
	      					parentContainer.removeChild( theSelected );   // Remove the selected OH
	    				}
	    			}
	    		}
			}
	        private function Delete():void
	        {
	        	var theSelected:ObjectHandles = SelectionManager.instance.currentlySelected as ObjectHandles; 
			 	var parentContainer:DisplayObjectContainer;
			 			
		        if(selectedObject != null)
			    {
			 		var txt1:TextArea = selectedObject.getChildAt(0) as TextArea;
				    var img:Image = selectedObject.getChildAt(0) as Image;
				    var txtView:TextView = selectedObject.getChildAt(0) as TextView;
				    var svgView:SVGViewer = selectedObject.getChildAt(0) as SVGViewer;
	        		if(txt1 != null)
	        		{
	        			myRemote.deleteFrontData(sessionid,txt1.id);
	        				
	        		}else if(img!=null)
	        		{
	        			myRemote.deleteFrontData(sessionid,img.id);
	        			
	        		}else if(txtView!=null)
	        		{
	        			myRemote.deleteFrontData(sessionid,selectedObject.id);
	        			
	        		}else if(svgView !=null)
	        		{
	        			myRemote.deleteFrontData(sessionid, svgView.id);
	        		}  
	        		 
			 		CallAPIPriceLess.call.send(_SESSIONID, 'product_media.list', selectedObject.id);
		 			if( theSelected != null && theSelected.parent != null ) {
      				
      					SelectionManager.instance.selectNone();        // Cosmetical stuff, just deselect.
      					parentContainer = theSelected.parent;            // Get the parent container
      					parentContainer.removeChild( theSelected );   // Remove the selected OH
    				} 
		 		}
		 		
		 	} 
			//===End Image Upload====//
	        private var myTextAreacopy:TextArea;
	        private var myImagecopy:Image;
	        
	        private var myObjcopy:ObjectHandles;
	        private var shpHeight:int;
			private var shpWidth:int;
			
        	private function copy(event:MouseEvent):void
        	{
        		var ids:String= event.currentTarget.id;
	        	myl.text=ids;
	        	
	        	if(myl.text=="Cut")
	        	{
	        		 if(selectedObject !=null)
	        		 {
	 			 	 	selectedObject.visible=false;
	 			 	 	
	        		 }else if(selectedObjectShp != null)
	        		 {
	        		 	selectedObjectShp.visible=false;
	        		 	
	        		 }else{
	        		 	
	        		 	Alert.show("Please object select first.");
	        		 	
	        		 }
	        	}
        		
        		var children:Array;
        		
        		if(myViewStack.selectedChild==Tshirt)
				{
				    if(mySubViewStack.selectedChild==genericTshirt)
					{
				    	children = genericTshirt.getChildren();
				    	
				 	}else if(mySubViewStack.selectedChild==genericTshirtBack)
				 	{
				 		children = genericTshirtBack.getChildren();
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				 	
				 		children = genericTshirtLeft.getChildren();
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtRight){
				 	
				 		children = genericTshirtRight.getChildren();
				 	}	
				    
				}
        		
        		
 			 	 var nObj:int;
        		 var childObj:ObjectHandles;
 			 	 var j:int;
 			 		 	
        		 if(selectedObject!=null)
        		 {
        		 	
 			 	 	nObj = children.length;
					for (j = 0; j < nObj; j++)
			 		{
			 		   childObj = children[j] as ObjectHandles;
			 		   if(childObj != null)
					   {
					   		if(childObj == selectedObject)
					    	{
					    		myObjcopy = childObj;
					    		var txt:TextArea = childObj.getChildAt(0) as TextArea;
					    		var image:Image = childObj.getChildAt(0) as Image;
					    		if(txt !=null)
					    		{
					    			myTextAreacopy = txt;
					    			
					    		}else if(image !=null){
					    		
					    			myImagecopy = image	
					    			
					    		}
					    								    		
					    	}
					   }
			 		}
					
 			 	 } else{
        		 	
        		 	Alert.show("Please object select first.");
        		 }
	    	} 
        	
            private function paste():void
			{
				var myText:String=myl.text;
				
				
				if(myText=="Copy")
				{
					var txt1:TextArea;
	   				var oh1:ObjectHandles;
	   				var txt:TextArea;
	   				var img:Image;
	   				var img1:Image;
	   				var svgv:SVGViewer;
	   				var svgv1:SVGViewer;
	   				
	   				
	   				if(myViewStack.selectedChild==Tshirt)
					{
					    if(mySubViewStack.selectedChild==genericTshirt)
						{
							if(selectedObject != null && selectedObject.id !="arcEditorObjTop")
							{
								txt1 = selectedObject.getChildAt(0) as TextArea;
								img1 = selectedObject.getChildAt(0) as Image;
								svgv1 = selectedObject.getChildAt(0) as SVGViewer;
								
								oh1 = new ObjectHandles();
								oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
								oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeightArc);
								oh1.x=myObjcopy.x; 
								oh1.y=myObjcopy.y + 20;
								oh1.height=myObjcopy.height; 
								oh1.width=myObjcopy.width;
								oh1.allowHMove=true;
								oh1.allowHResize=true;
								oh1.allowVMove=true;
								oh1.allowVResize=true;
								oh1.allowRotate=false;
								oh1.mouseChildren=true;
								
								if(txt1 != null)
								{
								 	//Alert.show(''+txt1.text);
								 	txt = new TextArea();
									txt.text=txt1.text
									txt.horizontalScrollPolicy = "off";
									txt.verticalScrollPolicy = "off";
									txt.percentWidth=100;
									txt.percentHeight=100;
									txt.setStyle("backgroundAlpha","0") 
									txt.setStyle("fontSize","14");  
									txt.setStyle("color", copyColor);
									txt.setStyle("fontFamily","Verdana");
									txt.setStyle("fontWeight","bold");
									txt.setStyle("textAlign","center");
									txt.setStyle("length","0");
									txt.setStyle("borderStyle","none");
									txt.condenseWhite=true;
									txt.addEventListener(MouseEvent.CLICK ,	clickDis);
									oh1.addChild(txt);
								 	
								 	
								}else if(img1 != null){
								
									img = new Image();
									img.percentWidth=100;
									img.percentHeight=100;
									img.source = img1.source;
									
									var colorTrans:ColorTransform = new ColorTransform();
									if(copyColor == 0)
									{
									
										colorTrans.color = 16446161;
											
									}else{
									
										colorTrans.color = copyColor;
									}
					   	 			img.transform.colorTransform=colorTrans;
									oh1.addChild(img);
								
								}else if(svgv1 !=null)
								{
									svgv = new SVGViewer();
				     				svgv.xml = new XML(svgv1.xml);
				    				svgv.myWidth(150);
					 				svgv.myHeight(150);
		    	 	 				if(svgv != null)
					 				{
					 					oh1.addChild(svgv);	
					 				}
								}
								
								genericTshirt.addChild(oh1);
								getWidthHeight();
								
							}else if(selectedObject != null && selectedObject.id =="arcEditorObjTop")
							{
								newWidths= selectedObject.width;
								newHeights= selectedObject.height;
								drawTextCopy();
							}
					
					 	}else if(mySubViewStack.selectedChild==genericTshirtBack)
					 	{
					 		
				 			if(selectedObject != null && selectedObject.id !="arcEditorObjBottom")
							{
								oh1 = new ObjectHandles();
								oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
								oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeightArc);
								oh1.x=myObjcopy.x; 
								oh1.y=myObjcopy.y + 20;
								oh1.height=myObjcopy.height; 
								oh1.width=myObjcopy.width;
								oh1.allowHMove=true;
								oh1.allowHResize=true;
								oh1.allowVMove=true;
								oh1.allowVResize=true;
								oh1.allowRotate=false;
								oh1.mouseChildren=true;								
								
								txt1 = selectedObject.getChildAt(0) as TextArea
								img1 = selectedObject.getChildAt(0) as Image;
								svgv1 = selectedObject.getChildAt(0) as SVGViewer;
								if(txt1 != null)
								{
									 txt = new TextArea();
									txt.text=txt1.text
									txt.horizontalScrollPolicy = "off";
									txt.verticalScrollPolicy = "off";
									txt.percentWidth=100;
									txt.percentHeight=100;
									txt.setStyle("backgroundAlpha","0") 
									txt.setStyle("fontSize","14");  
									txt.setStyle("color", copyColor);
									txt.setStyle("fontFamily","Verdana");
									txt.setStyle("fontWeight","bold");
									txt.setStyle("textAlign","center");
									txt.setStyle("length","0");
									txt.setStyle("borderStyle","none");
									txt.condenseWhite=true;
									txt.addEventListener(MouseEvent.CLICK ,	clickDis);
									oh1.addChild(txt);
							
								}else if(img1 != null)
								{
								
									img = new Image();
									img.percentWidth=100;
									img.percentHeight=100;
									img.source = img1.source;
									
									var colorTranss:ColorTransform = new ColorTransform();
									if(copyColor == 0)
									{
									
										colorTranss.color = 16446161;
											
									}else{
									
										colorTranss.color = copyColor;
									}
					   	 			img.transform.colorTransform=colorTranss;
									oh1.addChild(img);
									
								}else if(svgv1 !=null)
								{
									svgv = new SVGViewer();
				     				svgv.xml = new XML(svgv1.xml);
				    				svgv.myWidth(150);
					 				svgv.myHeight(150);
		    	 	 				if(svgv != null)
					 				{
					 					oh1.addChild(svgv);	
					 				}
								}
								
								
							genericTshirtBack.addChild(oh1);
							getWidthHeight();
								
						}else if(selectedObject != null && selectedObject.id =="arcEditorObjBottom")
						{
							newWidths= selectedObject.width;
							newHeights= selectedObject.height;
							drawTextCopy();
						}
							
					 		
					 	}else if(mySubViewStack.selectedChild==genericTshirtLeft){
					 	
					 		if(selectedObject != null && selectedObject.id !="arcEditorObjLeft")
							{
								txt1 = selectedObject.getChildAt(0) as TextArea
								img1 = selectedObject.getChildAt(0) as Image;
								svgv1 = selectedObject.getChildAt(0) as SVGViewer;
								
								oh1 = new ObjectHandles();
								oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
								oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeightArc);
								oh1.x=myObjcopy.x; 
								oh1.y=myObjcopy.y + 20;
								oh1.height=myObjcopy.height; 
								oh1.width=myObjcopy.width;
								oh1.allowHMove=true;
								oh1.allowHResize=true;
								oh1.allowVMove=true;
								oh1.allowVResize=true;
								oh1.allowRotate=false;
								oh1.mouseChildren=true;
								
								if(txt1 != null)
								{
									
			   						txt = new TextArea();
									txt.text=txt1.text
									txt.horizontalScrollPolicy = "off";
									txt.verticalScrollPolicy = "off";
									txt.percentWidth=100;
									txt.percentHeight=100;
									txt.setStyle("backgroundAlpha","0") 
									txt.setStyle("fontSize","14");  
									txt.setStyle("color", copyColor);
									txt.setStyle("fontFamily","Verdana");
									txt.setStyle("fontWeight","bold");
									txt.setStyle("textAlign","center");
									txt.setStyle("length","0");
									txt.setStyle("borderStyle","none");
									txt.condenseWhite=true;
									txt.addEventListener(MouseEvent.CLICK ,	clickDis);
									oh1.addChild(txt);
										
								}else if(img1 != null)
								{
								
									img = new Image();
									img.percentWidth=100;
									img.percentHeight=100;
									img.source = img1.source;
									
									var colorTransleft:ColorTransform = new ColorTransform();
									if(copyColor == 0)
									{
									
										colorTransleft.color = 16446161;
											
									}else{
									
										colorTransleft.color = copyColor;
									}
					   	 			img.transform.colorTransform=colorTransleft;
									oh1.addChild(img);
								
								}else if(svgv1 !=null)
								{
									svgv = new SVGViewer();
				     				svgv.xml = new XML(svgv1.xml);
				    				svgv.myWidth(150);
					 				svgv.myHeight(150);
		    	 	 				if(svgv != null)
					 				{
					 					oh1.addChild(svgv);	
					 				}
								}
								genericTshirtLeft.addChild(oh1);
								getWidthHeight();
							}else if(selectedObject != null && selectedObject.id =="arcEditorObjLeft")
							{
								newWidths= selectedObject.width;
								newHeights= selectedObject.height;
								drawTextCopy();
							}
					 		
					 	}else if(mySubViewStack.selectedChild==genericTshirtRight){
					 	
					 		if(selectedObject != null && selectedObject.id !="arcEditorObjRight")
							{
								txt1 = selectedObject.getChildAt(0) as TextArea
								img1 = selectedObject.getChildAt(0) as Image;
								svgv1 = selectedObject.getChildAt(0) as SVGViewer;
								
								oh1 = new ObjectHandles();
								oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
								oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeightArc);
								oh1.x=myObjcopy.x; 
								oh1.y=myObjcopy.y + 20;
								oh1.height=myObjcopy.height; 
								oh1.width=myObjcopy.width;
								oh1.allowHMove=true;
								oh1.allowHResize=true;
								oh1.allowVMove=true;
								oh1.allowVResize=true;
								oh1.allowRotate=false;
								oh1.mouseChildren=true;
								
								
								if(txt1 != null)
								{
								 	txt = new TextArea();
									txt.text=txt1.text
									txt.horizontalScrollPolicy = "off";
									txt.verticalScrollPolicy = "off";
									txt.percentWidth=100;
									txt.percentHeight=100;
									txt.setStyle("backgroundAlpha","0") 
									txt.setStyle("fontSize","14");  
									txt.setStyle("color", copyColor);
									txt.setStyle("fontFamily","Verdana");
									txt.setStyle("fontWeight","bold");
									txt.setStyle("textAlign","center");
									txt.setStyle("length","0");
									txt.setStyle("borderStyle","none");
									txt.condenseWhite=true;
									txt.addEventListener(MouseEvent.CLICK ,	clickDis);
								 	oh1.addChild(txt);	
								 	
								}else if(img1 != null)
								{
								
									img = new Image();
									img.percentWidth=100;
									img.percentHeight=100;
									img.source = img1.source;
									
									var colorTransRight:ColorTransform = new ColorTransform();
									if(copyColor == 0)
									{
									
										colorTransRight.color = 16446161;
											
									}else{
									
										colorTransRight.color = copyColor;
									}
					   	 			img.transform.colorTransform=colorTransRight;
									oh1.addChild(img);
								
								}else if(svgv1 !=null)
								{
									svgv = new SVGViewer();
				     				svgv.xml = new XML(svgv1.xml);
				    				svgv.myWidth(150);
					 				svgv.myHeight(150);
		    	 	 				if(svgv != null)
					 				{
					 					oh1.addChild(svgv);	
					 				}
								}
								genericTshirtRight.addChild(oh1);
								getWidthHeight();
								
							}else if(selectedObject != null && selectedObject.id =="arcEditorObjRight")
							{
								newWidths= selectedObject.width;
								newHeights= selectedObject.height;
								drawTextCopy();
							}
					 	}	
					    
					}
				}else if(myText=="Cut"){
				
					if(selectedObjectShp !=null)
					{
						selectedObjectShp.visible = true;
						
					}else if(selectedObject !=null)
					{
						selectedObject.visible = true;
						
					}
				
				}else if(myText=="")
				{
					Alert.show("Please copy or cut object and then click on paste.");
				} 	
				
			}
			
			//banner strart//
			// Strat for gallery//	
			
			private function getImage(id:String, front:String, back:String, left:String, right:String ):void
			{
				previewImg.preloaderTitleWindow = WheelPreloadingWindow;
				previewImg.source=id;
				
				Top.preloaderTitleWindow = SquaresSpinnerPreloadingWindow;
				Top.source=front;
				
				Bottom.preloaderTitleWindow = SquaresSpinnerPreloadingWindow;
				Bottom.source=back;
				
				Left.preloaderTitleWindow = SquaresSpinnerPreloadingWindow;
				Left.source=left;
				
				Right.preloaderTitleWindow = SquaresSpinnerPreloadingWindow;
				Right.source=right;
					
			}
			
			private function bannerGetImage(id:String, front:String, back:String):void
			{
				//write your code. 
			}
			
			private function mySide(id:String, side:String):void
			{
				myComSide = side;
					
				if(side=="top")
				{
					
					previewImg.source = id;
				
				}else if(side=="bottom"){
					
					
					takeSnapshot("top", String(productId));
					previewImg.source = id;
					
					
				}else if(side=="left"){
					
					takeSnapshot("bottom", String(productId));
					previewImg.source = id;
					
				
				}else if(side=="right"){
					
					takeSnapshot("right", String(productId));
					previewImg.source = id;
					
				}
				
			}
			private function mySideBanner(id:String, side:String):void
			{
				if(side=="front")
				{
					//bannerpreviewImg.source = id;
					
				}else if(side=="back")
				{
					//bannerpreviewImg.source = id;
				}
			}
			
			private function getImages(id:String, sku:String):void
			{
				
				mySku = sku;
				
				LoginAPIcat.call.send(_SESSIONID, "category.assignedProducts", cat_ids);
				
				var oh1:ObjectHandles = new ObjectHandles();
				oh1.width=50;
				oh1.height=50;
				oh1.x=150;
				oh1.y=150;
				oh1.id=sku;
				oh1.allowRotate=true;
				oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
				oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeight);
				var image:Image = new Image();
				
				if(myViewStack.selectedChild==Tshirt)
				{
					
					addtocart.visible=true;
				    tsqty.visible=true;
					Quantity.visible=true;
					pricetagshirt.visible=true;
					image.source = myApiUrl+'/'+id;
					image.id=sku;
					image.percentHeight=100;
					image.percentWidth=100;
					image.maintainAspectRatio = false;
					oh1.addChild(image);
					
				 	if(mySubViewStack.selectedChild==genericTshirt)
					{
				    	genericTshirt.addChild(oh1);
				    	CallAPIPrice.call.send(_SESSIONID, 'product_media.list', sku);
				    	
				   	}else if(mySubViewStack.selectedChild==genericTshirtBack)
				 	{
				 		genericTshirtBack.addChild(oh1);
				 		CallAPIPrice.call.send(_SESSIONID, 'product_media.list', sku);
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				 	
				 		genericTshirtLeft.addChild(oh1);
				 		CallAPIPrice.call.send(_SESSIONID, 'product_media.list', sku);
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtRight){
				 	
				 		genericTshirtRight.addChild(oh1);
				 		CallAPIPrice.call.send(_SESSIONID, 'product_media.list', sku);
				 	}
					
				}
			}
	
		
			private function getImageAssets(event:Event):void
			{
				
				
				var oh1:ObjectHandles = new ObjectHandles();
				oh1.width=50;
				oh1.height=50;
				oh1.x=150;
				oh1.y=150;
				oh1.allowRotate=true;
				oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
				var image:Image = new Image();
				
				if(myViewStack.selectedChild==Tshirt)
				{
					addtocart.visible=true;
					tsqty.visible=true;
					Quantity.visible=true;
					pricetagshirt.visible=true;	
					image.source = event.currentTarget.getRepeaterItem().img;
					image.percentHeight=100;
					image.percentWidth=100;
					
					image.maintainAspectRatio = false;
					oh1.addChild(image);
					
					if(mySubViewStack.selectedChild==genericTshirt)
					{
				    	genericTshirt.addChild(oh1);
				    	
				 	}else if(mySubViewStack.selectedChild==genericTshirtBack)
				 	{
				 		genericTshirtBack.addChild(oh1);
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				 	
				 		genericTshirtLeft.addChild(oh1);
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtRight){
				 	
				 		genericTshirtRight.addChild(oh1);
				 	}
					
				}
			}
			
			// end for gallery//
			//banner end//
		 	// mail function start.//
		 	
		 	private function sendMail():void
			{
				
				var _senderName:String = senderName.text;
		        var _senderEmail:String = senderEmail.text;
		        var _emailMessage:String = emailMessage.text;
		        var _emailSubject:String = emailSubject.text;
		       	var evValidMail:ValidationResultEvent = mailValidator.validate();
				var evValidName:ValidationResultEvent = nameValidator.validate();
				var evValidMessage : ValidationResultEvent = mailValidator.validate();
				
				if (evValidMail.type == ValidationResultEvent.VALID 
				&& evValidName.type == ValidationResultEvent.VALID
				&& evValidMessage.type == ValidationResultEvent.VALID)
				{
					var fileName:String = sendFileName;
					myRemote.sendMail(_senderName, _senderEmail, _emailSubject, _emailMessage, randomNum, fileName); 
				}
				else{
					
					resultLabel.text="There are Form errors";
					resultLabel.setStyle("styleName", "invalid");
				}
			}
		
			private function emailResult():void
			{
	            Alert.show("Thank you for your submission ");
	            clearForm();
	            emails.visible=false;
	     	}
			private function clearForm():void
			{
				resultLabel.text="";
				emailSubject.text="";
				emailMessage.text="";
			}
        	//End mail function  End.//
			private function myXmlList():void
			{
				//myRemote.myXml();
			}
			
			private function sendMailListener(event:ResultEvent):void
			{
				Alert.show("Thank you for your submission ");
	            clearForm();
	            emails.visible=false;
	            PopUpManager.removePopUp(emails)
			}
			private function testListener(event:ResultEvent):void
			{
				Alert.show(ObjectUtil.toString(event.result));
				
			}
			
			private function myXmlListener(event:ResultEvent):void
            {
            	Alert.show(ObjectUtil.toString(event.result));
            }
            private function faultListener(event:FaultEvent):void {
                Alert.show(event.fault.message, "Error");
            }
            
            
            public function newfile():void
            {
            	var children:Array;
            	
	        	if(myViewStack.selectedChild==Tshirt)
				{
				    if(mySubViewStack.selectedChild==genericTshirt)
					{
				    	//genericTshirt.removeAllChildren();
				    	children = genericTshirt.getChildren();
						var nt:int = children.length;
						
						for (var j:int = 0; j < nt; j++)
				 		{
				 		   var childObjTshirt:ObjectHandles = children[j] as ObjectHandles;
				 		   
						   if(childObjTshirt != null)
						   {
						      var theSelected1:ObjectHandles = childObjTshirt;
						      var parentContainer1:DisplayObjectContainer;
						       
					 		   if( theSelected1 != null && theSelected1.parent != null ) 
						 	   {	
				      				SelectionManager.instance.selectNone();        // Cosmetical stuff, just deselect.
				      				parentContainer1 = theSelected1.parent;            // Get the parent container
				      				parentContainer1.removeChild( theSelected1 );   // Remove the selected OH
				    		   } 
					 	   }
				 		} 
				 		getWidthHeight();
				    	
				    	
				    }else if(mySubViewStack.selectedChild==genericTshirtBack)
				 	{
				 		
				 		children = genericTshirtBack.getChildren();
						var ntB:int = children.length;
						
						for (var k:int = 0; k < ntB; k++)
				 		{
				 		   var childObjTshirtBack:ObjectHandles = children[k] as ObjectHandles;
				 		   
						   if(childObjTshirtBack != null)
						   {
						      var theSelected2:ObjectHandles = childObjTshirtBack;
						      var parentContainer2:DisplayObjectContainer;
						       
					 		   if( theSelected2 != null && theSelected2.parent != null ) 
						 	   {	
				      				SelectionManager.instance.selectNone();        // Cosmetical stuff, just deselect.
				      				parentContainer2 = theSelected2.parent;            // Get the parent container
				      				parentContainer2.removeChild( theSelected2 );   // Remove the selected OH
				    		   } 
					 	   }
				 		} 
				 		getWidthHeight();
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				 	
				 		children = genericTshirtBack.getChildren();
						var ntl:int = children.length;
						
						for (var l:int = 0; l < ntl; l++)
				 		{
				 		   var childObjTshirtLeft:ObjectHandles = children[l] as ObjectHandles;
				 		   
						   if(childObjTshirtLeft != null)
						   {
						      var theSelected3:ObjectHandles = childObjTshirtLeft;
						      var parentContainer3:DisplayObjectContainer;
						       
					 		   if( theSelected3 != null && theSelected3.parent != null ) 
						 	   {	
				      				SelectionManager.instance.selectNone();        // Cosmetical stuff, just deselect.
				      				parentContainer3 = theSelected2.parent;            // Get the parent container
				      				parentContainer3.removeChild( theSelected2 );   // Remove the selected OH
				    		   } 
					 	   }
				 		} 
				 		getWidthHeight();
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtRight)
				 	{
				 		
				 		children = genericTshirtBack.getChildren();
						var ntr:int = children.length;
						
						for (var y:int = 0; y < ntr; y++)
				 		{
				 		   var childObjTshirtright:ObjectHandles = children[y] as ObjectHandles;
				 		   
						   if(childObjTshirtright != null)
						   {
						      var theSelected4:ObjectHandles = childObjTshirtright;
						      var parentContainer4:DisplayObjectContainer;
						       
					 		   if( theSelected4 != null && theSelected4.parent != null ) 
						 	   {	
				      				SelectionManager.instance.selectNone();        // Cosmetical stuff, just deselect.
				      				parentContainer4 = theSelected4.parent;            // Get the parent container
				      				parentContainer4.removeChild( theSelected4 );   // Remove the selected OH
				    		   } 
					 	   }
				 		} 
				 		getWidthHeight();
				 	}	
				    
				}
            }
            
            //---------Start redo undo-------// 
           
			public function undo(type:String):void
			{
				
				var children:Array;   
				if(myViewStack.selectedChild==Tshirt)
				{
			   		if(mySubViewStack.selectedChild==genericTshirt)
					{
				    	//getTshirtunod("unod");
				    	children = genericTshirt.getChildren();
						var n2:int = children.length;
						for (var k:int = 0; k < n2; k++)
					 	{
					 	   var child2:ObjectHandles = children[k] as ObjectHandles;	
						   if(child2 != null && k==(n2-1))
						   {
							   
							   	if(type=="undo")
								{
							   		child2.visible = false; 
							   		 
							 	}else if("redo")
							 	{
							 		child2.visible = true;
							 		
							 	}
						     }
						 }	
						
				    	
				 	}else if(mySubViewStack.selectedChild==genericTshirtBack)
				 	{
				 		//getTshirtunod("unod");
				 		children = genericTshirtBack.getChildren();
						var n3:int = children.length;
						for (var l:int = 0; l < n3; l++)
					 	{
					 	   var child3:ObjectHandles = children[l] as ObjectHandles;	
						   if(child3 != null && l==(n3-1))
						   {
							   	if(type=="undo")
								{
							   		child3.visible = false; 
							   		 
							 	}else if("redo")
							 	{
							 		child3.visible = true;
							 		
							 	}
						     }
						 }	
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				 	
				 		//getTshirtunod("unod");
				 		children = genericTshirtLeft.getChildren();
						var n4:int = children.length;
						for (var m:int = 0; m < n4; m++)
					 	{
					 	   var child4:ObjectHandles = children[m] as ObjectHandles;	
						   if(child4 != null && m==(n4-1))
						   {
							   	if(type=="undo")
								{
							   		child4.visible = false; 
							   		 
							 	}else if("redo")
							 	{
							 		child4.visible = true;
							 		
							 	}
						     }
						 }	
				 		
				 	}else if(mySubViewStack.selectedChild==genericTshirtRight){
				 	
				 		//getTshirtunod("unod");
				 		children = genericTshirtRight.getChildren();
						var ncy:int = children.length;
						for (var nz:int = 0; nz < ncy; nz++)
					 	{
					 	   var child5:ObjectHandles = children[nz] as ObjectHandles;	
						    if(child5 != null && nz==(ncy-1))
						   {
							   	var txt5:TextArea = child5.getChildAt(0) as TextArea;
					    		var image5:Image = child5.getChildAt(0) as Image;
							   	
							   	if(type=="undo")
								{
							   		child5.visible = false; 
							   		 
							 	}else if("redo")
							 	{
							 		child5.visible = true;
							 		
							 	}
						     }
						 }	
				 	}
				}
			}
			
			//---------End redo undo-------// 
			
	        private function myFontListener(event:ResultEvent):void
			{
				playlistsDataProvider = new Array(event.result);
				var playlistsForComboBox:Array = new Array(playlistsDataProvider[0].length);
				
				for(var i:int = 0; i < playlistsDataProvider[0].length;i++)
				{
					playlistsForComboBox[i] = {label:playlistsDataProvider[0][i].font_name, data:playlistsDataProvider[0][i].id};
				}

				playlistsComboBoxDataProvider = new ArrayCollection(playlistsForComboBox);
				mycombobox.dataProvider=playlistsComboBoxDataProvider;		
			}
			
			
			private function displayAssets(num:Number, type:String):void
			{
			
				assetsUrl = ObjectUtil.toString(num);
				if(type=="font")
				{
					myRemote.myFont(assetsUrl);
				
				}else if(type=="image"){

					myxml = myUrl + "signimal_flex_php/uploads/image/" + num + "/assetsXml.xml";
					fileupload(myxml);
					
				}
				
			}
			
			private function displayAssetssvg(num:Number, type:String):void
			{
				 if(type=="vector"){
				
					myxml = myUrl + "signimal_flex_php/uploads/image/" + num + "/myassetsXml.xml";
					svgfileupload(myxml);
				}
			}
			
			private function svgfileupload(src:String):void
			{
				httpServicesvg.url= src;	
				httpServicesvg.send();
				httpServicesvg.method="GET";
				httpServicesvg.addEventListener(ResultEvent.RESULT, httpServicesvg_result);
			}
			private function httpServicesvg_result(event:ResultEvent):void
			{
			   
			   	var xml:XMLDocument = new XMLDocument(String(event.result));
			   	var decoder:SimpleXMLDecoder = new SimpleXMLDecoder();
   			   	var data:Object = decoder.decodeXML( xml );
    		   	var array:Array = ArrayUtil.toArray(data.galleries.gallery);
			   	
			   	galleries = new ArrayCollection( array );
				
				if(myViewStack.selectedChild==Tshirt)
				{
			    	mySvgImage();
			 	}
			 	
			}
			
			private function fileupload(src:String):void
			{
				httpService.url= src;	
				httpService.send();
				httpService.addEventListener(ResultEvent.RESULT, httpService_result);
			}
			
			private function httpService_fault(evt:FaultEvent):void {
                var title:String = evt.type + " (" + evt.fault.faultCode + ")";
                var text:String = evt.fault.faultString;
                xmlListColl.removeAll();
            }
			
			private function httpService_result(event:ResultEvent):void 
			{
            	 var xmlList:XMLList = XML(event.result).gallery;
                 xmlListColls = new XMLListCollection(xmlList);
               
                if(myViewStack.selectedChild==Tshirt)
				{
				    imageRepeater2.dataProvider = xmlListColls;
				    
				}
                
            }

			public var myprod:Number;

			public function colorize(value:Number) :void
			{
				myprod= value;
				//genericTshirt.setStyle("backgroundColor", intToHex(myprod));
				// Create a new ColorTransform instance.
				var colorTrans:ColorTransform = new ColorTransform();
				
				// Set the color value to be used by the ColorTransform instance.
				circelColor=value;
				
				if(value == Number('16777215'))
				{
					colorTrans.color =  uint('14409179');
				
				}else{
					
					colorTrans.color = value;
				}
				
				// Apply the transform to image.
				if(myViewStack.selectedChild==Tshirt)
				{
					
			        previewImg.transform.colorTransform = colorTrans;
					Top.transform.colorTransform = colorTrans;
					Bottom.transform.colorTransform = colorTrans;
					Left.transform.colorTransform = colorTrans;
					Right.transform.colorTransform = colorTrans;
					
				}
			}
			public var myclipvalue:Number = 0;
			public function colorizeClipart(value:Number) :void
			{
				myclipvalue = value;
				//Alert.show(''+myclipvalue);
				var colorTrans:ColorTransform = new ColorTransform();
				colorTrans.color = value;
				if(myViewStack.selectedChild==Tshirt)
				{
				    if(selectedObject != null)
	        		{
	        			selectedObject.select();
						selectedObject.allowHMove=true;
						selectedObject.allowHResize=true;
						selectedObject.allowRotate=false;
						selectedObject.allowVMove=true;
						selectedObject.allowVResize=true;
						selectedObject.mouseChildren=false;
						selectedObject.buttonMode=false;
						selectedObject._allowKeyboardManipulation=true;
						
						var img1:Image = selectedObject.getChildAt(0) as Image;
	        			if(img1!= null)
	        			{
	        			  img1.transform.colorTransform=colorTrans;
	        			}
	        		}
				}
			}
		
			private function onCategory(event:Array):void
			{
				 if(myViewStack.selectedChild==Tshirt){	
				 	
				 	if(leftsidepenal.selectedIndex==1)
					{
				 		imageRepeater1.dataProvider=event;
				 	}	
				 }
			}
			private function onLoadClipart():void
			{
				if(myViewStack.selectedChild==Tshirt)
				{
					if(leftsidepenal.selectedIndex==1)
					{
						imageRepeater1.dataProvider=clipComboBox.selectedItem.description;
					}
				}
			}
			
			//Strat svg image code
			public var svgImage:String;
			public function mySvgImage():void
			{
				var n:int = galleries.source.length;
				for (var i:int = 0; i < n; i++)
				{
					
					svgImage = galleries.source[i].img;
					
					canvas = new Sprite();
					this.rawChildren.addChild(canvas);
					var loader:URLLoader = new URLLoader();
					var request:URLRequest = new URLRequest(galleries.source[i].img);
					loader.load(request);
					loader.addEventListener(Event.COMPLETE, onLoadComplete);
				}	
			}
			
			private function onLoadComplete(event:Event):void 
			{
			    var loader:URLLoader = URLLoader(event.target);
			    paths = new SvgPaths(loader.data);		    
			    var svgv:SVGViewer = new SVGViewer();
			    svgv.xml = new XML(loader.data);
			    svgv.myWidth(50);
				svgv.myHeight(50);
			   	svgv.addEventListener(MouseEvent.CLICK, onVectorGraphicSelect);
			    
			    svgv.x = localX;
			    svgv.y = localY;
				
				localX += 60;
				
				if(localX > 180)
				{
					localY += 60;
					localX = 10;
				}
				
				mySvgThumb.addChild(svgv);
			}	
			
			private function onVectorGraphicSelect(event:MouseEvent):void 
			{
				 var svgv:SVGViewer = new SVGViewer();
				 svgv.xml = (event.currentTarget as SVGViewer).xml;
				 svgv.myHeight(150);
	    	 	 svgv.myWidth(150);
	    	 	 if(svgv != null)
				 {
				    var oh1:ObjectHandles = new ObjectHandles();
				    oh1.allowHMove=true;
					oh1.allowHResize=true;
					oh1.allowVMove=true;
					oh1.allowVResize=true;
					oh1.allowRotate=true;
					oh1.mouseChildren=true;
				    oh1.width=150;
				    oh1.height=150;
				    oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
				    oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,svgNewWidthHeight);
				    
				    oh1.addChild(svgv);
				    
				    if(myViewStack.selectedChild==Tshirt)
					{
				    	
				    	if(mySubViewStack.selectedChild==genericTshirt)
						{
				    		genericTshirt.addChild(oh1);
				    	
				 		}else if(mySubViewStack.selectedChild==genericTshirtBack)
				 		{
				 			genericTshirtBack.addChild(oh1);
				 		
				 		}else if(mySubViewStack.selectedChild==genericTshirtLeft){
				 	
				 			genericTshirtLeft.addChild(oh1);
				 		
				 		}else if(mySubViewStack.selectedChild==genericTshirtRight){
				 	
				 			genericTshirtRight.addChild(oh1);
				 		}
					}
				 }
		 	}
			
			public function svgNewWidthHeight(e:ObjectHandleEvent):void
			{
				var svgv:SVGViewer =  e.currentTarget.getChildAt(0) as SVGViewer;
				var seleObject:ObjectHandles= e.currentTarget as ObjectHandles;	
			 	newWidth =  (e.currentTarget as ObjectHandles).width;
	    	 	newHeight =  (e.currentTarget as ObjectHandles).height;
	    	 	svgv.myHeight(newHeight);
	    	 	svgv.myWidth(newWidth);
			}
	    	 
	    	//Start web services code
	    	 
	    	public function getLogin():void
			{
				var apiUser:String = 'flex';
				var apiKey:String = 'flex123';
			}
			
			
			private function showLoading():void 
			{
				PopUpManager.addPopUp(loading, this, true);
				PopUpManager.centerPopUp(loading);
			}
			
			private function hideLoading():void 
			{
				PopUpManager.removePopUp(loading);
			}
			
			private function showLoadingFont():void 
			{
				PopUpManager.addPopUp(loadingFont, this, true);
				PopUpManager.centerPopUp(loadingFont);
			}
			
			private function hideLoadingFont():void 
			{
				PopUpManager.removePopUp(loadingFont);
			}
			
			private function showLoadingCart():void 
			{
				PopUpManager.addPopUp(loadingCart, this, true);
				PopUpManager.centerPopUp(loadingCart);
			}
			
			public function myLogin(tage:String):void
			{
				
				if(myViewStack.selectedChild==Tshirt){
				
					draws.width=26;
					draws.visible = true;
				}
				
				var apiUser:String = 'flex';
				var apiKey:String = 'flex123';
				if(tage == 'shirtEditor')
				{
					LoginAPI.login.send(apiUser, apiKey);
					LoginAPIs.login.send(apiUser, apiKey);
					LoginShapeAPIs.login.send(apiUser, apiKey);
					
					
				}
				showLoading(); 
			}
			
			public function getLogin_result(event:ResultEvent):void
			{
				_SESSIONID = event.result as String;
				LoginAPI.call.send(_SESSIONID, "category.assignedProducts", assignedProductsTshirtCat);
				LoginAPIs.call.send(_SESSIONID, 'category.level', comboCat);
				LoginShapeAPIs.call.send(_SESSIONID, 'category.assignedProducts', assignedShapeTshirtCat);
				if(skus !=null)
    			{
    				CallAPI.call.send(_SESSIONID, "product_media.list", skus);
    			}
				
				hideLoading();
			}
			
			public function getLogin_fault(event:FaultEvent):void
			{
				mx.controls.Alert.show(''+event);
			}
			
			public function getCall_result(event:ResultEvent):void
			{
				arrProductInfo = event.result as ArrayCollection;
				
			}
			public function getCall_fault(event:FaultEvent):void
			{
				mx.controls.Alert.show(''+event);
			}
			public function getcombo_result(event:ResultEvent):void
			{
				dataArrayApi = event.result as ArrayCollection;
			}
			public function getcombo_fault(event:FaultEvent):void
			{
				mx.controls.Alert.show(''+event);
			}
			
			public function getShape_result(event:ResultEvent):void
			{
				shapeArrayApi = event.result as ArrayCollection;
				
			}
			public function getShape_fault(event:FaultEvent):void
			{
				mx.controls.Alert.show(''+event);
			}
			
			private function getImagesApi(sku:String):void
			{
				CallAPI.call.send(_SESSIONID, "product_media.list", sku);
				addtocart.visible=true;
				tsqty.visible=true;
				Quantity.visible=true;
				pricetagshirt.visible=true;
			}	
			public function getImage_result(event:ResultEvent):void
			{
				arrImageInfo      = event.result as ArrayCollection;
				var colorArr:Array = new Array();
				productcolorPicker.dataProvider = simpleDP;
				productcolorPicker.visible  = true;
				procolor.visible  = true;
				if(arrImageInfo.source[0].colors){
				for(var i:int = 0; i < arrImageInfo.source[0].colors.list.length; i++){
					colorArr.push(arrImageInfo.source[0].colors.list.source[i]);
				}		
						productcolorPicker.dataProvider = colorArr;
						procolor.visible  = true;
						productcolorPicker.visible  = true;
				}
				
				
				var n:int = arrImageInfo.source.length;
				proPrice =0;
				proPrice = parseInt(arrImageInfo.source[0].price);
				totalPrice += proPrice;
				price1.text=ObjectUtil.toString(totalPrice);
				productId = arrImageInfo.source[0].product_id;
				previewImg.source = myApiUrl+'/'+arrImageInfo.source[0].file;
				Top.source		  = myApiUrl+'/'+ arrImageInfo.source[0].file;
				if(n>1){
				Bottom.source     = myApiUrl+'/'+ arrImageInfo.source[1].file;
				}else{
				Bottom.source     = 	'';
				}
				if(n==4)
				{
					Left.source       = myApiUrl+'/'+ arrImageInfo.source[2].file;
					Right.source      = myApiUrl+'/'+ arrImageInfo.source[3].file;
					
				}else{
				
					Left.source       = "";
					Right.source      = "";
				
				}	
				
				
				 
			}
			public function getPrice_result(event:ResultEvent):void
			{
				
				arrPriceInfo      = event.result as ArrayCollection;
				var n:int = arrPriceInfo.source.length;
				
				totalPrice += parseInt(arrPriceInfo.source[0].price);
				price.text=ObjectUtil.toString(totalPrice);
				
			}
			
			private function doEvent(evt:Event):void {
				
                //hideLoading();
                //arrColl.addItem({type:evt.type, idx:arrColl.length+1, eventString:evt.toString()});
				switch (evt.type) 
                {
                	case Event.COMPLETE:
	                 	/* If the load was successful, create a URLVariables object from the URLLoader.data property and populate the paramColl ArrayCollection object. */
	                    var ldr:URLLoader = evt.currentTarget as URLLoader;
	                    var vars:URLVariables = new URLVariables(ldr.data);
	                    var key:String;
						
						for (key in vars) {
	                       paramColl.addItem({key:key, value:vars[key]});
	                    }
	
						var childrenback:Array = genericTshirtBack.getChildren();
						var children:Array = genericTshirt.getChildren();
					    		
						var n:int = children.length;
						var n1:int = childrenback.length;
						var t:int = 0;
				
						
						for (t = 0; t < n1; t++)
						 	{
						 	   var child1:ObjectHandles = childrenback[t] as ObjectHandles;	
							   if(child1 != null)
							   {
								   var backchildcount:int = backchildcount+1;
							    }else{
							    	backchildcount = 0;
							    }
							 }
							 
						for (t = 0; t < n; t++)
						 	{
						 	   var child2:ObjectHandles = children[t] as ObjectHandles;	
							   if(child2 != null)
							   {
								   var childcount:int = childcount+1;
							    }else{
							    	childcount = 0;
							    }
							 }
						
						if(childcount > 0 && backchildcount > 0){
							totalPrice = parseInt(paramColl.source[1].value);
						}else if(childcount > 0 || backchildcount > 0){
							totalPrice = parseInt(paramColl.source[0].value);
						}
						var url:String;
						
						if(myViewStack.selectedChild==Tshirt)
						{
							if(mySubViewStack.selectedChild==genericTshirt)
							{
								var arr:Array = genericTshirt.getChildren();
					      		for(var i:int=0; i < arr.length; i++)
						      	{
						      		var child:TextPath = arr[i] as TextPath;
						      		
						      		if(child !=null)
						      		{
						      			child.setStyle('backgroundAlpha', 0);
						      		}
						      	}
								
							}else if(mySubViewStack.selectedChild==genericTshirtBack)
							{
								var arrBack:Array = genericTshirtBack.getChildren();
					      		for(var j:int=0; j < arrBack.length; j++)
						      	{
						      		var childBack:TextPath = arrBack[j] as TextPath;
						      		
						      		if(childBack !=null)
						      		{
						      			child.setStyle('backgroundAlpha', 0);
										
						      		}
						      	}
								
							}else if(mySubViewStack.selectedChild==genericTshirtLeft){
							
								var arrLeft:Array = genericTshirtLeft.getChildren();
					      		for(var k:int=0; k < arrLeft.length; k++)
						      	{
						      		var childLeft:TextPath = arrLeft[k] as TextPath;
						      		if(childLeft !=null)
						      		{
						      			child.setStyle('backgroundAlpha', 0);
									}
						      	}
							
							}else if(mySubViewStack.selectedChild==genericTshirtRight)
							{
								var arrRight:Array = genericTshirtRight.getChildren();
					      		for(var l:int=0; l < arrRight.length; l++)
						      	{
						      		var childRight:TextPath = arr[l] as TextPath;
						      		
						      		if(childRight !=null)
						      		{
						      			child.setStyle('backgroundAlpha', 0);
									}
						      	}	
							}	
						}
						if(pid == null)
						{
							url = myUrl+"checkout/cart/add/product/"+productId+"/price/"+totalPrice+"/dir/"+randomNum+"/img/"+productId+"-"+curTime+"-top/qty/"+tsqty.text;;
							
						}else{
						
							url = myUrl+"checkout/cart/add/product/"+pid+"/price/"+totalPrice+"/dir/"+randomNum+"/img/"+pid+"-"+curTime+"-top/qty/"+tsqty.text;;
						
						}
						navigateToURL(new URLRequest(url),'_self');
						price.text=ObjectUtil.toString(totalPrice);
	                break;
            	}
            }



   
            private function doEvent1(evt:Event):void {
                
               switch (evt.type) 
                {
                	case Event.COMPLETE:
	                 
	                 	var ldr:URLLoader = evt.currentTarget as URLLoader;
	                    var vars:URLVariables = new URLVariables(ldr.data);
	                    var key:String;
						
						for (key in vars) {
	                       paramColl.addItem({key:key, value:vars[key]});
	                    }
	
						var childrenback:Array = genericTshirtBack.getChildren();
						var children:Array = genericTshirt.getChildren();
					    		
						var n:int = children.length;
						var n1:int = childrenback.length;
						var t:int = 0;
				
						
						for (t = 0; t < n1; t++)
						 	{
						 	   var child1:ObjectHandles = childrenback[t] as ObjectHandles;	
							   if(child1 != null)
							   {
								   var backchildcount:int = backchildcount+1;
							    }else{
							    	backchildcount = 0;
							    }
							 }
							 
						for (t = 0; t < n; t++)
						 	{
						 	   var child2:ObjectHandles = children[t] as ObjectHandles;	
							   if(child2 != null)
							   {
								   var childcount:int = childcount+1;
							    }else{
							    	childcount = 0;
							    }
							 }
						
						if(childcount > 0 && backchildcount > 0){
							totalPrice = parseInt(paramColl.source[1].value);
						}else if(childcount > 0 || backchildcount > 0){
							totalPrice = parseInt(paramColl.source[0].value);
						}
						
						pricetagshirt.text='Price: '+ObjectUtil.toString(totalPrice)+'GBP';
	                break;
            	}
            }

			public function getPriceLess_result(event:ResultEvent):void
			{
				arrPriceLessInfo      = event.result as ArrayCollection;
				var n:int = arrPriceLessInfo.source.length;
				totalPrice -= parseInt(arrPriceLessInfo.source[0].price);
				if(totalPrice < 0)
				{	
					totalPrice=0;
					price.text=ObjectUtil.toString(totalPrice);
					
				}else{
					
					price.text=ObjectUtil.toString(totalPrice);
				}
			}
			public function getImage_fault(event:FaultEvent):void
			{
				mx.controls.Alert.show('failed');
			}
			public function getPriceLess_fault(event:FaultEvent):void
			{
				//mx.controls.Alert.show('failed');
			}
			
			private function onCategoryApi(cat_id:Number):void
			{
				//Alert.show(''+cat_id);
				cat_ids = cat_id;			
				if(cat_ids == 58)
				{
					Alert.show("Please Select Clipart Category.");
					
				}else{
					
					LoginAPIcat.call.send(_SESSIONID, "category.assignedProducts", cat_ids);
					showLoading();
				}
			}
			
			public function getdisplay_result(event:ResultEvent):void
			{
				dataDisplayArray = event.result as ArrayCollection;
				if(myViewStack.selectedChild==Tshirt)
				{
					if(leftsidepenal.selectedIndex==1)
					{
						imageRepeater1.dataProvider = dataDisplayArray.source;
						hideLoading();
					}
				}
			}
			
			public function getdisplay_fault(event:FaultEvent):void
			{
				mx.controls.Alert.show(''+event);
			}
			
			public function cart():void
			{
				showLoadingCart();
				var url:String;
				var widthCMArea:Number;
				var heightCMArea:Number;
				var totalAreaCm:Number;
				var fixedPrice1:Number;
				var leftAreaCm:Number;
				var priceleftAreaCm:Number;
				var fixedPrice:Number;
			
				
				arrColl = new ArrayCollection();
            	paramColl = new ArrayCollection(); 
            	if(pid ==  null)
            	{
            		 takeSnapshot("top", String(productId));
            		 urlReq = new URLRequest(myUrl+"txt/"+String(productId)+".txt");
            		 
            	}else{
            	
            		takeSnapshot("top", String(pid));
            		 urlReq = new URLRequest(myUrl+"txt/"+String(pid)+".txt");
            	
            	}
               
                urlLdr = new URLLoader();
                urlLdr.addEventListener(Event.COMPLETE, doEvent);
                urlLdr.addEventListener(Event.OPEN, doEvent);
                urlLdr.addEventListener(HTTPStatusEvent.HTTP_STATUS, doEvent);
                urlLdr.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
                urlLdr.addEventListener(ProgressEvent.PROGRESS, doEvent);
                urlLdr.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);
                urlLdr.load(urlReq);					
				//cursorManager.setBusyCursor();
			}  
			
			public function showPrice():void
			{
				var url:String;
				var widthCMArea:Number;
				var heightCMArea:Number;
				var totalAreaCm:Number;
				var fixedPrice1:Number;
				var leftAreaCm:Number;
				var priceleftAreaCm:Number;
				var fixedPrice:Number;
			
				if(myViewStack.selectedChild == Tshirt){					
		
					arrColl = new ArrayCollection();
	            	paramColl = new ArrayCollection(); 
	                urlReq = new URLRequest(myUrl+"txt/"+String(productId)+".txt");
	                urlLdr = new URLLoader();
	                urlLdr.addEventListener(Event.COMPLETE, doEvent1);
	                urlLdr.addEventListener(Event.OPEN, doEvent1);
	                urlLdr.addEventListener(HTTPStatusEvent.HTTP_STATUS, doEvent1);
	                urlLdr.addEventListener(IOErrorEvent.IO_ERROR, doEvent1);
	                urlLdr.addEventListener(ProgressEvent.PROGRESS, doEvent1);
	                urlLdr.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent1);
	                urlLdr.load(urlReq);					
				
					
				}
				
			} 
			
			public var totalCount:int = 0;
			public var myXml:String;	
			public var fileName:String;
	        private function insertData():void 
	        {
	        	if(myViewStack.selectedChild==Tshirt)
				{
					//Tshitr Editor
					var childrenTshirt:Array = genericTshirt.getChildren();
					for (var tshirt:int = 0; tshirt < childrenTshirt.length; tshirt++)
			 		{
			 			var childObjTshirt:ObjectHandles = childrenTshirt[tshirt] as ObjectHandles;
			 			if(childObjTshirt != null)
					    {
					    	var txtTshirt:TextArea = childObjTshirt.getChildAt(0) as TextArea;
					    	var imgTshirt:Image = childObjTshirt.getChildAt(0) as Image; 
					    	var textViewTshirt:TextView = childObjTshirt.getChildAt(0) as TextView;
					    	var svgTshirt:SVGViewer = childObjTshirt.getChildAt(0) as SVGViewer;
					    	
					    	
					    	
					    	if(textViewTshirt!=null)
					    	{
					    		
					    		if(textViewTshirt)
					    		{
					    			var pro_id:String 				= 'TShirt';
									var subproduct_id:String		= 'TshirtFront';
								 	var Obj_id:String 				= 'arcEditorObjTop';
								 	var Obj_type:String		    	= 'genericTshirt';
						     	 	var radius:Number 				= myRad;
								 	var spacing:Number 				= space.value;
								 	var angleLeading:Number 		= angleleading.value;
								 	var angularOffset:Number 		= angularOffsets.value;
						     	 	var Obj_value:String			= myActTextRound.text;
									var _x:Number					= childObjTshirt.x;
									var _y:Number					= childObjTshirt.y;
									var _width:Number				= childObjTshirt.width;
									var _height:Number				= childObjTshirt.height;
									var col:String;
								    if(myColor=='')
								    {
										col						= '000000';
									 
								    }else{
								 
								 		col						= myColor;
								 
								    }
								 	var font_size:String			= String(fontsize.value);
								    var font_weight:String			= "normal";
								    var font_family:String			= String(textViewTshirt.getStyle('fontFamily'));
								    var align:String				= "center";
					          	 	
					          	 	httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
									"&pro_id="+pro_id+
									"&subproduct_id="+subproduct_id+
									"&obj_id="+Obj_id+
									"&obj_type="+Obj_type+
									"&obj_value="+Obj_value+
									"&x_pos="+_x+
									"&y_pos="+_y+
									"&width="+_width+
									"&height="+_height+
									"&radius="+radius+
									"&spacing="+spacing+
									"&angleLeading="+angleLeading+
									"&angularOffset="+angularOffset+
									"&color="+col+
									"&font_size="+font_size+
									"&font_family="+font_family+
									"&font_weight="+font_weight+
									"&align="+align;
									//Alert.show(''+httpServicedata.url);
									httpServicedata.send();
					    		}
					    	}
					    	
					    	if(txtTshirt!=null)
					    	{
						    	if(txtTshirt)
					    		{
					    			var pro_id_tshirt:String 				= 'TShirt';
						     		var subproduct_id_tshirt:String			= "TShirtFront";
									var Obj_id_tshirt:String;
									if(txtTshirt.id == null)
									{
										 Obj_id_tshirt				= String(txtTshirt);
									}else{
									
										Obj_id_tshirt 				= String(txtTshirt.id);
									}
									
									
									var Obj_type_tshirt:String				= "TextArea";
									var Obj_value_tshirt:String				= String(txtTshirt.text);
									var _x_tshirt:Number					= Number(childObjTshirt.x);
									var _y_tshirt:Number					= Number(childObjTshirt.y);
									var _width_tshirt:Number				= Number(txtTshirt.width);
									var _height_tshirt:Number				= Number(txtTshirt.height);
									var mynumber_tshirt:Number 				= txtTshirt.getStyle('color');
									var col_tshirt:String					= intToHexs(txtTshirt.getStyle('color'));
									var font_size_tshirt:String				= String(txtTshirt.getStyle('fontSize'));
									var font_family_tshirt:String			= String(txtTshirt.getStyle('fontFamily'));
									var font_weight_tshirt:String			= String(txtTshirt.getStyle('fontWeight'));
									var align_tshirt:String					= String(txtTshirt.getStyle('textAlign'));
									
									httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+"&pro_id="+pro_id_tshirt+"&subproduct_id="+subproduct_id_tshirt+"&obj_id="+Obj_id_tshirt+"&obj_type="+Obj_type_tshirt+"&obj_value="+Obj_value_tshirt+"&x_pos="+_x_tshirt+"&y_pos="+_y_tshirt+"&width="+_width_tshirt+"&height="+_height_tshirt+"&radius=&spacing=&angleLeading=&angularOffset=&color="+col_tshirt+"&font_size="+font_size_tshirt+"&font_family="+font_family_tshirt+"&font_weight="+font_weight_tshirt+"&align="+align_tshirt;
			    					//Alert.show(''+httpServicedata.url);
			    					httpServicedata.send();
							     
					    		}
				    		}
				    		if(imgTshirt !=null)
				    		{
					    		if(imgTshirt)
					    		{
					    			
					    			var pro_id_tshirt_img:String 				= 'TShirt';
						     		var subproduct_id_tshirt_img:String			= "TShirtFront";
									var Obj_id_tshirt_img:String;
									if(imgTshirt.id == null)
									{
										 Obj_id_tshirt_img				= String(imgTshirt);
										
									}else{
									
										Obj_id_tshirt_img 				= String(imgTshirt.id);
									}
									
									var Obj_type_tshirt_img:String				= "Image";
									var Obj_value_tshirt_img:String				= String(imgTshirt.source);
									var _x_tshirt_img:Number					= Number(childObjTshirt.x);
									var _y_tshirt_img:Number					= Number(childObjTshirt.y);
									var _width_tshirt_img:Number				= Number(imgTshirt.width);
									var _height_tshirt_img:Number				= Number(imgTshirt.height);
									
									var col_tshirt_img:String;
									if(myclipvalue != 0)
									{
										col_tshirt_img 					= String(myclipvalue);
										
									}else if(copyColor != 0){
									
											col_tshirt_img 				= String(copyColor);
									
									}else{
									
										col_tshirt_img 				= String(16777215);
									
									}
									
									httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+"&pro_id="+pro_id_tshirt_img+"&subproduct_id="+subproduct_id_tshirt_img+"&obj_id="+Obj_id_tshirt_img+"&obj_type="+Obj_type_tshirt_img+"&obj_value="+Obj_value_tshirt_img+"&x_pos="+_x_tshirt_img+"&y_pos="+_y_tshirt_img+"&width="+_width_tshirt_img+"&height="+_height_tshirt_img+"&color="+col_tshirt_img;
									//Alert.show(''+httpServicedata.url);
			    					httpServicedata.send();
					    				
					    		}
				    		}
				    		
				    		if(svgTshirt !=null)
				    		{
					    		if(svgTshirt)
					    		{
					    			
					    			var pro_id_tshirt_svg:String 				= 'TShirt';
						     		var subproduct_id_tshirt_svg:String			= "TShirtFront";
									var Obj_id_tshirt_svg:String;
									if(svgTshirt.id == null)
									{
										 Obj_id_tshirt_svg						= String(svgTshirt);
										
									}else{
									
										Obj_id_tshirt_svg 						= String(svgTshirt.id);
									}
									
									var Obj_type_tshirt_svg:String				= "svgImage";
									//var Obj_value_tshirt_svg:String			= String(svgImage);
									var Obj_value_tshirt_svg:String				= String(_strDomain +"uploads/image/"+randomNum+"/svgimage"+tshirt+".xml");
									var _x_tshirt_svg:Number					= Number(childObjTshirt.x);
									var _y_tshirt_svg:Number					= Number(childObjTshirt.y);
									var _width_tshirt_svg:Number				= Number(childObjTshirt.width);
									var _height_tshirt_svg:Number				= Number(childObjTshirt.height);
									
									var col_tshirt_svg:String;
									if(myclipvalue != 0)
									{
										col_tshirt_svg 					= String(myclipvalue);
										
									}else if(copyColor != 0){
									
											col_tshirt_svg 				= String(copyColor);
									
									}else{
									
										col_tshirt_svg				= String(16777215);
									
									}
									
									fileName = "svgimage"+ tshirt +".xml";
					    			myRemote.mySvg(randomNum, fileName, String(svgTshirt.xml)) 
									
									httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+"&pro_id="+pro_id_tshirt_svg+"&subproduct_id="+subproduct_id_tshirt_svg+"&obj_id="+Obj_id_tshirt_svg+"&obj_type="+Obj_type_tshirt_svg+"&obj_value="+Obj_value_tshirt_svg+"&x_pos="+_x_tshirt_svg+"&y_pos="+_y_tshirt_svg+"&width="+_width_tshirt_svg+"&height="+_height_tshirt_svg+"&color="+col_tshirt_svg;
									//Alert.show(''+httpServicedata.url);
			    					httpServicedata.send();
			    					
					    				
					    		}
				    		}
				    	}
			 		}
			 		
			 		var childrenTshirtBack:Array = genericTshirtBack.getChildren();
		        	for (var TBack:int = 0; TBack < childrenTshirtBack.length; TBack++)
			 		{
			 			var childObjTshirtBack:ObjectHandles = childrenTshirtBack[TBack] as ObjectHandles;
			 			if(childObjTshirtBack != null)
					    {
					    	
					    	var textViewTshirtBack:TextView = childObjTshirtBack.getChildAt(0) as TextView;
					    	if(textViewTshirtBack!=null)
					    	{
					    		if(textViewTshirtBack)
					    		{
					    			var pro_id_back:String 				= 'TShirt';
									var subproduct_id_back:String		= 'TshirtBack';
								 	var Obj_id_back:String 				= 'arcEditorObjBottom';
								 	var Obj_type_back:String		    = 'genericTshirtBack';
						     	 	var radius_back:Number 				= myRad;
								 	var spacing_back:Number 			= space.value;
								 	var angleLeading_back:Number 		= angleleading.value;
								 	var angularOffset_back:Number 		= angularOffsets.value;
						     	 	var Obj_value_back:String			= myActTextRound.text;
									var _x_back:Number					= childObjTshirtBack.x;
									var _y_back:Number					= childObjTshirtBack.y;
									var _width_back:Number				= childObjTshirtBack.width;
									var _height_back:Number				= childObjTshirtBack.height;
									var col_back:String;
								    if(myColor=='')
								    {
										col_back						= '000000';
									 
								    }else{
								 
								 		col_back						= myColor;
								 
								    }
								 	var font_size_back:String			= String(fontsize.value);
								    var font_weight_back:String			= "normal";
								    var font_family_back:String			= String(childObjTshirtBack.getStyle('fontFamily'));
								    var align_back:String				= "center";
					          	 	httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
									"&pro_id="+pro_id_back+
									"&subproduct_id="+subproduct_id_back+
									"&obj_id="+Obj_id_back+
									"&obj_type="+Obj_type_back+
									"&obj_value="+Obj_value_back+
									"&x_pos="+_x_back+
									"&y_pos="+_y_back+
									"&width="+_width_back+
									"&height="+_height_back+
									"&radius="+radius_back+
									"&spacing="+spacing_back+
									"&angleLeading="+angleLeading_back+
									"&angularOffset="+angularOffset_back+
									"&color="+col_back+
									"&font_size="+font_size_back+
									"&font_family="+font_family_back+
									"&font_weight="+font_weight_back+
									"&align="+align_back;
									//Alert.show(httpServicedata.url);
									httpServicedata.send();
								}
					    	}
					    	
					    	var txtTshirtback:TextArea = childObjTshirtBack.getChildAt(0) as TextArea;
					    	if(txtTshirtback)
				    		{
				    			var pro_id_tshirtback:String 				= 'TShirt';
					     		var subproduct_id_tshirtback:String			= "TShirtBack";
								var Obj_id_tshirtback:String;
								if(txtTshirtback.id == null)
								{
									 Obj_id_tshirtback				= String(txtTshirtback);
									
								}else{
								
									Obj_id_tshirtback 				= String(txtTshirtback.id);
								} 
								
								var Obj_type_tshirtback:String				= "TextArea";
								var Obj_value_tshirtback:String				= String(txtTshirtback.text);
								var _x_tshirtback:Number					= Number(childObjTshirtBack.x);
								var _y_tshirtback:Number					= Number(childObjTshirtBack.y);
								var _width_tshirtback:Number				= Number(txtTshirtback.width);
								var _height_tshirtback:Number				= Number(txtTshirtback.height);
								var mynumber_tshirtback:Number 				= txtTshirtback.getStyle('color');
								var col_tshirtback:String					= intToHexs(txtTshirtback.getStyle('color'));
								var font_size_tshirtback:String				= String(txtTshirtback.getStyle('fontSize'));
								var font_family_tshirtback:String			= String(txtTshirtback.getStyle('fontFamily'));
								var font_weight_tshirtback:String			= String(txtTshirtback.getStyle('fontWeight'));
								var align_tshirtback:String					= String(txtTshirtback.getStyle('textAlign'));
								
								httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+"&pro_id="+pro_id_tshirtback+"&subproduct_id="+subproduct_id_tshirtback+"&obj_id="+Obj_id_tshirtback+"&obj_type="+Obj_type_tshirtback+"&obj_value="+Obj_value_tshirtback+"&x_pos="+_x_tshirtback+"&y_pos="+_y_tshirtback+"&width="+_width_tshirtback+"&height="+_height_tshirtback+"&radius=&spacing=&angleLeading=&angularOffset=&color="+col_tshirtback+"&font_size="+font_size_tshirtback+"&font_family="+font_family_tshirtback+"&font_weight="+font_weight_tshirtback+"&align="+align_tshirtback;
		    					//Alert.show(''+httpServicedata.url);
		    					httpServicedata.send();
						     
				    		} 
				    		var imgTshirtBack:Image = childObjTshirtBack.getChildAt(0) as Image; 
				    		if(imgTshirtBack !=null)
				    		{
				    			
				    			var pro_id_tshirtback_img:String 				= 'TShirt';
					     		var subproduct_id_tshirtback_img:String			= "TShirtBack";
								var Obj_id_tshirtback_img:String;
								
								if(imgTshirtBack.id == null)
								{
									 Obj_id_tshirtback_img						= String(imgTshirtBack);
									
								}else{
								
									Obj_id_tshirtback_img 						= String(imgTshirtBack.id);
								}
								
								var Obj_type_tshirtback_img:String				= "Image";
								var Obj_value_tshirtback_img:String				= String(imgTshirtBack.source);
								var _x_tshirtback_img:Number					= Number(childObjTshirtBack.x);
								var _y_tshirtback_img:Number					= Number(childObjTshirtBack.y);
								var _width_tshirtback_img:Number				= Number(imgTshirtBack.width);
								var _height_tshirtback_img:Number				= Number(imgTshirtBack.height);
								var col_tshirtback_img:String;
								
								if(myclipvalue != 0)
								{
									col_tshirtback_img 					= String(myclipvalue);
									
								}else if(copyColor != 0){
								
										col_tshirtback_img 				= String(copyColor);
								
								}else{
								
									col_tshirtback_img 				= String(16777215);
								
								}

								
								
								httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+"&pro_id="+pro_id_tshirtback_img+"&subproduct_id="+subproduct_id_tshirtback_img+"&obj_id="+Obj_id_tshirtback_img+"&obj_type="+Obj_type_tshirtback_img+"&obj_value="+Obj_value_tshirtback_img+"&x_pos="+_x_tshirtback_img+"&y_pos="+_y_tshirtback_img+"&width="+_width_tshirtback_img+"&height="+_height_tshirtback_img+"&color="+col_tshirtback_img;
								//Alert.show(''+httpServicedata.url);
		    					httpServicedata.send();
				    				
				    		}
				    		
				    		var svgTshirtBack:SVGViewer = childObjTshirtBack.getChildAt(0) as SVGViewer;
				    		if(svgTshirtBack !=null)
				    		{
					    		if(svgTshirtBack)
					    		{
					    			
					    			var pro_id_tshirt_svgBack:String 				= 'TShirt';
						     		var subproduct_id_tshirt_svgBack:String			= "TShirtBack";
									var Obj_id_tshirt_svgBack:String;
									if(svgTshirtBack.id == null)
									{
										 Obj_id_tshirt_svgBack						= String(svgTshirtBack);
										
									}else{
									
										Obj_id_tshirt_svgBack 						= String(svgTshirtBack.id);
									}
									
									var Obj_type_tshirt_svgBack:String				= "svgImage";
									//var Obj_value_tshirt_svgBack:String			= String(svgImage);
									var Obj_value_tshirt_svgBack:String				= String(_strDomain +"uploads/image/"+randomNum+"/svgimageBack"+TBack+".xml");
									var _x_tshirt_svgBack:Number					= Number(childObjTshirtBack.x);
									var _y_tshirt_svgBack:Number					= Number(childObjTshirtBack.y);
									var _width_tshirt_svgBack:Number				= Number(childObjTshirtBack.width);
									var _height_tshirt_svgBack:Number				= Number(childObjTshirtBack.height);
									
									var col_tshirt_svgBack:String;
									if(myclipvalue != 0)
									{
										col_tshirt_svgBack 						   = String(myclipvalue);
										
									}else if(copyColor != 0){
									
											col_tshirt_svgBack					   = String(copyColor);
									
									}else{
									
										col_tshirt_svgBack				           = String(16777215);
									
									}
									fileName = "svgimageBack"+ TBack +".xml";
					    			myRemote.mySvg(randomNum, fileName, String(svgTshirtBack.xml)) 
					    			
									httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+"&pro_id="+pro_id_tshirt_svgBack+"&subproduct_id="+subproduct_id_tshirt_svgBack+"&obj_id="+Obj_id_tshirt_svgBack+"&obj_type="+Obj_type_tshirt_svgBack+"&obj_value="+Obj_value_tshirt_svgBack+"&x_pos="+_x_tshirt_svgBack+"&y_pos="+_y_tshirt_svgBack+"&width="+_width_tshirt_svgBack+"&height="+_height_tshirt_svgBack+"&color="+col_tshirt_svgBack;
									//Alert.show(''+httpServicedata.url);
			    					httpServicedata.send();
					    				
					    		}
				    		}
				    	}
			 		}
			 		var childrenTshirtLeft:Array = genericTshirtLeft.getChildren();
		        	for (var TLeft:int = 0; TLeft < childrenTshirtLeft.length; TLeft++)
			 		{
			 			var childObjTshirtLeft:ObjectHandles = childrenTshirtLeft[TLeft] as ObjectHandles;
			 			if(childObjTshirtLeft != null)
					    {
					    	
					    	var textViewTshirtLeft:TextView = childObjTshirt.getChildAt(0) as TextView;
					    	if(textViewTshirtLeft!=null)
					    	{
					    		
					    		if(textViewTshirtLeft)
					    		{
					    			var pro_id_left_arc:String 				= 'TShirt';
									var subproduct_id_left_arc:String		= 'TshirtLeft';
								 	var Obj_id_left_arc:String 				= 'arcEditorObjLeft';
								 	var Obj_type_left_arc:String		    = 'genericTshirtLeft';
						     	 	var radius_left_arc:Number 				= myRad;
								 	var spacing_left_arc:Number 			= space.value;
								 	var angleLeading_left_arc:Number 		= angleleading.value;
								 	var angularOffset_left_arc:Number 		= angularOffsets.value;
						     	 	var Obj_value_left_arc:String				= myActTextRound.text;
									var _x_left_arc:Number					= textViewTshirtLeft.x;
									var _y_left_arc:Number					= textViewTshirtLeft.y;
									var _width_left_arc:Number				= textViewTshirtLeft.width;
									var _height_left_arc:Number				= textViewTshirtLeft.height;
									var col_left_arc:String;
								    if(myColor=='')
								    {
										col_left_arc						= '000000';
									 
								    }else{
								 
								 		col_left_arc						= myColor;
								 
								    }
								 	var font_size_left_arc:String			= String(fontsize.value);
								    var font_weight_left_arc:String			= "normal";
								    var font_family_left_arc:String			= String(textViewTshirtLeft.getStyle('fontFamily'));
								    var align_left_arc:String				= "center";
					          	 	
					          	 	httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
									"&pro_id="+pro_id_left_arc+
									"&subproduct_id="+subproduct_id_left_arc+
									"&obj_id="+Obj_id_left_arc+
									"&obj_type="+Obj_type_left_arc+
									"&obj_value="+Obj_value_left_arc+
									"&x_pos="+_x_left_arc+
									"&y_pos="+_y_left_arc+
									"&width="+_width_left_arc+
									"&height="+_height_left_arc+
									"&radius="+radius_left_arc+
									"&spacing="+spacing_left_arc+
									"&angleLeading="+angleLeading_left_arc+
									"&angularOffset="+angularOffset_left_arc+
									"&color="+col_left_arc+
									"&font_size="+font_size_left_arc+
									"&font_family="+font_family_left_arc+
									"&font_weight="+font_weight_left_arc+
									"&align="+align_left_arc;
									//Alert.show(httpServicedata.url);
									httpServicedata.send();
									
					    		}
					    	}
					    	
					    	
					    	var txtTshirtLeft:TextArea = childObjTshirtLeft.getChildAt(0) as TextArea;
					    	if(txtTshirtLeft !=null)
				    		{
				    			var pro_id_tshirtleft:String 				= 'TShirt';
					     		var subproduct_id_tshirtleft:String			= "TShirtLeft";
								var Obj_id_tshirtleft:String;;
								if(txtTshirtLeft.id == null)
								{
									Obj_id_tshirtleft	= String(txtTshirtLeft);
									
								}else{
								
									Obj_id_tshirtleft 		= String(txtTshirtLeft.id);
								}								
								var Obj_type_tshirtleft:String				= "TextArea";
								var Obj_value_tshirtleft:String				= String(txtTshirtLeft.text);
								var _x_tshirtleft:Number					= Number(childObjTshirtLeft.x);
								var _y_tshirtleft:Number					= Number(childObjTshirtLeft.y);
								var _width_tshirtleft:Number				= Number(txtTshirtLeft.width);
								var _height_tshirtleft:Number				= Number(txtTshirtLeft.height);
								var mynumber_tshirtleft:Number 				= txtTshirtLeft.getStyle('color');
								var col_tshirtleft:String					= intToHexs(txtTshirtLeft.getStyle('color'));
								var font_size_tshirtleft:String				= String(txtTshirtLeft.getStyle('fontSize'));
								var font_family_tshirtleft:String			= String(txtTshirtLeft.getStyle('fontFamily'));
								var font_weight_tshirtleft:String			= String(txtTshirtLeft.getStyle('fontWeight'));
								var align_tshirtleft:String					= String(txtTshirtLeft.getStyle('textAlign'));
								
								httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
								"&pro_id="+pro_id_tshirtleft+
								"&subproduct_id="+subproduct_id_tshirtleft+
								"&obj_id="+Obj_id_tshirtleft+
								"&obj_type="+Obj_type_tshirtleft+
								"&obj_value="+Obj_value_tshirtleft+
								"&x_pos="+_x_tshirtleft+
								"&y_pos="+_y_tshirtleft+
								"&width="+_width_tshirtleft+
								"&height="+_height_tshirtleft+
								"&radius=&spacing=&angleLeading=&angularOffset=&color="+col_tshirtleft+
								"&font_size="+font_size_tshirtleft+
								"&font_family="+font_family_tshirtleft+
								"&font_weight="+font_weight_tshirtleft+
								"&align="+align_tshirtleft;
		    					//Alert.show(''+httpServicedata.url);
		    					httpServicedata.send();
						     
				    		} 
				    		var imgTshirtLeft:Image = childObjTshirtLeft.getChildAt(0) as Image; 
				    		if(imgTshirtLeft !=null)
				    		{
				    			
				    			var pro_id_tshirtleft_img:String 				= 'TShirt';
					     		var subproduct_id_tshirtleft_img:String			= "TShirtLeft";
								
								var Obj_id_tshirtleft_img:String;;
								if(imgTshirtLeft.id == null)
								{
									Obj_id_tshirtleft_img	= String(imgTshirtLeft);
									
								}else{
								
									Obj_id_tshirtleft_img 		= String(imgTshirtLeft.id);
								}
								
								var Obj_type_tshirtleft_img:String				= "Image";
								var Obj_value_tshirtleft_img:String				= String(imgTshirtLeft.source);
								var _x_tshirtleft_img:Number					= Number(childObjTshirtLeft.x);
								var _y_tshirtleft_img:Number					= Number(childObjTshirtLeft.y);
								var _width_tshirtleft_img:Number				= Number(imgTshirtLeft.width);
								var _height_tshirtleft_img:Number				= Number(imgTshirtLeft.height);
								var col_tshirtleft_img:String;
								
								if(myclipvalue != 0)
								{
									col_tshirtleft_img 					= String(myclipvalue);
									
								}else if(copyColor != 0){
								
										col_tshirtleft_img 				= String(copyColor);
								
								}else{
								
									col_tshirtleft_img 				= String(16777215);
								
								}								
								httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
								"&pro_id="+pro_id_tshirtleft_img+
								"&subproduct_id="+subproduct_id_tshirtleft_img+
								"&obj_id="+Obj_id_tshirtleft_img+
								"&obj_type="+Obj_type_tshirtleft_img+
								"&obj_value="+Obj_value_tshirtleft_img+
								"&x_pos="+_x_tshirtleft_img+
								"&y_pos="+_y_tshirtleft_img+
								"&width="+_width_tshirtleft_img+
								"&height="+_height_tshirtleft_img+
								"&color="+col_tshirtleft_img;
								//Alert.show(''+httpServicedata.url);
		    					httpServicedata.send();
				    				
				    		}
				    		
				    		var svgTshirtLeft:SVGViewer = childObjTshirtLeft.getChildAt(0) as SVGViewer;
				    		if(svgTshirtLeft !=null)
				    		{
					    		if(svgTshirtLeft)
					    		{
					    			
					    			var pro_id_tshirt_svgLeft:String 				= 'TShirt';
						     		var subproduct_id_tshirt_svgLeft:String			= "TShirtLeft";
									var Obj_id_tshirt_svgLeft:String;
									if(svgTshirtLeft.id == null)
									{
										 Obj_id_tshirt_svgLeft						= String(svgTshirtLeft);
										
									}else{
									
										Obj_id_tshirt_svgLeft 						= String(svgTshirtLeft.id);
									}
									
									var Obj_type_tshirt_svgLeft:String				= "svgImage";
									//var Obj_value_tshirt_svgLeft:String			= String(svgImage);
									var Obj_value_tshirt_svgLeft:String				=  String(_strDomain +"uploads/image/"+randomNum+"/svgimageLeft"+ TLeft +".xml");
									var _x_tshirt_svgLeft:Number					= Number(childObjTshirtLeft.x);
									var _y_tshirt_svgLeft:Number					= Number(childObjTshirtLeft.y);
									var _width_tshirt_svgLeft:Number				= Number(childObjTshirtLeft.width);
									var _height_tshirt_svgLeft:Number				= Number(childObjTshirtLeft.height);
									
									var col_tshirt_svgLeft:String;
									if(myclipvalue != 0)
									{
										col_tshirt_svgLeft 						   = String(myclipvalue);
										
									}else if(copyColor != 0){
									
											col_tshirt_svgLeft					   = String(copyColor);
									
									}else{
									
										col_tshirt_svgLeft				           = String(16777215);
									
									}
									
									fileName = "svgimageLeft"+ TLeft +".xml";
					    			myRemote.mySvg(randomNum, fileName, String(svgTshirtLeft.xml)); 
									
									httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+"&pro_id="+pro_id_tshirt_svgLeft+"&subproduct_id="+subproduct_id_tshirt_svgLeft+"&obj_id="+Obj_id_tshirt_svgLeft+"&obj_type="+Obj_type_tshirt_svgLeft+"&obj_value="+Obj_value_tshirt_svgLeft+"&x_pos="+_x_tshirt_svgLeft+"&y_pos="+_y_tshirt_svgLeft+"&width="+_width_tshirt_svgLeft+"&height="+_height_tshirt_svgLeft+"&color="+col_tshirt_svgLeft;
									//Alert.show(''+httpServicedata.url);
			    					httpServicedata.send();
					    				
					    		}
				    		}
				    		
				    	}
			 		}
			 		
			 		var childrenTshirtRight:Array = genericTshirtRight.getChildren();
		        	for (var TRight:int = 0; TRight < childrenTshirtRight.length; TRight++)
			 		{
			 			//totalCount++;
			 			var childObjTshirtRight:ObjectHandles = childrenTshirtRight[TRight] as ObjectHandles;
			 			if(childObjTshirtRight != null)
					    {
					    	
					    	var textViewTshirtRight:TextView = childObjTshirt.getChildAt(0) as TextView;
					    	if(textViewTshirtRight!=null)
					    	{
					    		
					    		if(textViewTshirtRight)
					    		{
					    			var pro_id_right_arc:String 			= 'TShirt';
									var subproduct_id_right_arc:String		= 'TshirtRight';
								 	var Obj_id_right_arc:String 			= 'arcEditorObjRight';
								 	var Obj_type_right_arc:String		    = 'genericTshirtRight';
						     	 	var radius_right_arc:Number 			= myRad;
								 	var spacing_right_arc:Number 			= space.value;
								 	var angleLeading_right_arc:Number 		= angleleading.value;
								 	var angularOffset_right_arc:Number 		= angularOffsets.value;
						     	 	var Obj_value_right_arc:String			= myActTextRound.text;
									var _x_right_arc:Number					= textViewTshirtRight.x;
									var _y_right_arc:Number					= textViewTshirtRight.y;
									var _width_right_arc:Number				= textViewTshirtRight.width;
									var _height_right_arc:Number			= textViewTshirtRight.height;
									var col_right_arc:String;
								    if(myColor=='')
								    {
										col_right_arc						= '000000';
									 
								    }else{
								 
								 		col_right_arc						= myColor;
								 
								    }
								 	var font_size_right_arc:String			= String(fontsize.value);
								    var font_weight_right_arc:String		= "normal";
								    var font_family_right_arc:String		= String(textViewTshirtRight.getStyle('fontFamily'));
								    var align_right_arc:String				= "center";
					          	 	
					          	 	 httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
									"&pro_id="+pro_id_right_arc+
									"&subproduct_id="+subproduct_id_right_arc+
									"&obj_id="+Obj_id_right_arc+
									"&obj_type="+Obj_type_right_arc+
									"&obj_value="+Obj_value_right_arc+
									"&x_pos="+_x_right_arc+
									"&y_pos="+_y_right_arc+
									"&width="+_width_right_arc+
									"&height="+_height_right_arc+
									"&radius="+radius_right_arc+
									"&spacing="+spacing_right_arc+
									"&angleLeading="+angleLeading_right_arc+
									"&angularOffset="+angularOffset_right_arc+
									"&color="+col_right_arc+
									"&font_size="+font_size_right_arc+
									"&font_family="+font_family_right_arc+
									"&font_weight="+font_weight_right_arc+
									"&align="+align_right_arc;
									//Alert.show(httpServicedata.url);
									httpServicedata.send();
									
					    		}
					    	}
					    	
					    	
					    	var txtTshirtRight:TextArea = childObjTshirtRight.getChildAt(0) as TextArea;
					    	if(txtTshirtRight !=null)
				    		{
				    			var pro_id_tshirtright:String 				= 'TShirt';
					     		var subproduct_id_tshirtright:String		= "TShirtRight";
																
								var Obj_id_tshirtright:String;;
								if(txtTshirtRight.id == null)
								{
									Obj_id_tshirtright	= String(txtTshirtRight);
									
								}else{
								
									Obj_id_tshirtright 		= String(txtTshirtRight.id);
								}
								
								
								
								var Obj_type_tshirtright:String				= "TextArea";
								var Obj_value_tshirtright:String			= String(txtTshirtRight.text);
								var _x_tshirtright:Number					= Number(childObjTshirtRight.x);
								var _y_tshirtright:Number					= Number(childObjTshirtRight.y);
								var _width_tshirtright:Number				= Number(txtTshirtRight.width);
								var _height_tshirtright:Number				= Number(txtTshirtRight.height);
								var mynumber_tshirtright:Number 			= txtTshirtRight.getStyle('color');
								var col_tshirtright:String					= intToHexs(txtTshirtRight.getStyle('color'));
								var font_size_tshirtright:String			= String(txtTshirtRight.getStyle('fontSize'));
								var font_family_tshirtright:String			= String(txtTshirtRight.getStyle('fontFamily'));
								var font_weight_tshirtright:String			= String(txtTshirtRight.getStyle('fontWeight'));
								var align_tshirtright:String				= String(txtTshirtRight.getStyle('textAlign'));
								
								httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
								"&pro_id="+pro_id_tshirtright+
								"&subproduct_id="+subproduct_id_tshirtright+
								"&obj_id="+Obj_id_tshirtright+
								"&obj_type="+Obj_type_tshirtright+
								"&obj_value="+Obj_value_tshirtright+
								"&x_pos="+_x_tshirtright+
								"&y_pos="+_y_tshirtright+
								"&width="+_width_tshirtright+
								"&height="+_height_tshirtright+
								"&radius=&spacing=&angleLeading=&angularOffset=&color="+col_tshirtright+
								"&font_size="+font_size_tshirtright+
								"&font_family="+font_family_tshirtright+
								"&font_weight="+font_weight_tshirtright+
								"&align="+align_tshirtright;
		    					//Alert.show(''+httpServicedata.url);
		    					httpServicedata.send();
						     
				    		}
				    		
				    		var imgTshirtRight:Image = childrenTshirtRight.getChildAt(0) as Image; 
				    		if(imgTshirtRight !=null)
				    		{
				    			
				    			var pro_id_tshirtright_img:String 				= 'TShirt';
					     		var subproduct_id_tshirtright_img:String		= "TShirtRight";
								var Obj_id_tshirtright_img:String;;
								if(imgTshirtRight.id == null)
								{
									Obj_id_tshirtright_img	= String(imgTshirtRight);
									
								}else{
								
									Obj_id_tshirtright_img 		= String(imgTshirtRight.id);
								}
								var Obj_type_tshirtright_img:String				= "Image";
								var Obj_value_tshirtright_img:String			= String(imgTshirtRight.source);
								var _x_tshirtright_img:Number					= Number(childrenTshirtRight.x);
								var _y_tshirtright_img:Number					= Number(childrenTshirtRight.y);
								var _width_tshirtright_img:Number				= Number(imgTshirtRight.width);
								var _height_tshirtright_img:Number				= Number(imgTshirtRight.height);
								var col_tshirtright_img:String;
								
								if(myclipvalue != 0)
								{
									col_tshirtright_img 				= String(myclipvalue);
									
								}else if(copyColor != 0){
								
									col_tshirtright_img 				= String(copyColor);
								
								}else{
								
									col_tshirtright_img 				= String(16777215);
								
								}								
								
								httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
								"&pro_id="+pro_id_tshirtright_img+
								"&subproduct_id="+subproduct_id_tshirtright_img+
								"&obj_id="+Obj_id_tshirtright_img+
								"&obj_type="+Obj_type_tshirtright_img+
								"&obj_value="+Obj_value_tshirtright_img+
								"&x_pos="+_x_tshirtright_img+
								"&y_pos="+_y_tshirtright_img+
								"&width="+_width_tshirtright_img+
								"&height="+_height_tshirtright_img+
								"&color="+col_tshirtright_img;
								//Alert.show(''+httpServicedata.url);
		    					httpServicedata.send();
				    				
				    		}
				    		
				    		var svgTshirtRight:SVGViewer = childObjTshirtRight.getChildAt(0) as SVGViewer;
				    		if(svgTshirtRight !=null)
				    		{
					    		if(svgTshirtRight)
					    		{
					    			
					    			var pro_id_tshirt_svgRight:String 				= 'TShirt';
						     		var subproduct_id_tshirt_svgRight:String		= "TShirtLeft";
									var Obj_id_tshirt_svgRight:String;
									
									if(svgTshirtRight.id == null)
									{
										 Obj_id_tshirt_svgRight						= String(svgTshirtRight);
										
									}else{
									
										Obj_id_tshirt_svgRight 						= String(svgTshirtRight.id);
									}
									
									var Obj_type_tshirt_svgRight:String				= "svgImage";
									//var Obj_value_tshirt_svgRight:String			= String(svgImage);
									var Obj_value_tshirt_svgRight:String			= String(_strDomain +"uploads/image/"+randomNum+"/svgimageRight"+TRight+".xml");
									var _x_tshirt_svgRight:Number					= Number(childObjTshirtRight.x);
									var _y_tshirt_svgRight:Number					= Number(childObjTshirtRight.y);
									var _width_tshirt_svgRight:Number				= Number(childObjTshirtRight.width);
									var _height_tshirt_svgRight:Number				= Number(childObjTshirtRight.height);
									
									var col_tshirt_svgRight:String;
									if(myclipvalue != 0)
									{
										col_tshirt_svgRight 						   = String(myclipvalue);
										
									}else if(copyColor != 0){
									
											col_tshirt_svgRight					   = String(copyColor);
									
									}else{
									
										col_tshirt_svgRight				           = String(16777215);
									
									}
									fileName = "svgimageRight"+ TRight +".xml";
					    			myRemote.mySvg(randomNum, fileName, String(svgTshirtRight.xml)) 
									httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+"&pro_id="+pro_id_tshirt_svgRight+"&subproduct_id="+subproduct_id_tshirt_svgRight+"&obj_id="+Obj_id_tshirt_svgRight+"&obj_type="+Obj_type_tshirt_svgRight+"&obj_value="+Obj_value_tshirt_svgRight+"&x_pos="+_x_tshirt_svgRight+"&y_pos="+_y_tshirt_svgRight+"&width="+_width_tshirt_svgRight+"&height="+_height_tshirt_svgRight+"&color="+col_tshirt_svgRight;
									//Alert.show(''+httpServicedata.url);
			    					httpServicedata.send();
					    				
					    		}
				    		}
				    		 
				    	}
			 			
			 		}
			 		
			 		
			 		//previewImg
			 		
			 			var pro_id_previewImg:String 			= 'TShirt';
			     		var subproduct_id_previewImg:String		= "previewImg";
						var Obj_id_previewImg:String 			= String(previewImg.id);
						var Obj_type_previewImg:String			= "previewImg";
						var Obj_value_previewImg:String			= String(previewImg.source);
						var _x_previewImg:Number				= Number(previewImg.x);
						var _y_previewImg:Number				= Number(previewImg.y);
						var _width_previewImg:Number			= Number(previewImg.width);
						var _height_previewImg:Number			= Number(previewImg.height);
						//var col_previewImg:String				= intToHexs(previewImg.getStyle('color'));
						var col_previewImg:String				= String(myprod);
						
						
						httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
						"&pro_id="+pro_id_previewImg+
						"&subproduct_id="+subproduct_id_previewImg+
						"&obj_id="+Obj_id_previewImg+
						"&obj_type="+Obj_type_previewImg+
						"&obj_value="+Obj_value_previewImg+
						"&x_pos="+_x_previewImg+
						"&y_pos="+_y_previewImg+
						"&width="+_width_previewImg+
						"&height="+_height_previewImg+
						"&color="+col_previewImg;
						//Alert.show(''+httpServicedata.url);
    					httpServicedata.send();
    				
    				//Top
    					var pro_id_top:String 			= 'TShirt';
			     		var subproduct_id_top:String	= "Top";
						var Obj_id_top:String 			= String(Top.id);
						var Obj_type_top:String			= "Top";
						var Obj_value_top:String		= String(Top.source);
						var _x_top:Number				= Number(Top.x);
						var _y_top:Number				= Number(Top.y);
						var _width_top:Number			= Number(Top.width);
						var _height_top:Number			= Number(Top.height);
						//var col_top:String			= intToHexs(Top.getStyle('color'));
						var col_top:String				= String(myprod);
						
						httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
						"&pro_id="+pro_id_top+
						"&subproduct_id="+subproduct_id_top+
						"&obj_id="+Obj_id_top+
						"&obj_type="+Obj_type_top+
						"&obj_value="+Obj_value_top+
						"&x_pos="+_x_top+
						"&y_pos="+_y_top+
						"&width="+_width_top+
						"&height="+_height_top+
						"&color="+col_top;
						//Alert.show(''+httpServicedata.url);
    					httpServicedata.send();
    					
    				
    				//Bottom
    					var pro_id_bottom:String 			= 'TShirt';
			     		var subproduct_id_bottom:String		= "Bottom";
						var Obj_id_bottom:String 			= String(Bottom.id);
						var Obj_type_bottom:String			= "Bottom";
						var Obj_value_bottom:String			= String(Bottom.source);
						var _x_bottom:Number				= Number(Bottom.x);
						var _y_bottom:Number				= Number(Bottom.y);
						var _width_bottom:Number			= Number(Bottom.width);
						var _height_bottom:Number			= Number(Bottom.height);
						var col_bottom:String				= String(myprod);
						
						httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
						"&pro_id="+pro_id_bottom+
						"&subproduct_id="+subproduct_id_bottom+
						"&obj_id="+Obj_id_bottom+
						"&obj_type="+Obj_type_bottom+
						"&obj_value="+Obj_value_bottom+
						"&x_pos="+_x_bottom+
						"&y_pos="+_y_bottom+
						"&width="+_width_bottom+
						"&height="+_height_bottom+
						"&color="+col_bottom;
						//Alert.show(''+httpServicedata.url);
    					httpServicedata.send();
    					
    					
    				//Right
    				 
    				 if(Right.source !='')
    				 {	
    				 	
    					var pro_id_right:String 			= 'TShirt';
			     		var subproduct_id_right:String		= "Right";
						var Obj_id_right:String 			= String(Right.id);
						var Obj_type_right:String			= "Right";
						var Obj_value_right:String			= String(Right.source);
						var _x_right:Number					= Number(Right.x);
						var _y_right:Number					= Number(Right.y);
						var _width_right:Number				= Number(Right.width);
						var _height_right:Number			= Number(Right.height);
						var col_right:String				= String(myprod);
						
						httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
						"&pro_id="+pro_id_right+
						"&subproduct_id="+subproduct_id_right+
						"&obj_id="+Obj_id_right+
						"&obj_type="+Obj_type_right+
						"&obj_value="+Obj_value_right+
						"&x_pos="+_x_right+
						"&y_pos="+_y_right+
						"&width="+_width_right+
						"&height="+_height_right+
						"&color="+col_right;
						//Alert.show(''+httpServicedata.url);
    					httpServicedata.send();
    				}
    			 
    			 //Left
    				if(Left.source !='')
    				{	 	
    					var pro_id_left:String 			= 'TShirt';
			     		var subproduct_id_left:String	= "Left";
						var Obj_id_left:String 			= String(Left.id);
						var Obj_type_left:String		= "Left";
						var Obj_value_left:String		= String(Left.source);
						var _x_left:Number				= Number(Left.x);
						var _y_left:Number				= Number(Left.y);
						var _width_left:Number			= Number(Left.width);
						var _height_left:Number			= Number(Left.height);
						var col_left:String				= String(myprod);
						
						httpServicedata.url= myUrl+"signimal_flex_php/datasave.php?sid="+sessionid+
						"&pro_id="+pro_id_left+
						"&subproduct_id="+subproduct_id_left+
						"&obj_id="+Obj_id_left+
						"&obj_type="+Obj_type_left+
						"&obj_value="+Obj_value_left+
						"&x_pos="+_x_left+
						"&y_pos="+_y_left+
						"&width="+_width_left+
						"&height="+_height_left+
						"&color="+col_left;
						//Alert.show(''+httpServicedata.url);
    					httpServicedata.send();
    					
    				}
    				
    				cart();	
    			}
			}	
			
			public function httpServicedata_result(event:ResultEvent):void
			{
				//Alert.show("Your data saved!");
			}
			
			public function httpServicedata_fault(event:FaultEvent):void
			{
				Alert.show(''+event);
			}
			
			import mx.core.IFlexDisplayObject;
			private function titleWin_close(evt:Event):void {
			 	var window:TitleWindow = evt.currentTarget as TitleWindow;
                PopUpManager.removePopUp(window);

            }
            
            private function checkBox_change(evt:Event):void {
              this.isPopUp = checkBox.selected;
            }
			
			public function getDataListener(event:ResultEvent):void
			{
			
			}
			
			[Bindable] private var sColor:String;
			public var arrSvg:Array;
			public var arrSvgBack:Array;
			public function getTshirtDataListener(event:ResultEvent):void
			{
				
				var arr:Array = event.result as Array;
				var n:int = arr.length;
				arrSvg = new Array();
				arrSvgBack = new Array();
			    for (var i:int = 0; i < n; i++)
		 		{	
		 			var oh1:ObjectHandles = new ObjectHandles();		
		 			if(arr[i].proudct_id == "TShirt")
					{
						var colorTrans:ColorTransform = new ColorTransform();
						if(myViewStack.selectedChild==Tshirt)
						{
							if(arr[i].subproduct_id == "previewImg" && arr[i].object_type == "previewImg")
				 			{	
				 				
				 				procolor.visible  = true;
								productcolorPicker.visible  = true;
				 				previewImg.source 	 = arr[i].object_value;
				 				previewImg.x		 = arr[i].x_position;
					 			previewImg.y		 = arr[i].y_position;
					 			previewImg.width	 = arr[i].width;
					 			previewImg.height 	 = arr[i].height; 
					 			
					 			//var colorTrans:ColorTransform = new ColorTransform();
								
								if(arr[i].color == 'NaN')
					 			{
					 			
					 			}else{
									circelColor=arr[i].color;
					
									if(arr[i].color == Number('16777215'))
									{
										colorTrans.color =  uint('14409179');
									
									}else{
										
										colorTrans.color = arr[i].color;
									}
									
									// Apply the transform to image.
									if(myViewStack.selectedChild==Tshirt)
									{
									    previewImg.transform.colorTransform = colorTrans;
									}
					 			} 
				 			}
		    				
		    				//Top
		    				if(arr[i].subproduct_id == "Top" && arr[i].object_type == "Top")
				 			{	
				 				Top.source 	 = arr[i].object_value;
				 				Top.x		 = arr[i].x_position;
					 			Top.y		 = arr[i].y_position;
					 			Top.width	 = arr[i].width;
					 			Top.height 	= arr[i].height;  
					 			
					 			if(arr[i].color == 'NaN')
					 			{
					 			
					 			}else{
									circelColor=arr[i].color;
									
									if(arr[i].color == Number('16777215'))
									{
										colorTrans.color =  uint('14409179');
									
									}else{
										
										colorTrans.color = arr[i].color;
									}
									
									// Apply the transform to image.
									if(myViewStack.selectedChild==Tshirt)
									{
										Top.transform.colorTransform = colorTrans;
									}
					 			}
						    }
		    				
		    				//Bottom
		    				if(arr[i].subproduct_id == "Bottom" && arr[i].object_type == "Bottom")
				 			{	
				 				Bottom.source 	 = arr[i].object_value;
				 				Bottom.x		 = arr[i].x_position;
					 			Bottom.y		 = arr[i].y_position;
					 			Bottom.width	 = arr[i].width;
					 			Bottom.height = arr[i].height;
					 			//var colorTrans:ColorTransform = new ColorTransform();
								
								if(arr[i].color == 'NaN')
					 			{
					 			
					 			}else{
									circelColor=arr[i].color;
					
									if(arr[i].color == Number('16777215'))
									{
										colorTrans.color =  uint('14409179');
									
									}else{
										
										colorTrans.color = arr[i].color;
									}
								
									// Apply the transform to image.
									if(myViewStack.selectedChild==Tshirt)
									{
										Bottom.transform.colorTransform = colorTrans;
									}
					 			}
						    }
		    					
		    				//Right
		    				 if(arr[i].subproduct_id == "Right" && arr[i].object_type == "Right")
				 			{	
				 				Right.source = arr[i].object_value;
				 				Right.x		 = arr[i].x_position;
					 			Right.y		 = arr[i].y_position;
					 			Right.width	 = arr[i].width;
					 			Right.height = arr[i].height;
					 			//var colorTrans:ColorTransform = new ColorTransform();
								
								if(arr[i].color == 'NaN')
					 			{
					 			
					 			}else{
					 				
					 			
									circelColor=arr[i].color;
					
									if(arr[i].color == Number('16777215'))
									{
										colorTrans.color =  uint('14409179');
									
									}else{
										
										colorTrans.color = arr[i].color;
									}
									
									// Apply the transform to image.
									if(myViewStack.selectedChild==Tshirt)
									{
										Right.transform.colorTransform = colorTrans;
									}
					 			}
					 			 
						    }
		    			 
	    			 		//Left
		    				if(arr[i].subproduct_id == "Left" && arr[i].object_type == "Left")
					 		{	
					 			Left.source = arr[i].object_value; 
					 			Left.x		= arr[i].x_position;
					 			Left.y= arr[i].y_position;
					 			Left.width= arr[i].width;
					 			Left.height	= arr[i].height;
					 			//var colorTrans:ColorTransform = new ColorTransform();
								
								if(arr[i].color == 'NaN')
					 			{
					 			
					 			}else{
									
									circelColor=arr[i].color;
									if(arr[i].color == Number('16777215'))
									{
										colorTrans.color =  uint('14409179');
									
									}else{
										
										colorTrans.color = arr[i].color;
									}
					
									if(myViewStack.selectedChild==Tshirt)
									{
										Left.transform.colorTransform = colorTrans;
									}
					 			}
		    				}
		    				
		    				
							if(arr[i].object_type == "TextArea")
							{
								
								//var oh1:ObjectHandles = new ObjectHandles();
								oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
								oh1.x=arr[i].x_position; 
								oh1.y=arr[i].y_position;
								oh1.height=arr[i].height; 
								oh1.width=arr[i].width;
								oh1.id=arr[i].object_id;
								oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeight);
		   						var txt:TextArea = new TextArea();
								txt.text=arr[i].object_value;
								txt.horizontalScrollPolicy = "off";
								txt.verticalScrollPolicy = "off";
								txt.percentWidth=100;
								txt.percentHeight=100;
								txt.setStyle("backgroundAlpha","0") 
								txt.setStyle("fontSize",arr[i].font_size);  
								txt.setStyle("color",'#'+arr[i].color);
								txt.setStyle("fontFamily",arr[i].font_family);
								txt.setStyle("fontWeight",arr[i].font_weight );
								txt.setStyle("textAlign",arr[i].align);
								txt.setStyle("length","0");
								txt.setStyle("borderStyle","none");
								txt.condenseWhite=true;
								txt.id=arr[i].object_id;
								txt.addEventListener(MouseEvent.CLICK ,	clickDis);
								oh1.allowHMove=true;
								oh1.allowHResize=true;
								oh1.allowVMove=true;
								oh1.allowVResize=true;
								oh1.allowRotate=false;
								oh1.mouseChildren=true;
									
								txt.selectable=true;
								txt.editable=true;
								oh1.addChild(txt);
								
								
								if(arr[i].subproduct_id == "TShirtFront")
								{
							    	
							    	genericTshirt.addChild(oh1);
									getWidthHeight();
									addtocart.visible=true;
							    	tsqty.visible=true;
									Quantity.visible=true;
									pricetagshirt.visible=true; 
							    	
							 	}else if(arr[i].subproduct_id == "TShirtBack")
							 	{
							 		genericTshirtBack.addChild(oh1);
									getWidthHeight();
									addtocart.visible=true;
							    	tsqty.visible=true;
									Quantity.visible=true;
									pricetagshirt.visible=true;
							 		
							 	}else if(arr[i].subproduct_id == "TShirtLeft"){
							 	
							 		genericTshirtLeft.addChild(oh1);
									getWidthHeight();
									addtocart.visible=true;
							    	tsqty.visible=true;
									Quantity.visible=true;
									pricetagshirt.visible=true;
							 		
							 	}else if(arr[i].subproduct_id == "TShirtRight"){
							 	
							 		genericTshirtRight.addChild(oh1);
									getWidthHeight();
									addtocart.visible=true;
							    	tsqty.visible=true;
									Quantity.visible=true;
									pricetagshirt.visible=true;
							 	}
							 	
							}
							
							if(arr[i].object_id == "arcEditorObjTop" || arr[i].object_id == "arcEditorObjBottom" || arr[i].object_id == "arcEditorObjLeft" || arr[i].object_id == "arcEditorObjRight")
		 					{
								oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
								oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeightArc);
								oh1.x=arr[i].x_position;
								oh1.y=arr[i].y_position;
								oh1.id=arr[i].object_id;
								oh1.width=arr[i].width;
								oh1.height=arr[i].height;
								oh1.allowHMove=true;
								oh1.allowHResize=true;
								oh1.allowVMove=true;
								oh1.allowVResize=true;
								oh1.allowRotate=false;
								oh1.mouseChildren=true;
							  	oh1.alwaysMaintainAspectRatio=true;
							  	oh1.select();
							
							  	
							  	 var myText:String =arr[i].object_value;
							  	 var radius:Number = arr[i].radius;
								 var spacing:Number = arr[i].spacing;
								 var center:Point = new Point(arr[i].width/2 , arr[i].height/2);
								 var angleLeading:Number = arr[i].angleLeading;
								 var angularOffset:Number = arr[i].angularOffset;
								    
						          for (var char:uint=0;char<myText.length;char++) 
						          {
						            var tempText:TextView = new TextView();
						            tempText.x = radius * Math.cos(degrees2radians(char*spacing+angularOffset)) + center.x;
						            tempText.y = radius * Math.sin(degrees2radians(char*spacing+angularOffset)) + center.y;
						            var dx:Number = center.x-tempText.x;
						            var dy:Number = center.y-tempText.y;
						            var angle:Number = Math.atan2(dy, dx);
						            tempText.rotation = radians2degrees(angle) -90 + angleLeading;
						            tempText.text = myText.charAt(char);
					              	
						               
				               		if(arr[i].subproduct_id == "TshirtFront")
									{
								    	
								    	tempText.setStyle("fontSize",arr[i].font_size);  
										tempText.setStyle("color","#"+String(arr[i].color));
								    	oh1.id = arr[i].object_id;
								    	oh1.addChild(tempText);
								    	genericTshirt.addChild(oh1);
										addtocart.visible=true;
								    	tsqty.visible=true;
										Quantity.visible=true;
										pricetagshirt.visible=true; 
								    	
								 	}else if(arr[i].subproduct_id == "TshirtBack")
								 	{
								 		tempText.setStyle("fontSize",arr[i].font_size);  
										tempText.setStyle("color","#"+String(arr[i].color));
								    	oh1.id = arr[i].object_id;
								 		oh1.addChild(tempText);
								 		genericTshirtBack.addChild(oh1);
										addtocart.visible=true;
								    	tsqty.visible=true;
										Quantity.visible=true;
										pricetagshirt.visible=true;
								 		
								 	}else if(arr[i].subproduct_id == "TShirtLeft"){
								 	
								 		tempText.setStyle("fontSize",arr[i].font_size);  
										tempText.setStyle("color","#"+String(arr[i].color));
								    	
								 		oh1.id = arr[i].object_id;
								 		oh1.addChild(tempText);
								 		genericTshirtLeft.addChild(oh1);
										addtocart.visible=true;
								    	tsqty.visible=true;
										Quantity.visible=true;
										pricetagshirt.visible=true;
								 		
								 	}else if(arr[i].subproduct_id == "TShirtRight"){
								 	
								 		tempText.setStyle("fontSize",arr[i].font_size);  
										tempText.setStyle("color","#"+String(arr[i].color));
								    	
								 		oh1.id = arr[i].object_id;
								 		oh1.addChild(tempText);
								 		genericTshirtRight.addChild(oh1);
										addtocart.visible=true;
								    	tsqty.visible=true;
										Quantity.visible=true;
										pricetagshirt.visible=true;
								 	}
								}  
					         }
							
							
							if(arr[i].object_type == "Image")
							{
						
								
								oh1.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
								oh1.allowRotate=false;
								oh1.x=arr[i].x_position; 
								oh1.y=arr[i].y_position;
								oh1.height=arr[i].height; 
								oh1.width=arr[i].width;
								oh1.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,getNewWidthHeight);
		   						var img:Image = new Image();
								img.source =arr[i].object_value;
								img.percentWidth=100;
								img.percentHeight=100;
								img.id=arr[i].object_id;
								
								
								colorTrans.color = arr[i].color;
								img.transform.colorTransform=colorTrans;
			        			
					        	oh1.allowHMove=true;
								oh1.allowHResize=true;
								oh1.allowVMove=true;
								oh1.allowVResize=true;
								oh1.allowRotate=false;
								oh1.mouseChildren=true;
								oh1.addChild(img);
								
								if(arr[i].subproduct_id == "TShirtFront")
								{
							    	genericTshirt.addChild(oh1);
									getWidthHeight();
									addtocart.visible=true;
							    	tsqty.visible=true;
									Quantity.visible=true;
									pricetagshirt.visible=true; 
							    	
							 	}else if(arr[i].subproduct_id == "TShirtBack")
							 	{
							 		genericTshirtBack.addChild(oh1);
									getWidthHeight();
									addtocart.visible=true;
							    	tsqty.visible=true;
									Quantity.visible=true;
									pricetagshirt.visible=true;
							 		
							 	}else if(arr[i].subproduct_id == "TShirtLeft"){
							 	
							 		genericTshirtLeft.addChild(oh1);
									getWidthHeight();
									addtocart.visible=true;
							    	tsqty.visible=true;
									Quantity.visible=true;
									pricetagshirt.visible=true;
							 		
							 	}else if(arr[i].subproduct_id == "TShirtRight"){
							 	
							 		genericTshirtRight.addChild(oh1);
									getWidthHeight();
									addtocart.visible=true;
							    	tsqty.visible=true;
									Quantity.visible=true;
									pricetagshirt.visible=true;
							 	} 
							}
							
							
							if(arr[i].subproduct_id == "TShirtFront" && arr[i].object_type == "svgImage")
							{
					    		
					    		arrSvg.push({subid:arr[i].subproduct_id, objid:arr[i].object_id, objvalue:arr[i].object_value, widthsvg:arr[i].width, heightsvg:arr[i].height, xsvg:arr[i].x_position, ysvg:arr[i].y_position});
							
					    		canvas = new Sprite();
								this.rawChildren.addChild(canvas);
								var loader:URLLoader = new URLLoader();
								var request:URLRequest = new URLRequest(arr[i].object_value);
								loader.load(request);
								loader.addEventListener(Event.COMPLETE, onLoadCompleteData);
					    		
					    	
					 		}else if(arr[i].subproduct_id == "TShirtBack" && arr[i].object_type == "svgImage")
					 		{
					 			
					 			arrSvgBack.push({subid:arr[i].subproduct_id, objid:arr[i].object_id, objvalue:arr[i].object_value, widthsvg:arr[i].width, heightsvg:arr[i].height, xsvg:arr[i].x_position, ysvg:arr[i].y_position});
					 			canvas = new Sprite();
								this.rawChildren.addChild(canvas);
								var loaderBack:URLLoader = new URLLoader();
								var requestBack:URLRequest = new URLRequest(arr[i].object_value);
								loaderBack.load(requestBack);
								loaderBack.addEventListener(Event.COMPLETE, onLoadCompleteDataBack);	
					    		
					 		
					 		}else if(arr[i].subproduct_id == "TShirtLeft" && arr[i].object_type == "svgImage"){
					 	
					 		/* subid=arr[i].subproduct_id;
							widthsvg=arr[i].width;
							heightsvg=arr[i].height;
							xsvg=arr[i].x_position;
							ysvg=arr[i].y_position;
							objid =arr[i].object_id;
							canvas = new Sprite(); */
								
					    		
					 		
					 		}else if(arr[i].subproduct_id == "TShirtRight" && arr[i].object_type == "svgImage"){
					 	
					 		/* subid=arr[i].subproduct_id;
							widthsvg=arr[i].width;
							heightsvg=arr[i].height;
							xsvg=arr[i].x_position;
							ysvg=arr[i].y_position;
							objid =arr[i].object_id; */
					    		
					 		} 
						} 
					}	
				}	
			}
			
			private  var arr:Array = new Array();
			private function onLoadCompleteData(event:Event):void 
			{
				
				var n:int = arrSvg.length;
				for (var i:int = 0; i < n; i++)
		 		{
				    
				    var isFound :Boolean = false;
		 		 	for (var k:int = 0; k < arr.length; k++)
		 		 	{	
		 			 	if(arr[k].id == arrSvg[i].objid){
		 			 		isFound = true;
		 			 		break;	
		 			 	}
		 		 	}
				    if(!isFound)
				    {
				    
				    
				    	arr.push({id:arrSvg[i].objid})
			 			var subid:String=arrSvg[i].subid;
						var objid:String=arrSvg[i].objid;
						var objv:Number=arrSvg[i].objvalue;
						var widthsvg:Number=arrSvg[i].widthsvg;
						var heightsvg:Number=arrSvg[i].heightsvg;
						var xsvg:Number=arrSvg[i].xsvg;
						var ysvg:Number=arrSvg[i].ysvg;
				    
					    var loader:URLLoader = URLLoader(event.target);
					    var paths:SvgPaths = new SvgPaths(loader.data);		    
					    var svgv:SVGViewer = new SVGViewer();
					    svgv.xml = new XML(loader.data);
					    svgv.myWidth(widthsvg);
						svgv.myHeight(heightsvg);
						svgv.id= objid;
						
						var ohsvg:ObjectHandles = new ObjectHandles();
					    ohsvg.allowHMove=true;
						ohsvg.allowHResize=true;
						ohsvg.allowVMove=true;
						ohsvg.allowVResize=true;
						ohsvg.allowRotate=true;
						ohsvg.mouseChildren=true;
						ohsvg.width=widthsvg;
					    ohsvg.height=heightsvg;
					    ohsvg.x=xsvg;
					    ohsvg.y=ysvg;
					    ohsvg.id=objid;
					    ohsvg.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
					    ohsvg.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,svgNewWidthHeight); 
					    ohsvg.addChild(svgv);
					    
					    if(subid == "TShirtFront")
						{
				    		genericTshirt.addChild(ohsvg);
				    	}
				    }	
		   		}	  	
			
			}	
			
			private function onLoadCompleteDataBack(event:Event):void 
			{
			   
			   var n:int = arrSvgBack.length;
				for (var i:int = 0; i < n; i++)
		 		{
				    
				    var isFound :Boolean = false;
		 		 	for (var k:int = 0; k < arr.length; k++)
		 		 	{	
		 			 	if(arr[k].id == arrSvgBack[i].objid){
		 			 		isFound = true;
		 			 		break;	
		 			 	}
		 		 	}
				    if(!isFound)
				    {
			   			
			   			 arr.push({id:arrSvg[i].objid})
			 			 var subidBack:String=arrSvgBack[i].subid;
						 var objidBack:String=arrSvgBack[i].objid;
						 var objvBack:Number=arrSvgBack[i].objvalue;
						 var widthsvgBack:Number=arrSvgBack[i].widthsvg;
						 var heightsvgBack:Number=arrSvgBack[i].heightsvg;
						 var xsvgBack:Number=arrSvgBack[i].xsvg;
						 var ysvgBack:Number=arrSvgBack[i].ysvg;
			   
					    var loader:URLLoader = URLLoader(event.target);
					    var paths:SvgPaths = new SvgPaths(loader.data);		    
					    var svgv:SVGViewer = new SVGViewer();
					    svgv.xml = new XML(loader.data);
					    svgv.myWidth(widthsvgBack);
						svgv.myHeight(heightsvgBack);
						svgv.id= objidBack;
						
						var ohsvg:ObjectHandles = new ObjectHandles();
					    ohsvg.allowHMove=true;
						ohsvg.allowHResize=true;
						ohsvg.allowVMove=true;
						ohsvg.allowVResize=true;
						ohsvg.allowRotate=true;
						ohsvg.mouseChildren=true;
						ohsvg.width=widthsvgBack;
					    ohsvg.height=heightsvgBack;
					    ohsvg.x=xsvgBack;
					    ohsvg.y=ysvgBack;
					    ohsvg.id=objidBack;
					    ohsvg.addEventListener(ObjectHandleEvent.OBJECT_SELECTED,OnObjectHandlesSelected);
					    ohsvg.addEventListener(ObjectHandleEvent.OBJECT_RESIZED_EVENT,svgNewWidthHeight); 
					    ohsvg.addChild(svgv);
					    
					    if(subidBack == "TShirtBack")
				 		{
				 			genericTshirtBack.addChild(ohsvg);
				 		
				 		}
				    }
		 		}
			}	
			
			private function deleteFrontDataListener(event:ResultEvent):void
	    	{
	    		//Alert.show("Delete");
	    	}
	    	private function mySvgListener(event:ResultEvent):void
		    {
		    	//Alert.show("Delete");
		    }
		]]>
	</mx:Script>
	<mx:RemoteObject id="myRemote" destination="zend" source="MyService" showBusyCursor="true" fault="faultListener(event)">
	   <mx:method name="myXml" result="myXmlListener(event)"/>
	   <mx:method name="sendMail" result="sendMailListener(event)"/>
	   <mx:method name="test" result="testListener(event)"/>
	   <mx:method name="myFont" result="myFontListener(event)"/>
	   <mx:method name="getData" result="getDataListener(event)"/>
	   <mx:method name="mySvg" result="mySvgListener(event)"/>
	   <mx:method name="getTshirtData" result="getTshirtDataListener(event)"/>
	   <mx:method name="deleteFrontData" result="deleteFrontDataListener(event)"/>
	</mx:RemoteObject>
	<mx:WebService id="LoginAPI" wsdl="{myApiWsdlUrl}" showBusyCursor="false">
		 <mx:operation name="login" resultFormat="object" result="getLogin_result(event);" fault="getLogin_fault(event);" />
         <mx:operation name="call" resultFormat="object" result="getCall_result(event);" fault="getCall_fault(event);" />
    </mx:WebService>
    <mx:WebService id="LoginAPIs" wsdl="{myApiWsdlUrl}" showBusyCursor="false">
		<mx:operation name="login" resultFormat="object" result="getLogin_result(event);" fault="getLogin_fault(event);" />
        <mx:operation name="call" resultFormat="object" result="getcombo_result(event);" fault="getcombo_fault(event);" />
     </mx:WebService>
     <mx:WebService id="LoginShapeAPIs" wsdl="{myApiWsdlUrl}" showBusyCursor="false">
		<mx:operation name="login" resultFormat="object" result="getLogin_result(event);" fault="getLogin_fault(event);" />
        <mx:operation name="call" resultFormat="object" result="getShape_result(event);" fault="getShape_fault(event);" />
     </mx:WebService>
     
     <mx:WebService id="LoginAPIcat" wsdl="{myApiWsdlUrl}" showBusyCursor="false">
		 <mx:operation name="login" resultFormat="object" result="getLogin_result(event);" fault="getLogin_fault(event);" />
         <mx:operation name="call" resultFormat="object" result="getdisplay_result(event);" fault="getdisplay_fault(event);" />
     </mx:WebService>
	<mx:WebService id="CallAPI" wsdl="{myApiWsdlUrl}" showBusyCursor="false">
		 <mx:operation name="call" resultFormat="object" result="getImage_result(event);" fault="getImage_fault(event);" />
  </mx:WebService>
  <mx:WebService id="CallAPIPrice" wsdl="{myApiWsdlUrl}" showBusyCursor="false">
		 <mx:operation name="call" resultFormat="object" result="getPrice_result(event);" fault="getImage_fault(event);" />
  </mx:WebService>
	<mx:WebService id="CallAPIPriceLess" wsdl="{myApiWsdlUrl}" showBusyCursor="false">
		 <mx:operation name="call" resultFormat="object" result="getPriceLess_result(event);" fault="getPriceLess_fault(event);" />
  </mx:WebService>
  <mx:HTTPService id="httpService" resultFormat="e4x" fault="httpService_fault(event);" result="httpService_result(event)" showBusyCursor="false"/>
  <mx:HTTPService id="httpServicesvg" resultFormat="e4x" fault="httpService_fault(event);" showBusyCursor="false"/>
  <mx:HTTPService id="httpServicedata"  resultFormat="e4x" fault="httpServicedata_fault(event);" result="httpServicedata_result(event)" showBusyCursor="false"/>
    <!--<mx:HTTPService id="httpServicelable"  resultFormat="e4x" fault="httpService_fault(event);" result="httpService_result(event)" />-->
	
	
	<mx:XMLListCollection id="xmlListColl" />
  	<mx:Canvas width="850" height="520" backgroundAlpha="1.0" styleName="grid" horizontalCenter="-1" verticalCenter="-14" verticalScrollPolicy="off" horizontalScrollPolicy="off">
		<mx:Canvas id="mainCanvas" width="830" height="500" backgroundColor="#ffffff" x="10" y="10" verticalScrollPolicy="off" horizontalScrollPolicy="off">
			<mx:HBox x="10" y="30" height="60" width="98%" backgroundColor="#ffffff" paddingTop="5" paddingBottom="5" paddingLeft="5" horizontalScrollPolicy="off" verticalScrollPolicy="off" cornerRadius="0">
				<mx:Image toolTip="Remove Selection" id="removeselection" width="31" height="40" click="removeSelection(event);" source="images/icons/remove.png"/>
				<mx:Image toolTip="Text tool" id="test" width="27" height="40" click="hit(event);" source="images/icons/text.jpg"/>
				<mx:Image toolTip="Mouse Move" id="moves" width="25" height="40" click="hits(event);" source="images/icons/mouse.jpg"/>
				<mx:Image toolTip="Shapes Tool" id="draws" width="26" height="40" click="arc(event);" source="images/icons/shape.jpg"/>
				<mx:Image toolTip="Arc Text Editor" id="arcTextm" width="48" height="40" click="arc(event);" source="images/icons/text-curve.png"/>
				<mx:Image toolTip="Email" id="email" width="27" height="40" click="arc(event);" source="images/icons/e-mail.jpg"/>
				<mx:Image toolTip="Deletes Selection Object" id="deleteselectionobject" width="27" height="40" click="Delete()" source="images/icons/delete.jpg"/>
				<mx:Image toolTip="New Object File" id="newobjectfile" width="22" height="40" click="newfile()" source="images/icons/new.jpg"/>
				<mx:Image toolTip="Undo" id="undoobject" width="29" height="40" click="undo('undo')" source="images/icons/undo.png"/>
				<mx:Image toolTip="Redo" id="redoobject" width="24" height="40" click="undo('redo')" source="images/icons/redo.png"/>
				<mx:Image toolTip="copy" id="Copy" width="24" height="40" click="copy(event)" source="images/icons/copy.jpg"/>
				<mx:Image toolTip="cut" id="Cut" width="18" height="40" click="copy(event)" source="images/icons/cut.jpg"/>
				<mx:Image toolTip="paste" id="Paste" width="24" height="40" click="paste()" source="images/icons/past.jpg"/>
				<mx:ColorPicker toolTip="Color" openDuration="150"  id="colorPicker" swatchPanelStyleName="myStyle" dataProvider="{ColorDP}" open="openEvt(event);" change="OnColorChange(event);" skin="@Embed(source='images/icons/fill.jpg')" width="27" height="40" themeColor="#FFFFFF"/> 
				<mx:ColorPicker toolTip="Text Shade Color" id="colorPickerTextShade" colorField="value" editable="false" swatchPanelStyleName="myStyle" dataProvider="{ColorDP}" open="openEvt(event);"  change="TextShade(Number(colorPickerTextShade.selectedColor));" skin="@Embed(source='images/icons/text-shade.png')" width="48" height="40" themeColor="#FFFFFF"/>
				<mx:CheckBox id="checkBoxShd" toolTip="dropShadow Enabled" selected="false" labelPlacement="left" />
		        <mx:NumericStepper toolTip="Font Size" id="ip2" minimum="-50" maximum="50" value="{curSize}" stepSize="1" click="setNewStyles();"  cornerRadius="0"/>
				<mx:Label x="207" y="157" id="myl" text="hi" visible="false"/>
				<mx:Label x="207" y="157" id="mywidht" text="hi" visible="false"/>
				<mx:Label x="207" y="157" id="myheight" text="hi" visible="false"/>
				<mx:Label x="250" y="157" id="price1" text="hi" visible="false"/>
	            <mx:Label x="350" y="157" id="price" text="hi"  visible="false"/>
			</mx:HBox>		
			<mx:HBox x="10" y="75" height="37" width="98%" styleName="innertop" backgroundColor="#FFFFFF" paddingTop="5" paddingLeft="5" paddingBottom="5">
				 <!--<mx:ComboBox toolTip="Font" id="combobox" dataProvider="{cards}" width="150" change="onCmbFontChange(event)" cornerRadius="0"/>-->
		         <mx:ComboBox toolTip="Font" id="combobox" width="150" change="onCmbFontChange(event)" cornerRadius="0"/>
		         <mx:Image width="20" height="20" toolTip="Left Align" source="images/justifyleft.gif" id="left" click="setTextAlign(event);"/>
		         <mx:Image width="20" height="20" toolTip="Center Align" source="images/justifycenter.gif" id="center" click="setTextAlign(event);"/>
		         <mx:Image width="20" height="20" toolTip="Right Align" source="images/justifyright.gif" id="right" click="setTextAlign(event);"/>
		         <mx:Button x="137" y="70" toolTip="Bold" label="B" width="33" fontWeight="bold" toggle="true" id="boldtext" mouseUp="checkbold()" cornerRadius="0"/>
				 <mx:Button x="171" y="70" toolTip="Italic" label="I" width="35" fontStyle="italic" toggle="true" id="italictext" mouseUp="checkitalic()" cornerRadius="0"/>
				 <mx:Button x="205" y="70" toolTip="Underline" label="U" width="33" textDecoration="underline" toggle="true" id="underlinetext" mouseUp="checkunderline()" cornerRadius="0"/>
		         <mx:Label text="Zoom :"/>
		         <mx:HSlider id="slider"
		         width="145"
		         minimum="1"
		         maximum="100"
		         values="[50]" 
		         tickInterval="10"
		         snapInterval="1" 
		         liveDragging="true" 
		         change="changeZoom(event)"
		         dataTipFormatFunction="myDataTipFunc"/>
			</mx:HBox>
			<mx:ViewStack id="myViewStack" borderStyle="none" width="824"  height="403.25" y="117" x="6">
				<!--Start T-shirt-->
				<mx:Canvas width="819" id="Tshirt" label="T-shirt" height="390.25" verticalScrollPolicy="off" horizontalScrollPolicy="off" y="100" x="6">
			  		<mx:Panel  width="532" height="373" id="viewPanel" title="view panel" cornerRadius="0" horizontalScrollPolicy="off" verticalScrollPolicy="off" x="10" y="2" backgroundColor="#FFFFFF" borderColor="#F3F1F1">
						<mx:Canvas id="Tshirteditor" x="100" width="500" borderStyle="none" borderColor="#ff0000" height="317" verticalScrollPolicy="off" horizontalScrollPolicy="off" >
							<mx:Tile direction="vertical" verticalScrollPolicy="off" horizontalScrollPolicy="off" x="10" y="10" width="75" height="300" borderColor="#FFFFFF" borderStyle="solid" themeColor="#FFFFFF" verticalAlign="middle" horizontalAlign="center">
								<mx:VBox width="70" height="300" borderColor="#FFFFFF" themeColor="#FFFFFF" verticalScrollPolicy="off" horizontalScrollPolicy="off">
									<fabulousFlex:PreloadingImage id="Top"
								  	height="50"
								  	width="50"
								  	preloaderTitleWindow="{SquaresSpinnerPreloadingWindow}"
								  	horizontalAlign="center" 
								  	verticalAlign="middle"
								  	click="mySide(String(Top.source),'top'); mySubViewStack.selectedChild=genericTshirt;"
								  	/>
								  	<fabulousFlex:PreloadingImage id="Bottom"
								  	height="50"
								  	width="50"
								  	preloaderTitleWindow="{SquaresSpinnerPreloadingWindow}"
								  	horizontalAlign="center" 
								  	verticalAlign="middle"
								  	click="mySide(String(Bottom.source),'bottom');mySubViewStack.selectedChild=genericTshirtBack;"
								  	/>
								  	<fabulousFlex:PreloadingImage id="Left"
								  	height="50"
								  	width="50"
								  	preloaderTitleWindow="{SquaresSpinnerPreloadingWindow}"
								  	horizontalAlign="center" 
								  	verticalAlign="middle"
								  	click="mySide(String(Left.source),'left');mySubViewStack.selectedChild=genericTshirtLeft;"
								  	/>
								  	
								  	<fabulousFlex:PreloadingImage id="Right"
								  	height="50"
								  	width="50"
								  	preloaderTitleWindow="{SquaresSpinnerPreloadingWindow}"
								  	horizontalAlign="center" 
								  	verticalAlign="middle"
								  	click="mySide(String(Right.source),'right');mySubViewStack.selectedChild=genericTshirtRight;"
								  	/>
								</mx:VBox>
							</mx:Tile>
							<fabulousFlex:PreloadingImage id="previewImg" source="" x="100" y="24" height="328" width="300"/>
							<mx:ViewStack id="mySubViewStack" borderStyle="none" width="500"  height="403" x="75">
								<mx:Canvas id="genericTshirt" x="75" label="Generic" backgroundColor="{productcolorPicker.selectedColor}" backgroundAlpha="0" borderStyle="none" borderColor="#ff0000" verticalScrollPolicy="off" horizontalScrollPolicy="off" width="500"  height="403">
									<mx:Label text="Select your product Color:" id="procolor" visible="false" x="239" y="10"/>
									<mx:ColorPicker x="396" y="10" toolTip="product Color" editable="true" colorField="value" swatchPanelStyleName="myStyle" 
										id="productcolorPicker"  change="colorize(Number(productcolorPicker.selectedColor));" visible="false"/>
										
									</mx:Canvas>
								<mx:Canvas id="genericTshirtBack" x="75" label="Generic" verticalScrollPolicy="off" horizontalScrollPolicy="off" backgroundColor="0xffffff" backgroundAlpha="0" width="500"  height="403">
								</mx:Canvas>
								
								<mx:Canvas id="genericTshirtLeft" x="75" label="Generic" verticalScrollPolicy="off" horizontalScrollPolicy="off" backgroundColor="0xffffff" backgroundAlpha="0" width="500"  height="403">
								</mx:Canvas>
								
								<mx:Canvas id="genericTshirtRight" x="75" label="Generic" verticalScrollPolicy="off" horizontalScrollPolicy="off" backgroundColor="0xffffff" backgroundAlpha="0" width="500"  height="403">
								</mx:Canvas>
							</mx:ViewStack>
							<mx:TextInput x="333" y="280" width="50" id="tsqty" visible="false"/>
							<mx:Label x="335" y="300" text="Quantity  " id="Quantity" visible="false"/>
							<!--<mx:Button id="addtocart" x="329" y="290" label="Add To Cart" visible="false" click="cart();"/>-->
							<mx:Button id="addtocart" x="400" y="280" label="Add To Cart" visible="false" click="insertData();"/>
							<mx:Label x="386" y="273" fontSize="12" fontWeight="bold" id="pricetagshirt" visible="true"/>
						</mx:Canvas>
		 		 	</mx:Panel>
 					<mx:TabNavigator id="leftsidepenal" width="263" height="375" x="550" y="0" borderColor="#BDB9B9" backgroundColor="#FFFFFF" borderStyle="solid" click="onLoadClipart();">
							<mx:Panel label="Products" width="100%" height="342" layout="absolute" id="ThumbsPanel" title="Products" x="58" y="60" borderColor="#FFFFFF" themeColor="#FFFFFF">
								<mx:Tile x="10" y="10" width="100%" height="241" borderColor="#FFFFFF" themeColor="#FFFFFF">
									<mx:Repeater dataProvider="{arrProductInfo.source}" id="imageRepeater">
										<mx:HBox width="60" height="60" borderColor="#FFFFFF" themeColor="#FFFFFF" verticalScrollPolicy="off" horizontalScrollPolicy="off">
											<fabulousFlex:PreloadingImage id="myimg"
										  	height="50"
										  	width="50"
										  	preloaderTitleWindow="{SquaresSpinnerPreloadingWindow}"
										  	source="{myApiUrl+'/'+imageRepeater.currentItem.image}"
										  	horizontalAlign="center" 
										  	verticalAlign="middle"
										  	rollOutEffect="doZoom(event)" rollOverEffect="doZoom(event)"
										  	click="getImagesApi(event.currentTarget.getRepeaterItem().sku)"/>
										</mx:HBox>
									</mx:Repeater>	
								</mx:Tile>
							</mx:Panel>
							<mx:Panel label="Designs" width="100%" height="342" borderColor="#FFFFFF" layout="absolute" backgroundColor="#FFFFFF" x="58" y="60" themeColor="#FFFFFF" backgroundAlpha="1.0" cornerRadius="0" title="Designs" id="ThumbsPanel1">
								 <mx:ComboBox id="clipComboBox" labelField="name"  dataProvider="{dataArrayApi}" selectedItem="Cell Phones"  x="30" y="10" change="onCategoryApi(clipComboBox.selectedItem.category_id)" horizontalCenter="center"/>
								  <mx:ColorPicker x="200" y="10" id="colorPickerClipArt" colorField="value" editable="false" selectedColor="0x000000" change="colorizeClipart(Number(colorPickerClipArt.selectedColor));"/>
								  <mx:Tile x="10" y="30" width="100%" height="241" borderColor="#FFFFFF" themeColor="#FFFFFF" verticalAlign="middle" horizontalAlign="center">
									 <mx:Repeater id="imageRepeater1">
										<mx:HBox width="60" height="60" borderColor="#FFFFFF" themeColor="#FFFFFF" verticalAlign="middle" horizontalAlign="center" verticalScrollPolicy="off" horizontalScrollPolicy="off">
											<fabulousFlex:PreloadingImage id="myimg1"
										  	height="50"
										  	width="50"
										  	preloaderTitleWindow="{SquaresSpinnerPreloadingWindow}"
										  	source="{myApiUrl+'/'+imageRepeater1.currentItem.image}"
										  	horizontalAlign="center" 
										  	verticalAlign="middle"
										  	click="getImages(event.currentTarget.getRepeaterItem().image,event.currentTarget.getRepeaterItem().sku)"/>
										</mx:HBox>
									</mx:Repeater>	
								</mx:Tile>
							</mx:Panel>
							<mx:Panel label="My Assets" width="100%" height="100%" borderColor="#FFFFFF" backgroundColor="#FFFFFF" 
								themeColor="#FFFFFF" backgroundAlpha="1.0" cornerRadius="0" title="My Assets" id="ThumbsPanel2" horizontalScrollPolicy="off" verticalScrollPolicy="off">
								<mx:HBox width="100%" borderColor="#FFFFFF" themeColor="#FFFFFF" verticalScrollPolicy="off" horizontalScrollPolicy="off">
									<mx:Image id="uploadVectorImgs" toolTip="Upload Image" width="116" height="29" click="arc(event); myLeftViewStack.selectedChild=myRasPanel;" source='picture/add-image.png'/>
									<mx:Image id="uploadFont" toolTip="Upload Font" width="116" height="29" click="arc(event); myLeftViewStack.selectedChild=myFontPanel;" source='picture/add-font.png'/>  
								</mx:HBox>
								<mx:HBox width="100%" borderColor="#FFFFFF" themeColor="#FFFFFF" verticalScrollPolicy="off" horizontalScrollPolicy="off">
									<mx:Image id="uploadvector" toolTip="Upload vector" width="116" height="29" click="arc(event); myLeftViewStack.selectedChild=mySvgPanel;" source='picture/add-vector.png'/>  
								</mx:HBox>
								
								<mx:ViewStack id="myLeftViewStack" borderStyle="none" width="100%"  height="100%">
								<mx:Canvas id="mySvgPanel" width="100%" height="100%" borderColor="#ff00ff" borderStyle="none">
									<mx:Canvas id="mySvgThumb" width="100%"></mx:Canvas>	
								</mx:Canvas>
								<mx:Canvas id="myFontPanel" width="100%" height="100%" borderColor="#ff00ff" borderStyle="none">
									<mx:VBox x="20" y="20">
										<mx:Label x="210" y="157" id="myfont" text="My Font :" visible="true"/>
									</mx:VBox>
									<mx:Spacer height="20"/>
									<mx:VBox x="20" y="40">	
										<mx:ComboBox id="mycombobox" width="150" change="onFontChange(event)" cornerRadius="0"/>
									</mx:VBox>
								</mx:Canvas>
								<mx:Canvas id="myRasPanel" width="100%" height="100%" borderColor="#880000" borderStyle="none" verticalScrollPolicy="off" horizontalScrollPolicy="off">
								<mx:Tile x="10" y="10" width="100%" height="241" borderColor="#FFFFFF" themeColor="#FFFFFF" verticalAlign="middle" horizontalAlign="center">
									<mx:Repeater id="imageRepeater2">
										<mx:HBox width="60" height="60" borderColor="#FFFFFF" themeColor="#FFFFFF" verticalAlign="middle" horizontalAlign="center" verticalScrollPolicy="off" horizontalScrollPolicy="off">
											<fabulousFlex:PreloadingImage id="myimgs"
										  	height="50"
										  	width="50"
										  	preloaderTitleWindow="{SquaresSpinnerPreloadingWindow}"
										  	source="{imageRepeater2.currentItem.img}" 
										  	click="getImageAssets(event)"
										  	horizontalAlign="center" 
										  	verticalAlign="middle"
										  	/>
											
										</mx:HBox>
									</mx:Repeater>
								</mx:Tile>
								</mx:Canvas>
								</mx:ViewStack>
							</mx:Panel>
					 </mx:TabNavigator>	
				</mx:Canvas>
				<!--End Tshirt-->



		</mx:ViewStack>
		</mx:Canvas>	
		
	</mx:Canvas>	
	<!--Start Arc Text Editor, Thumbnail Effect & popup window -->		
	<!-- Start popup windows -->
	<!--Shapes-->
	<mx:TitleWindow id="drawsp" 
	            	x="200" 
	            	y="100" 
	            	visible="false" 
	            	width="370"
	            	height="250" 
	            	verticalScrollPolicy="off" 
	            	horizontalScrollPolicy="off"
	            	title="Arc Text Editor" 
					status="Movable too"
					close="titleWin_close(event);"
					showCloseButton="true"
			       titleIcon="@Embed(source='assets/check.png')">
		        <mx:Tile x="10" y="20" id="drawsp1" width="100%" backgroundColor="#808080"  borderColor="#808080" themeColor="#808080">
	            <mx:Repeater dataProvider="{shapeArrayApi.source}" id="myShp">
		            <mx:HBox width="50" height="50" borderColor="#efefef" themeColor="#efefef" verticalAlign="middle" horizontalAlign="center" verticalScrollPolicy="off" horizontalScrollPolicy="off">
		        		<mx:Image
		        			height="50" 
		        			width="50" 
		        			source="{myApiUrl+'/'+myShp.currentItem.image}" 
		        			click="shape(event.currentTarget.getRepeaterItem().image,event.currentTarget.getRepeaterItem().sku)" />
		        	</mx:HBox>	
	            </mx:Repeater>    
	        </mx:Tile>
	        <mx:ControlBar>
	        	<mx:CheckBox id="checkBox" label="isMoveable:" labelPlacement="left" selected="true" change="checkBox_change(event);" />
	        </mx:ControlBar>  
	</mx:TitleWindow> 
	<!--Shapes-->
	<!--ArcText managemant tool-->
	 	<mx:TitleWindow id="window" 
	            	x="300" 
	            	y="100" 
	            	visible="false" 
	            	width="403"
	            	height="420"
	            	borderAlpha="1"  
	            	verticalScrollPolicy="off" 
	            	horizontalScrollPolicy="off"
	            	title="Arc Text Editor" 
					status="Movable too"
					close="titleWin_close(event);"
					showCloseButton="true"
			       titleIcon="@Embed(source='assets/check.png')" borderColor="#CCCCCC">
			    <mx:HBox horizontalGap="2" horizontalScrollPolicy="off" verticalScrollPolicy="off">
					<mx:CheckBox label="Movable?" selected="true" id="movableCheckBox" fontWeight="bold"/>
					<mx:CheckBox label="Resizable?" selected="true" id="resizableCheckBox" fontWeight="bold"/>
					<mx:ColorPicker id="drawtextcolorPicker" colorField="value" editable="false" selectedColor="#000000" change="TextOnColorChange(event);"/>
				</mx:HBox>
	            <mx:TextInput id="myActTextRound" text="write your text here."/>
	        	<mx:Button label="Draw Arc Text" click="drawText()" />
				<mx:HBox width="329">
					<mx:Label name="Radius" text="Radius"/>
					<mx:Spacer width="120"/>
					<mx:Label name="Charater Space" text="Charater Space"/>	
				</mx:HBox>
	            <mx:HBox>
	           		<mx:HSlider id="radiuss" x="124" y="529" allowTrackClick="true" values="[62]"  minimum="25" maximum="200" snapInterval="1" enabled="true" change="getNewWidthHeights(event);"/>
					<mx:HSlider id="space" x="363" y="529" allowTrackClick="true" values="[15]" minimum="0" maximum="25" snapInterval="1" enabled="true" change="drawsChange(event);" />
				</mx:HBox>
				<mx:HBox>
					<mx:Label name="Font Size" text="Font Size"/>
					<mx:Spacer width="80"/>
					<mx:Label name="Angular Offset" text="Angular Offset"/>	
				</mx:HBox>
	            <mx:HBox>
	            	<mx:HSlider id="fontsize" x="550" y="529" allowTrackClick="true" values="[14]" minimum="6" maximum="50" snapInterval="1" enabled="true" change="drawsChange(event);" />
	           		<mx:HSlider id="angularOffsets" x="550" y="550" allowTrackClick="true" values="[125]" minimum="0.00" maximum="360" snapInterval="1" enabled="true" change="drawsChange(event);" />
				</mx:HBox>
				<mx:HBox>
					<mx:Label name="Angle Leading" text="Angle Leading" visible="false"/>
				</mx:HBox>
	            <mx:HBox>
	           		<mx:HSlider id="angleleading" visible="false" x="550" y="680" allowTrackClick="true" values="[10]" minimum="-10" maximum="360" snapInterval="1" enabled="true" change="drawsChange(event);" />
				</mx:HBox>
				
				      
	          	<mx:HBox>
	          		<mx:Button label="Change Orient" x="650" id="cirOri" click="orientation()" />
					<mx:Button label="Change Orient New" x="800" id="cirOriNew" click="orientationNew()"/> 
	          	</mx:HBox>
	          	<mx:Canvas width="213" height="136" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	          	  	<mx:Image toolTip="LeftMove" id="Left1" source="picture/blue_left.png" width="28" height="21" x="99" y="50" click="moveLeft()"/>
		          	<mx:Image toolTip="Up Move" id="up" source="picture/blue_up.png" width="21" height="30" x="90" y="30" click="moveUp()"/>
		          	<mx:Image toolTip="Down Move" id="down" source="picture/blue_dwn.png" width="21" height="28"   x="90" y="60" click="moveDown()"/>
		          	<mx:Image toolTip="RightMove" id="Right1" source="picture/blue_right.png" width="28" height="21" x="72" y="50" click="moveRight()"/>
	          	</mx:Canvas>
	       <mx:ControlBar>
	       	<mx:CheckBox id="checkBoxwindow" label="isMoveable:" labelPlacement="left" selected="true" change="checkBox_change(event);" />
	       </mx:ControlBar>   	
	</mx:TitleWindow>
	<!--ArcText managemant tool-->
	<!--Email box-->
	<mx:TitleWindow id="emails" 
	            	x="200" 
	            	y="100" visible="false" 
	            	width="390"
	            	height="410" 
	            	verticalScrollPolicy="off" 
	            	horizontalScrollPolicy="off"
	            	title="Contact us"  
					status="Movable too"
					close="titleWin_close(event);" 
					showCloseButton="true">
			<mx:Label text="Contact us"/>		
			<mx:Spacer width="20"/>		
			<mx:Label id="resultLabel" width="360"/>
			<mx:Form width="360">
				<mx:FormItem label="Name :">
					<mx:TextInput id="senderName"/>
				</mx:FormItem>
			<mx:FormItem label="Email :">
				<mx:TextInput id="senderEmail"/>
			</mx:FormItem>
			<mx:FormItem label="Subject :">
				<mx:TextInput id="emailSubject"/>
			</mx:FormItem>
			<mx:FormItem label="Message :">
				<mx:TextArea id="emailMessage" height="132" width="213"/>
			</mx:FormItem>
		</mx:Form>
		
		<mx:Button label="Send" click="sendMail()" x="138" y="274"/>
		<mx:ControlBar>
	       	<mx:CheckBox id="checkBoxEmail" label="isMoveable:" labelPlacement="left" selected="true" change="checkBox_change(event);" />
	       	<mx:Button label="Cancel" click="PopUpManager.removePopUp(emails);"/> 
	    </mx:ControlBar>  
	</mx:TitleWindow>	
	<!--Email box-->
	<!--Fileupolad box-->
	<mx:TitleWindow id="upload" 
	            	x="200" 
	            	y="100" visible="false" 
	            	width="350"
	            	height="350" 
	            	verticalScrollPolicy="off" 
	            	horizontalScrollPolicy="off"
	            	title="Image Upload" 
					status="Movable too"
					close="titleWin_close(event);" 
					showCloseButton="true">
					
		<fileupload:FileUpload
			width="100%" height="100%"  
			uploadType="image" 
			randNumber="{randomNum}"
			uploadUrl="{_strUploadScript}"
			uploadComplete="{displayAssets(randomNum, 'image')}" 
			uploadIOError="Alert.show('IO Error in uploading file.', 'Error')" 
			uploadSecurityError="Alert.show('Security Error in uploading file.', 'Error')"/>
		
		 <mx:ControlBar>
	       	<mx:CheckBox id="checkBoxupload" label="isMoveable:" labelPlacement="left" selected="true" change="checkBox_change(event);" />
	     </mx:ControlBar> 			
		</mx:TitleWindow>
		
		
		<mx:TitleWindow id="uploadfont" 
	            	x="200" 
	            	y="100" visible="false" 
	            	width="350"
	            	height="350" 
	            	verticalScrollPolicy="off" 
	            	horizontalScrollPolicy="off"
	            	title="Font Upload" 
					status="Movable too"
					close="titleWin_close(event);" 
					showCloseButton="true">
					
		<fileupload:FileUpload
			width="100%" height="100%" uploadType="font" randNumber="{randomNum}"
			uploadUrl="{_strUploadScript}"
			uploadComplete="{displayAssets(randomNum, 'font')}" 
			uploadIOError="Alert.show('IO Error in uploading file.', 'Error')" 
			uploadSecurityError="Alert.show('Security Error in uploading file.', 'Error')"/>
		 <mx:ControlBar>
	       	<mx:CheckBox id="checkuploadfont" label="isMoveable:" labelPlacement="left" selected="true" change="checkBox_change(event);" />
	       </mx:ControlBar> 			
		</mx:TitleWindow>
		<mx:TitleWindow id="vectorImageUpload" 
	            	x="200" 
	            	y="100" visible="false" 
	            	width="350"
	            	height="350" 
	            	verticalScrollPolicy="off" 
	            	horizontalScrollPolicy="off"
	            	title="Upload Vector Image" 
					status="Movable too"
					close="titleWin_close(event);" 
					showCloseButton="true">
					
		<fileupload:FileUpload
			width="100%" height="100%" uploadType="vector" randNumber="{randomNum}"
			uploadUrl="{_strUploadScript}"
			uploadComplete="{displayAssetssvg(randomNum, 'vector')}" 
			uploadIOError="Alert.show('IO Error in uploading file.', 'Error')" 
			uploadSecurityError="Alert.show('Security Error in uploading file.', 'Error')"/>
		<mx:ControlBar>
	       	<mx:CheckBox id="checkBoxvectorImageUpload" label="isMoveable:" labelPlacement="left" selected="true" change="checkBox_change(event);" />
	       </mx:ControlBar>			
		</mx:TitleWindow>
			
		<!--Fileupolad box-->
		
		
		<mx:TitleWindow id="dropShadow" 
	            	x="500" 
	            	y="100" 
	            	visible="false" 
	            	width="350"
	            	height="250" paddingTop="20" paddingLeft="20"
	            	
	            	verticalScrollPolicy="off" 
	            	horizontalScrollPolicy="off"
	            	title="Set TextArea Shadow" 
					status="Movable too"
					close="titleWin_close(event);"
					showCloseButton="true">
		
		
	       		 <mx:HBox>
	            	<mx:Label text="dropShadowEnabled:"/>
	                <mx:CheckBox id="shadowcheckBox" selected="true" click="OnShadowcolor();" />
	            </mx:HBox>
	            <mx:HBox>
	            	<mx:Label text="borderEnabled:"/>
	                <mx:CheckBox id="bordercheckBox" selected="false" click="OnShadowcolor();" />
	            </mx:HBox>
	            <mx:HBox>
	           		 <mx:Label text="Border Color:"/>
	                 <mx:ColorPicker id="borderColorPicker" change="OnShadowcolor();" />
	            </mx:HBox>
	            <mx:HBox>
	            <mx:Label text="dropShadowColor:"/>
	                <mx:ColorPicker id="shadowColorPicker" dataProvider="{simpleDP}" change="changeEvt(event);"/>
	               	</mx:HBox>
	            <mx:HBox>
	            	<mx:Label text="shadowDirection:"/>
	                <mx:ComboBox id="shadowcomboBox" selectedIndex="1" change="OnShadowcolor();">
	                    <mx:dataProvider>
	                        <mx:Array>
	                            <mx:Object label="left" />
	                            <mx:Object label="center" />
	                            <mx:Object label="right" />
	                        </mx:Array>
	                    </mx:dataProvider>
	                </mx:ComboBox>
	            </mx:HBox>
	            <mx:HBox>
	            	<mx:Label text="shadowDistance:"/>
	                <mx:HSlider id="shadowSlider"
	                        minimum="-10"
	                        maximum="10"
	                        value="0"
	                        labels="[-10,-5,0,5,10]"
	                        liveDragging="true"
	                        snapInterval="1"
	                        tickInterval="2" change="OnShadowcolor();"/>
	       		</mx:HBox>
	       		<mx:ControlBar>
	       	<mx:CheckBox id="checkBoxdropShadow" label="isMoveable:" labelPlacement="left" selected="true" change="checkBox_change(event);" />
	       </mx:ControlBar>	
	          
	</mx:TitleWindow>		
			
		<!-- End popup windows -->
		<!-- Start Rollover & rollout effect for thambnail -->
		
		<mx:Parallel id="out">
			<mx:Zoom duration="100" zoomHeightTo="1.0" zoomWidthTo="1.0"/>
			<mx:Glow id="glowImage" duration="300" alphaFrom="1.0" alphaTo="1.0" blurXFrom="0.0" blurXTo="30." blurYFrom="0.0" blurYTo="30.0" color="0xffffff"/>  	
		</mx:Parallel>
		<mx:Parallel id="over">
			<mx:Zoom duration="100" zoomHeightTo="1.4" zoomWidthTo="1.4"/>
		</mx:Parallel>
		
			<!-- end Rollover & rollout effect for thambnail -->
	<!--End Arc Text Editor, Thumbnail Effect & popup window -->	
	
	
	<mx:EmailValidator id="mailValidator" source="{senderEmail}" property="text" requiredFieldError="Enter your email" required="true" />
	<mx:StringValidator id="nameValidator"  
		source="{senderName}" property="text" 
		requiredFieldError="Enter yourr name" required="true"/>
	<mx:StringValidator id="emailValidator"  
		source="{emailMessage}" property="text" 
		requiredFieldError="Enter your message" required="true"/>
	 <mx:Glow id="glowImages" duration="1000" 
        alphaFrom="1.0" alphaTo="0.3" 
        blurXFrom="0.0" blurXTo="50.0" 
        blurYFrom="0.0" blurYTo="50.0" 
        color="0x00FF00"/>
    <mx:Glow id="unglowImage" duration="800"  
            alphaFrom="1" alphaTo="0"
            blurXFrom="30.0" blurXTo="0.0"
            blurYFrom="30.0" blurYTo="0.0"  strength="2"
            color="0x000000" target="{previewImg}"/>
	    			
	<mx:DropShadowFilter id="dropShaText" color="{colorPickerTextShade.selectedColor}"/>
	<!--<mx:Style source="http://localhost/signimal/signimal_flex_php/uploads/font/style.css"/>-->
</mx:Application>